{
	"id": "ad4a2d5bd7c31c51443ba7eb319dcd0e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"BBNEventERC721.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.14;\r\n\r\nimport {ERC721A} from \"./utils/ERC721A.sol\";\r\n\r\n/**\r\n* @title BBN Event NFT Contract.\r\n* @author Anthony (fps) https://github.com/0xfps.\r\n* @dev Minted to every curator who lists an event.\r\n*/\r\ncontract BBNEventERC721 is ERC721A {\r\n    constructor(string memory name_, string memory symbol_)\r\n    ERC721A(name_, symbol_)\r\n    {}\r\n}"
			},
			"utils/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\n// \t _____     ______     ______     ______     ______     ______     _____\r\n//  /\\  __-.  /\\  __ \\   /\\  ___\\   /\\  ___\\   /\\  == \\   /\\  ___\\   /\\  __-.\r\n//  \\ \\ \\/\\ \\ \\ \\  __ \\  \\ \\ \\____  \\ \\ \\____  \\ \\  __<   \\ \\  __\\   \\ \\ \\/\\ \\\r\n//   \\ \\____-  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\_____\\  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\____-\r\n//    \\/____/   \\/_/\\/_/   \\/_____/   \\/_____/   \\/_/ /_/   \\/_____/   \\/____/\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./IERC721A.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension. Built to optimize for lower gas during batch mints.\r\n *\r\n * Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\r\n *\r\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\r\n *\r\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\r\n */\r\nabstract contract ERC721A is Context, ERC165, IERC721A {\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    // The tokenId of the next token to be minted.\r\n    uint256 internal _currentIndex;\r\n\r\n    // The number of tokens burned.\r\n    uint256 internal _burnCounter;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned. See _ownershipOf implementation for details.\r\n    mapping(uint256 => TokenOwnership) internal _ownerships;\r\n\r\n    // Mapping owner address to address data\r\n    mapping(address => AddressData) private _addressData;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _currentIndex = _startTokenId();\r\n    }\r\n\r\n    /**\r\n     * To change the starting tokenId, please override this function.\r\n     */\r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\r\n     */\r\n    function totalSupply() public view override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than _currentIndex - _startTokenId() times\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view returns (uint256) {\r\n        // Counter underflow is impossible as _currentIndex does not decrement,\r\n        // and it is initialized to _startTokenId()\r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return interfaceId == type(IERC721).interfaceId || interfaceId == type(IERC721Metadata).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view override returns (uint256) {\r\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\r\n        return uint256(_addressData[owner].balance);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens minted by `owner`.\r\n     */\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        return uint256(_addressData[owner].numberMinted);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens burned by or on behalf of `owner`.\r\n     */\r\n    function _numberBurned(address owner) internal view returns (uint256) {\r\n        return uint256(_addressData[owner].numberBurned);\r\n    }\r\n\r\n    /**\r\n     * Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     */\r\n    function _getAux(address owner) internal view returns (uint64) {\r\n        return _addressData[owner].aux;\r\n    }\r\n\r\n    /**\r\n     * Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     * If there are multiple variables, please pack them into a uint64.\r\n     */\r\n    function _setAux(address owner, uint64 aux) internal {\r\n        _addressData[owner].aux = aux;\r\n    }\r\n\r\n    /**\r\n     * Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\r\n     */\r\n    function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\r\n        uint256 curr = tokenId;\r\n\r\n        unchecked {\r\n            if (_startTokenId() <= curr)\r\n                if (curr < _currentIndex) {\r\n                    TokenOwnership memory ownership = _ownerships[curr];\r\n                    if (!ownership.burned) {\r\n                        if (ownership.addr != address(0)) {\r\n                            return ownership;\r\n                        }\r\n                        // Invariant:\r\n                        // There will always be an ownership that has an address and is not burned\r\n                        // before an ownership that does not have an address and is not burned.\r\n                        // Hence, curr will not underflow.\r\n                        while (true) {\r\n                            curr--;\r\n                            ownership = _ownerships[curr];\r\n                            if (ownership.addr != address(0)) {\r\n                                return ownership;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n        revert OwnerQueryForNonexistentToken();\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view override returns (address) {\r\n        return _ownershipOf(tokenId).addr;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overriden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public override {\r\n        address owner = ERC721A.ownerOf(tokenId);\r\n        if (to == owner) revert ApprovalToCurrentOwner();\r\n\r\n        if (_msgSender() != owner)\r\n            if (!isApprovedForAll(owner, _msgSender())) {\r\n                revert ApprovalCallerNotOwnerNorApproved();\r\n            }\r\n\r\n        _approve(to, tokenId, owner);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view override returns (address) {\r\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        if (operator == _msgSender()) revert ApproveToCaller();\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public virtual override {\r\n        _transfer(from, to, tokenId);\r\n        if (to.isContract())\r\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted (`_mint`),\r\n     */\r\n    function _exists(uint256 tokenId) internal view returns (bool) {\r\n        return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned;\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal {\r\n        _safeMint(to, quantity, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement\r\n     *   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // balance or numberMinted overflow if current value of either + quantity > 1.8e19 (2**64) - 1\r\n        // updatedIndex overflows if _currentIndex + quantity > 1.2e77 (2**256) - 1\r\n        unchecked {\r\n            _addressData[to].balance += uint64(quantity);\r\n            _addressData[to].numberMinted += uint64(quantity);\r\n\r\n            _ownerships[startTokenId].addr = to;\r\n            _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\r\n\r\n            uint256 updatedIndex = startTokenId;\r\n            uint256 end = updatedIndex + quantity;\r\n\r\n            if (to.isContract()) {\r\n                do {\r\n                    emit Transfer(address(0), to, updatedIndex);\r\n                    if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {\r\n                        revert TransferToNonERC721ReceiverImplementer();\r\n                    }\r\n                } while (updatedIndex < end);\r\n                // Reentrancy protection\r\n                if (_currentIndex != startTokenId) revert();\r\n            } else {\r\n                do {\r\n                    emit Transfer(address(0), to, updatedIndex++);\r\n                } while (updatedIndex < end);\r\n            }\r\n            _currentIndex = updatedIndex;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 quantity) internal {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // balance or numberMinted overflow if current value of either + quantity > 1.8e19 (2**64) - 1\r\n        // updatedIndex overflows if _currentIndex + quantity > 1.2e77 (2**256) - 1\r\n        unchecked {\r\n            _addressData[to].balance += uint64(quantity);\r\n            _addressData[to].numberMinted += uint64(quantity);\r\n\r\n            _ownerships[startTokenId].addr = to;\r\n            _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\r\n\r\n            uint256 updatedIndex = startTokenId;\r\n            uint256 end = updatedIndex + quantity;\r\n\r\n            do {\r\n                emit Transfer(address(0), to, updatedIndex++);\r\n            } while (updatedIndex < end);\r\n\r\n            _currentIndex = updatedIndex;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) private {\r\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);\r\n\r\n        if (prevOwnership.addr != from) revert TransferFromIncorrectOwner();\r\n\r\n        bool isApprovedOrOwner = (_msgSender() == from || isApprovedForAll(from, _msgSender()) || getApproved(tokenId) == _msgSender());\r\n\r\n        if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\r\n        if (to == address(0)) revert TransferToZeroAddress();\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId, from);\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n        unchecked {\r\n            _addressData[from].balance -= 1;\r\n            _addressData[to].balance += 1;\r\n\r\n            TokenOwnership storage currSlot = _ownerships[tokenId];\r\n            currSlot.addr = to;\r\n            currSlot.startTimestamp = uint64(block.timestamp);\r\n\r\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\r\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n            uint256 nextTokenId = tokenId + 1;\r\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\r\n            if (nextSlot.addr == address(0)) {\r\n                // This will suffice for checking _exists(nextTokenId),\r\n                // as a burned slot cannot contain the zero address.\r\n                if (nextTokenId != _currentIndex) {\r\n                    nextSlot.addr = from;\r\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_burn(tokenId, false)`.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);\r\n\r\n        address from = prevOwnership.addr;\r\n\r\n        if (approvalCheck) {\r\n            bool isApprovedOrOwner = (_msgSender() == from || isApprovedForAll(from, _msgSender()) || getApproved(tokenId) == _msgSender());\r\n\r\n            if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId, from);\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n        unchecked {\r\n            AddressData storage addressData = _addressData[from];\r\n            addressData.balance -= 1;\r\n            addressData.numberBurned += 1;\r\n\r\n            // Keep track of who burned the token, and the timestamp of burning.\r\n            TokenOwnership storage currSlot = _ownerships[tokenId];\r\n            currSlot.addr = from;\r\n            currSlot.startTimestamp = uint64(block.timestamp);\r\n            currSlot.burned = true;\r\n\r\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the burn initiator owns it.\r\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n            uint256 nextTokenId = tokenId + 1;\r\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\r\n            if (nextSlot.addr == address(0)) {\r\n                // This will suffice for checking _exists(nextTokenId),\r\n                // as a burned slot cannot contain the zero address.\r\n                if (nextTokenId != _currentIndex) {\r\n                    nextSlot.addr = from;\r\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits a {Approval} event.\r\n     */\r\n    function _approve(\r\n        address to,\r\n        uint256 tokenId,\r\n        address owner\r\n    ) private {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param _data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\r\n            return retval == IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            } else {\r\n                assembly {\r\n                    revert(add(32, reason), mload(reason))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\r\n     * And also called before burning one token.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\r\n     * minting.\r\n     * And also called after one token has been burned.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` has been minted for `to`.\r\n     * - When `to` is zero, `tokenId` has been burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n}"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"utils/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\n// \t _____     ______     ______     ______     ______     ______     _____\r\n//  /\\  __-.  /\\  __ \\   /\\  ___\\   /\\  ___\\   /\\  == \\   /\\  ___\\   /\\  __-.\r\n//  \\ \\ \\/\\ \\ \\ \\  __ \\  \\ \\ \\____  \\ \\ \\____  \\ \\  __<   \\ \\  __\\   \\ \\ \\/\\ \\\r\n//   \\ \\____-  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\_____\\  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\____-\r\n//    \\/____/   \\/_/\\/_/   \\/_____/   \\/_____/   \\/_/ /_/   \\/_____/   \\/____/\r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @title IERC721 Extension.\r\n * @author Daccred.\r\n * @dev IERC721 Extensions giving us access to ERC721 core capabilities.\r\n */\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface IERC721A is IERC721, IERC721Metadata {\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller cannot approve to their own address.\r\n     */\r\n    error ApproveToCaller();\r\n\r\n    /**\r\n     * The caller cannot approve to the current owner.\r\n     */\r\n    error ApprovalToCurrentOwner();\r\n\r\n    /**\r\n     * Cannot query the balance for the zero address.\r\n     */\r\n    error BalanceQueryForZeroAddress();\r\n\r\n    /**\r\n     * Cannot mint to the zero address.\r\n     */\r\n    error MintToZeroAddress();\r\n\r\n    /**\r\n     * The quantity of tokens minted must be more than zero.\r\n     */\r\n    error MintZeroQuantity();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token must be owned by `from`.\r\n     */\r\n    error TransferFromIncorrectOwner();\r\n\r\n    /**\r\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\r\n     */\r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n    /**\r\n     * Cannot transfer to the zero address.\r\n     */\r\n    error TransferToZeroAddress();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error URIQueryForNonexistentToken();\r\n\r\n    // Compiler will pack this into a single 256bit word.\r\n    struct TokenOwnership {\r\n        // The address of the owner.\r\n        address addr;\r\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\r\n        uint64 startTimestamp;\r\n        // Whether the token has been burned.\r\n        bool burned;\r\n    }\r\n\r\n    // Compiler will pack this into a single 256bit word.\r\n    struct AddressData {\r\n        // Realistically, 2**64-1 is more than enough.\r\n        uint64 balance;\r\n        // Keeps track of mint count with minimal overhead for tokenomics.\r\n        uint64 numberMinted;\r\n        // Keeps track of burn count with minimal overhead for tokenomics.\r\n        uint64 numberBurned;\r\n        // For miscellaneous variable(s) pertaining to the address\r\n        // (e.g. number of whitelist mint slots used).\r\n        // If there are multiple variables, please pack them into a uint64.\r\n        uint64 aux;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens stored by the contract.\r\n     *\r\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a975ec4b4b8e1575ab7699b0677dc82765f1ace2b09eb2e6f4a2057d037604ec64736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a975ec4b4b8e1575ab7699b0677dc82765f1ace2b09eb2e6f4a2057d037604ec64736f6c63430008100033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 PUSH22 0xEC4B4B8E1575AB7699B0677DC82765F1ACE2B09EB2E6 DELEGATECALL LOG2 SDIV PUSH30 0x37604EC64736F6C63430008100033000000000000000000000000000000 ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a975ec4b4b8e1575ab7699b0677dc82765f1ace2b09eb2e6f4a2057d037604ec64736f6c63430008100033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 PUSH22 0xEC4B4B8E1575AB7699B0677DC82765F1ACE2B09EB2E6 DELEGATECALL LOG2 SDIV PUSH30 0x37604EC64736F6C63430008100033000000000000000000000000000000 ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a975ec4b4b8e1575ab7699b0677dc82765f1ace2b09eb2e6f4a2057d037604ec64736f6c63430008100033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"BBNEventERC721.sol",
								"utils/ERC721A.sol",
								"utils/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a346dafe4f9241cb1c14defa7852ed6c65685a731570862a9df4d4b0248f660164736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a346dafe4f9241cb1c14defa7852ed6c65685a731570862a9df4d4b0248f660164736f6c63430008100033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 CHAINID 0xDA INVALID 0x4F SWAP3 COINBASE 0xCB SHR EQ 0xDE STATICCALL PUSH25 0x52ED6C65685A731570862A9DF4D4B0248F660164736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "161:2235:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a346dafe4f9241cb1c14defa7852ed6c65685a731570862a9df4d4b0248f660164736f6c63430008100033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 CHAINID 0xDA INVALID 0x4F SWAP3 COINBASE 0xCB SHR EQ 0xDE STATICCALL PUSH25 0x52ED6C65685A731570862A9DF4D4B0248F660164736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "161:2235:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a346dafe4f9241cb1c14defa7852ed6c65685a731570862a9df4d4b0248f660164736f6c63430008100033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"BBNEventERC721.sol",
								"utils/ERC721A.sol",
								"utils/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BBNEventERC721.sol": {
				"BBNEventERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Anthony (fps) https://github.com/0xfps.",
						"details": "Minted to every curator who lists an event.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "BBN Event NFT Contract.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BBNEventERC721.sol\":259:396  contract BBNEventERC721 is ERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"BBNEventERC721.sol\":301:393  constructor(string memory name_, string memory symbol_)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"BBNEventERC721.sol\":370:375  name_ */\n  dup2\n    /* \"BBNEventERC721.sol\":377:384  symbol_ */\n  dup2\n    /* \"utils/ERC721A.sol\":2339:2344  name_ */\n  dup2\n    /* \"utils/ERC721A.sol\":2331:2336  _name */\n  0x02\n    /* \"utils/ERC721A.sol\":2331:2344  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"utils/ERC721A.sol\":2365:2372  symbol_ */\n  dup1\n    /* \"utils/ERC721A.sol\":2355:2362  _symbol */\n  0x03\n    /* \"utils/ERC721A.sol\":2355:2372  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"utils/ERC721A.sol\":2399:2414  _startTokenId() */\n  tag_10\n    /* \"utils/ERC721A.sol\":2399:2412  _startTokenId */\n  shl(0x20, tag_11)\n    /* \"utils/ERC721A.sol\":2399:2414  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"utils/ERC721A.sol\":2383:2396  _currentIndex */\n  0x00\n    /* \"utils/ERC721A.sol\":2383:2414  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"utils/ERC721A.sol\":2264:2422  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"BBNEventERC721.sol\":301:393  constructor(string memory name_, string memory symbol_)... */\n  pop\n  pop\n    /* \"BBNEventERC721.sol\":259:396  contract BBNEventERC721 is ERC721A {... */\n  jump(tag_13)\n    /* \"utils/ERC721A.sol\":2519:2611  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_11:\n    /* \"utils/ERC721A.sol\":2575:2582  uint256 */\n  0x00\n    /* \"utils/ERC721A.sol\":2519:2611  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_15:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_17:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_18:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_19:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_20:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_21:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_22:\n    /* \"#utility.yul\":957:984   */\n  tag_56\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_58\n  tag_21\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1030:1118   */\ntag_57:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_23:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_60\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_61\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_22\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_24:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_64\n  tag_21\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1434:1490   */\ntag_63:\n    /* \"#utility.yul\":1508:1537   */\n  tag_65\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_20\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_25:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_67:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_26:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_71\n    /* \"#utility.yul\":1992:2041   */\n  tag_72\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_24\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1976:2042   */\n  tag_23\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_74\n  tag_19\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2117:2229   */\ntag_73:\n    /* \"#utility.yul\":2238:2290   */\n  tag_75\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_25\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_27:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_78\n  tag_18\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2399:2521   */\ntag_77:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_79\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_26\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_82\n  tag_16\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2801:2920   */\ntag_81:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_84\n  tag_17\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2996:3113   */\ntag_83:\n    /* \"#utility.yul\":3137:3211   */\n  tag_85\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_27\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_87\n  tag_17\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3298:3415   */\ntag_86:\n    /* \"#utility.yul\":3439:3513   */\n  tag_88\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_27\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_28:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_29:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_30:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_92:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_94\n  tag_29\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4057:4141   */\ntag_93:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_31:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_32:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_33:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_34:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_99\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_33\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4772:4811   */\n  tag_100\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_33\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_35:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_36:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_37:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_104\n    /* \"#utility.yul\":5161:5195   */\n  tag_105\n    /* \"#utility.yul\":5170:5194   */\n  tag_106\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5161:5195   */\n  tag_36\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5143:5196   */\n  tag_35\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_38:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_39:\n    /* \"#utility.yul\":5399:5438   */\n  tag_109\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_37\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5460:5551   */\n  tag_110\n    /* \"#utility.yul\":5509:5550   */\n  tag_111\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_38\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_40:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_41:\n    /* \"#utility.yul\":5720:5752   */\n  tag_114\n  tag_40\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5761:5826   */\n  tag_115\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_39\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_42:\n    /* \"#utility.yul\":5898:6018   */\ntag_117:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_120\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_41\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_117)\ntag_119:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_43:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_123\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_31\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6249:6278   */\n  tag_124\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_32\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_125:\n    /* \"#utility.yul\":6476:6556   */\n  tag_126\n    /* \"#utility.yul\":6532:6554   */\n  tag_127\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_32\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_42\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_122:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_44:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_45:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_130\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_44\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_46:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_132\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_45\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_8:\n    /* \"#utility.yul\":7293:7330   */\n  tag_134\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_28\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_136\n  tag_21\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7381:7437   */\ntag_135:\n    /* \"#utility.yul\":7461:7499   */\n  tag_137\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_30\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7546:7613   */\n  tag_138\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_43\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_140\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_141:\n    /* \"#utility.yul\":8487:8554   */\n  tag_142\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_46\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_139)\n    /* \"#utility.yul\":7708:8326   */\ntag_140:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_143\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_31\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_144:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_144)\ntag_146:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_148\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_45\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_147:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_139:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"BBNEventERC721.sol\":259:396  contract BBNEventERC721 is ERC721A {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BBNEventERC721.sol\":259:396  contract BBNEventERC721 is ERC721A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"utils/ERC721A.sol\":3505:3771  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/ERC721A.sol\":6670:6770  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/ERC721A.sol\":8196:8400  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/ERC721A.sol\":7736:8130  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"utils/ERC721A.sol\":2745:3057  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/ERC721A.sol\":9061:9231  function transferFrom(... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"utils/ERC721A.sol\":9302:9487  function safeTransferFrom(... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"utils/ERC721A.sol\":6478:6603  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/ERC721A.sol\":3835:4041  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/ERC721A.sol\":6839:6943  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/ERC721A.sol\":8472:8759  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"utils/ERC721A.sol\":9558:9950  function safeTransferFrom(... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"utils/ERC721A.sol\":7014:7332  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/ERC721A.sol\":8830:8994  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/ERC721A.sol\":3505:3771  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"utils/ERC721A.sol\":3607:3611  bool */\n      0x00\n        /* \"utils/ERC721A.sol\":3646:3671  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"utils/ERC721A.sol\":3631:3671  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"utils/ERC721A.sol\":3631:3642  interfaceId */\n      dup3\n        /* \"utils/ERC721A.sol\":3631:3671  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"utils/ERC721A.sol\":3631:3723  interfaceId == type(IERC721).interfaceId || interfaceId == type(IERC721Metadata).interfaceId */\n      dup1\n      tag_81\n      jumpi\n      pop\n        /* \"utils/ERC721A.sol\":3690:3723  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"utils/ERC721A.sol\":3675:3723  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"utils/ERC721A.sol\":3675:3686  interfaceId */\n      dup3\n        /* \"utils/ERC721A.sol\":3675:3723  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"utils/ERC721A.sol\":3631:3723  interfaceId == type(IERC721).interfaceId || interfaceId == type(IERC721Metadata).interfaceId */\n    tag_81:\n        /* \"utils/ERC721A.sol\":3631:3763  interfaceId == type(IERC721).interfaceId || interfaceId == type(IERC721Metadata).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_82\n      jumpi\n      pop\n        /* \"utils/ERC721A.sol\":3727:3763  super.supportsInterface(interfaceId) */\n      tag_83\n        /* \"utils/ERC721A.sol\":3751:3762  interfaceId */\n      dup3\n        /* \"utils/ERC721A.sol\":3727:3750  super.supportsInterface */\n      tag_84\n        /* \"utils/ERC721A.sol\":3727:3763  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_83:\n        /* \"utils/ERC721A.sol\":3631:3763  interfaceId == type(IERC721).interfaceId || interfaceId == type(IERC721Metadata).interfaceId || super.supportsInterface(interfaceId) */\n    tag_82:\n        /* \"utils/ERC721A.sol\":3624:3763  return interfaceId == type(IERC721).interfaceId || interfaceId == type(IERC721Metadata).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":3505:3771  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":6670:6770  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"utils/ERC721A.sol\":6724:6737  string memory */\n      0x60\n        /* \"utils/ERC721A.sol\":6757:6762  _name */\n      0x02\n        /* \"utils/ERC721A.sol\":6750:6762  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":6670:6770  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"utils/ERC721A.sol\":8196:8400  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_33:\n        /* \"utils/ERC721A.sol\":8264:8271  address */\n      0x00\n        /* \"utils/ERC721A.sol\":8289:8305  _exists(tokenId) */\n      tag_93\n        /* \"utils/ERC721A.sol\":8297:8304  tokenId */\n      dup3\n        /* \"utils/ERC721A.sol\":8289:8296  _exists */\n      tag_94\n        /* \"utils/ERC721A.sol\":8289:8305  _exists(tokenId) */\n      jump\t// in\n    tag_93:\n        /* \"utils/ERC721A.sol\":8284:8348  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_95\n      jumpi\n        /* \"utils/ERC721A.sol\":8314:8348  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/ERC721A.sol\":8284:8348  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_95:\n        /* \"utils/ERC721A.sol\":8368:8383  _tokenApprovals */\n      0x06\n        /* \"utils/ERC721A.sol\":8368:8392  _tokenApprovals[tokenId] */\n      0x00\n        /* \"utils/ERC721A.sol\":8384:8391  tokenId */\n      dup4\n        /* \"utils/ERC721A.sol\":8368:8392  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":8361:8392  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":8196:8400  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":7736:8130  function approve(address to, uint256 tokenId) public override {... */\n    tag_39:\n        /* \"utils/ERC721A.sol\":7809:7822  address owner */\n      0x00\n        /* \"utils/ERC721A.sol\":7825:7849  ERC721A.ownerOf(tokenId) */\n      tag_97\n        /* \"utils/ERC721A.sol\":7841:7848  tokenId */\n      dup3\n        /* \"utils/ERC721A.sol\":7825:7840  ERC721A.ownerOf */\n      tag_53\n        /* \"utils/ERC721A.sol\":7825:7849  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_97:\n        /* \"utils/ERC721A.sol\":7809:7849  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":7870:7875  owner */\n      dup1\n        /* \"utils/ERC721A.sol\":7864:7875  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":7864:7866  to */\n      dup4\n        /* \"utils/ERC721A.sol\":7864:7875  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"utils/ERC721A.sol\":7860:7908  if (to == owner) revert ApprovalToCurrentOwner() */\n      tag_98\n      jumpi\n        /* \"utils/ERC721A.sol\":7884:7908  ApprovalToCurrentOwner() */\n      mload(0x40)\n      0x943f7b8c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/ERC721A.sol\":7860:7908  if (to == owner) revert ApprovalToCurrentOwner() */\n    tag_98:\n        /* \"utils/ERC721A.sol\":7941:7946  owner */\n      dup1\n        /* \"utils/ERC721A.sol\":7925:7946  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":7925:7937  _msgSender() */\n      tag_99\n        /* \"utils/ERC721A.sol\":7925:7935  _msgSender */\n      tag_100\n        /* \"utils/ERC721A.sol\":7925:7937  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"utils/ERC721A.sol\":7925:7946  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"utils/ERC721A.sol\":7921:8082  if (_msgSender() != owner)... */\n      tag_101\n      jumpi\n        /* \"utils/ERC721A.sol\":7966:8003  isApprovedForAll(owner, _msgSender()) */\n      tag_102\n        /* \"utils/ERC721A.sol\":7983:7988  owner */\n      dup2\n        /* \"utils/ERC721A.sol\":7990:8002  _msgSender() */\n      tag_103\n        /* \"utils/ERC721A.sol\":7990:8000  _msgSender */\n      tag_100\n        /* \"utils/ERC721A.sol\":7990:8002  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"utils/ERC721A.sol\":7966:7982  isApprovedForAll */\n      tag_78\n        /* \"utils/ERC721A.sol\":7966:8003  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_102:\n        /* \"utils/ERC721A.sol\":7961:8082  if (!isApprovedForAll(owner, _msgSender())) {... */\n      tag_104\n      jumpi\n        /* \"utils/ERC721A.sol\":8031:8066  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/ERC721A.sol\":7961:8082  if (!isApprovedForAll(owner, _msgSender())) {... */\n    tag_104:\n        /* \"utils/ERC721A.sol\":7921:8082  if (_msgSender() != owner)... */\n    tag_101:\n        /* \"utils/ERC721A.sol\":8094:8122  _approve(to, tokenId, owner) */\n      tag_105\n        /* \"utils/ERC721A.sol\":8103:8105  to */\n      dup4\n        /* \"utils/ERC721A.sol\":8107:8114  tokenId */\n      dup4\n        /* \"utils/ERC721A.sol\":8116:8121  owner */\n      dup4\n        /* \"utils/ERC721A.sol\":8094:8102  _approve */\n      tag_106\n        /* \"utils/ERC721A.sol\":8094:8122  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_105:\n        /* \"utils/ERC721A.sol\":7798:8130  {... */\n      pop\n        /* \"utils/ERC721A.sol\":7736:8130  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":2745:3057  function totalSupply() public view override returns (uint256) {... */\n    tag_41:\n        /* \"utils/ERC721A.sol\":2798:2805  uint256 */\n      0x00\n        /* \"utils/ERC721A.sol\":3023:3038  _startTokenId() */\n      tag_108\n        /* \"utils/ERC721A.sol\":3023:3036  _startTokenId */\n      tag_109\n        /* \"utils/ERC721A.sol\":3023:3038  _startTokenId() */\n      jump\t// in\n    tag_108:\n        /* \"utils/ERC721A.sol\":3008:3020  _burnCounter */\n      sload(0x01)\n        /* \"utils/ERC721A.sol\":2992:3005  _currentIndex */\n      sload(0x00)\n        /* \"utils/ERC721A.sol\":2992:3020  _currentIndex - _burnCounter */\n      sub\n        /* \"utils/ERC721A.sol\":2992:3038  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"utils/ERC721A.sol\":2985:3038  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":2745:3057  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"utils/ERC721A.sol\":9061:9231  function transferFrom(... */\n    tag_47:\n        /* \"utils/ERC721A.sol\":9195:9223  _transfer(from, to, tokenId) */\n      tag_111\n        /* \"utils/ERC721A.sol\":9205:9209  from */\n      dup4\n        /* \"utils/ERC721A.sol\":9211:9213  to */\n      dup4\n        /* \"utils/ERC721A.sol\":9215:9222  tokenId */\n      dup4\n        /* \"utils/ERC721A.sol\":9195:9204  _transfer */\n      tag_112\n        /* \"utils/ERC721A.sol\":9195:9223  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_111:\n        /* \"utils/ERC721A.sol\":9061:9231  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":9302:9487  function safeTransferFrom(... */\n    tag_50:\n        /* \"utils/ERC721A.sol\":9440:9479  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_114\n        /* \"utils/ERC721A.sol\":9457:9461  from */\n      dup4\n        /* \"utils/ERC721A.sol\":9463:9465  to */\n      dup4\n        /* \"utils/ERC721A.sol\":9467:9474  tokenId */\n      dup4\n        /* \"utils/ERC721A.sol\":9440:9479  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"utils/ERC721A.sol\":9440:9456  safeTransferFrom */\n      tag_70\n        /* \"utils/ERC721A.sol\":9440:9479  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_114:\n        /* \"utils/ERC721A.sol\":9302:9487  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":6478:6603  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_53:\n        /* \"utils/ERC721A.sol\":6542:6549  address */\n      0x00\n        /* \"utils/ERC721A.sol\":6569:6590  _ownershipOf(tokenId) */\n      tag_116\n        /* \"utils/ERC721A.sol\":6582:6589  tokenId */\n      dup3\n        /* \"utils/ERC721A.sol\":6569:6581  _ownershipOf */\n      tag_117\n        /* \"utils/ERC721A.sol\":6569:6590  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_116:\n        /* \"utils/ERC721A.sol\":6569:6595  _ownershipOf(tokenId).addr */\n      0x00\n      add\n      mload\n        /* \"utils/ERC721A.sol\":6562:6595  return _ownershipOf(tokenId).addr */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":6478:6603  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":3835:4041  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_58:\n        /* \"utils/ERC721A.sol\":3899:3906  uint256 */\n      0x00\n        /* \"utils/ERC721A.sol\":3940:3941  0 */\n      dup1\n        /* \"utils/ERC721A.sol\":3923:3942  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":3923:3928  owner */\n      dup3\n        /* \"utils/ERC721A.sol\":3923:3942  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"utils/ERC721A.sol\":3919:3979  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_119\n      jumpi\n        /* \"utils/ERC721A.sol\":3951:3979  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/ERC721A.sol\":3919:3979  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_119:\n        /* \"utils/ERC721A.sol\":4005:4017  _addressData */\n      0x05\n        /* \"utils/ERC721A.sol\":4005:4024  _addressData[owner] */\n      0x00\n        /* \"utils/ERC721A.sol\":4018:4023  owner */\n      dup4\n        /* \"utils/ERC721A.sol\":4005:4024  _addressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"utils/ERC721A.sol\":4005:4032  _addressData[owner].balance */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":3997:4033  uint256(_addressData[owner].balance) */\n      0xffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":3990:4033  return uint256(_addressData[owner].balance) */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":3835:4041  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":6839:6943  function symbol() public view virtual override returns (string memory) {... */\n    tag_61:\n        /* \"utils/ERC721A.sol\":6895:6908  string memory */\n      0x60\n        /* \"utils/ERC721A.sol\":6928:6935  _symbol */\n      0x03\n        /* \"utils/ERC721A.sol\":6921:6935  return _symbol */\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_87\n      jump\t// in\n    tag_121:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_87\n      jump\t// in\n    tag_122:\n      dup1\n      iszero\n      tag_123\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_124\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_123)\n    tag_124:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_125:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_125\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":6839:6943  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"utils/ERC721A.sol\":8472:8759  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_66:\n        /* \"utils/ERC721A.sol\":8583:8595  _msgSender() */\n      tag_127\n        /* \"utils/ERC721A.sol\":8583:8593  _msgSender */\n      tag_100\n        /* \"utils/ERC721A.sol\":8583:8595  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"utils/ERC721A.sol\":8571:8595  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":8571:8579  operator */\n      dup3\n        /* \"utils/ERC721A.sol\":8571:8595  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"utils/ERC721A.sol\":8567:8621  if (operator == _msgSender()) revert ApproveToCaller() */\n      tag_128\n      jumpi\n        /* \"utils/ERC721A.sol\":8604:8621  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/ERC721A.sol\":8567:8621  if (operator == _msgSender()) revert ApproveToCaller() */\n    tag_128:\n        /* \"utils/ERC721A.sol\":8679:8687  approved */\n      dup1\n        /* \"utils/ERC721A.sol\":8634:8652  _operatorApprovals */\n      0x07\n        /* \"utils/ERC721A.sol\":8634:8666  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"utils/ERC721A.sol\":8653:8665  _msgSender() */\n      tag_129\n        /* \"utils/ERC721A.sol\":8653:8663  _msgSender */\n      tag_100\n        /* \"utils/ERC721A.sol\":8653:8665  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"utils/ERC721A.sol\":8634:8666  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"utils/ERC721A.sol\":8634:8676  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"utils/ERC721A.sol\":8667:8675  operator */\n      dup5\n        /* \"utils/ERC721A.sol\":8634:8676  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"utils/ERC721A.sol\":8634:8687  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"utils/ERC721A.sol\":8732:8740  operator */\n      dup2\n        /* \"utils/ERC721A.sol\":8703:8751  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":8718:8730  _msgSender() */\n      tag_130\n        /* \"utils/ERC721A.sol\":8718:8728  _msgSender */\n      tag_100\n        /* \"utils/ERC721A.sol\":8718:8730  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"utils/ERC721A.sol\":8703:8751  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"utils/ERC721A.sol\":8742:8750  approved */\n      dup4\n        /* \"utils/ERC721A.sol\":8703:8751  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"utils/ERC721A.sol\":8472:8759  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":9558:9950  function safeTransferFrom(... */\n    tag_70:\n        /* \"utils/ERC721A.sol\":9725:9753  _transfer(from, to, tokenId) */\n      tag_133\n        /* \"utils/ERC721A.sol\":9735:9739  from */\n      dup5\n        /* \"utils/ERC721A.sol\":9741:9743  to */\n      dup5\n        /* \"utils/ERC721A.sol\":9745:9752  tokenId */\n      dup5\n        /* \"utils/ERC721A.sol\":9725:9734  _transfer */\n      tag_112\n        /* \"utils/ERC721A.sol\":9725:9753  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_133:\n        /* \"utils/ERC721A.sol\":9768:9783  to.isContract() */\n      tag_134\n        /* \"utils/ERC721A.sol\":9768:9770  to */\n      dup4\n        /* \"utils/ERC721A.sol\":9768:9781  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_135\n        /* \"utils/ERC721A.sol\":9768:9783  to.isContract() */\n      jump\t// in\n    tag_134:\n        /* \"utils/ERC721A.sol\":9764:9943  if (to.isContract())... */\n      iszero\n      tag_136\n      jumpi\n        /* \"utils/ERC721A.sol\":9803:9859  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_137\n        /* \"utils/ERC721A.sol\":9834:9838  from */\n      dup5\n        /* \"utils/ERC721A.sol\":9840:9842  to */\n      dup5\n        /* \"utils/ERC721A.sol\":9844:9851  tokenId */\n      dup5\n        /* \"utils/ERC721A.sol\":9853:9858  _data */\n      dup5\n        /* \"utils/ERC721A.sol\":9803:9833  _checkContractOnERC721Received */\n      tag_138\n        /* \"utils/ERC721A.sol\":9803:9859  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_137:\n        /* \"utils/ERC721A.sol\":9798:9943  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_139\n      jumpi\n        /* \"utils/ERC721A.sol\":9887:9927  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/ERC721A.sol\":9798:9943  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_139:\n        /* \"utils/ERC721A.sol\":9764:9943  if (to.isContract())... */\n    tag_136:\n        /* \"utils/ERC721A.sol\":9558:9950  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":7014:7332  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"utils/ERC721A.sol\":7087:7100  string memory */\n      0x60\n        /* \"utils/ERC721A.sol\":7118:7134  _exists(tokenId) */\n      tag_141\n        /* \"utils/ERC721A.sol\":7126:7133  tokenId */\n      dup3\n        /* \"utils/ERC721A.sol\":7118:7125  _exists */\n      tag_94\n        /* \"utils/ERC721A.sol\":7118:7134  _exists(tokenId) */\n      jump\t// in\n    tag_141:\n        /* \"utils/ERC721A.sol\":7113:7172  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_142\n      jumpi\n        /* \"utils/ERC721A.sol\":7143:7172  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/ERC721A.sol\":7113:7172  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_142:\n        /* \"utils/ERC721A.sol\":7185:7206  string memory baseURI */\n      0x00\n        /* \"utils/ERC721A.sol\":7209:7219  _baseURI() */\n      tag_143\n        /* \"utils/ERC721A.sol\":7209:7217  _baseURI */\n      tag_144\n        /* \"utils/ERC721A.sol\":7209:7219  _baseURI() */\n      jump\t// in\n    tag_143:\n        /* \"utils/ERC721A.sol\":7185:7219  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":7262:7263  0 */\n      0x00\n        /* \"utils/ERC721A.sol\":7243:7250  baseURI */\n      dup2\n        /* \"utils/ERC721A.sol\":7237:7258  bytes(baseURI).length */\n      mload\n        /* \"utils/ERC721A.sol\":7237:7263  bytes(baseURI).length != 0 */\n      sub\n        /* \"utils/ERC721A.sol\":7237:7324  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_145\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_146)\n    tag_145:\n        /* \"utils/ERC721A.sol\":7290:7297  baseURI */\n      dup1\n        /* \"utils/ERC721A.sol\":7299:7317  tokenId.toString() */\n      tag_147\n        /* \"utils/ERC721A.sol\":7299:7306  tokenId */\n      dup5\n        /* \"utils/ERC721A.sol\":7299:7315  tokenId.toString */\n      tag_148\n        /* \"utils/ERC721A.sol\":7299:7317  tokenId.toString() */\n      jump\t// in\n    tag_147:\n        /* \"utils/ERC721A.sol\":7273:7318  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_149\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"utils/ERC721A.sol\":7237:7324  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_146:\n        /* \"utils/ERC721A.sol\":7230:7324  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"utils/ERC721A.sol\":7014:7332  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":8830:8994  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_78:\n        /* \"utils/ERC721A.sol\":8927:8931  bool */\n      0x00\n        /* \"utils/ERC721A.sol\":8951:8969  _operatorApprovals */\n      0x07\n        /* \"utils/ERC721A.sol\":8951:8976  _operatorApprovals[owner] */\n      0x00\n        /* \"utils/ERC721A.sol\":8970:8975  owner */\n      dup5\n        /* \"utils/ERC721A.sol\":8951:8976  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"utils/ERC721A.sol\":8951:8986  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"utils/ERC721A.sol\":8977:8985  operator */\n      dup4\n        /* \"utils/ERC721A.sol\":8951:8986  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"utils/ERC721A.sol\":8944:8986  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":8830:8994  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":10205:10379  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_94:\n        /* \"utils/ERC721A.sol\":10262:10266  bool */\n      0x00\n        /* \"utils/ERC721A.sol\":10305:10312  tokenId */\n      dup2\n        /* \"utils/ERC721A.sol\":10286:10301  _startTokenId() */\n      tag_154\n        /* \"utils/ERC721A.sol\":10286:10299  _startTokenId */\n      tag_109\n        /* \"utils/ERC721A.sol\":10286:10301  _startTokenId() */\n      jump\t// in\n    tag_154:\n        /* \"utils/ERC721A.sol\":10286:10312  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"utils/ERC721A.sol\":10286:10339  _startTokenId() <= tokenId && tokenId < _currentIndex */\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \"utils/ERC721A.sol\":10326:10339  _currentIndex */\n      sload(0x00)\n        /* \"utils/ERC721A.sol\":10316:10323  tokenId */\n      dup3\n        /* \"utils/ERC721A.sol\":10316:10339  tokenId < _currentIndex */\n      lt\n        /* \"utils/ERC721A.sol\":10286:10339  _startTokenId() <= tokenId && tokenId < _currentIndex */\n    tag_155:\n        /* \"utils/ERC721A.sol\":10286:10371  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \"utils/ERC721A.sol\":10344:10355  _ownerships */\n      0x04\n        /* \"utils/ERC721A.sol\":10344:10364  _ownerships[tokenId] */\n      0x00\n        /* \"utils/ERC721A.sol\":10356:10363  tokenId */\n      dup4\n        /* \"utils/ERC721A.sol\":10344:10364  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"utils/ERC721A.sol\":10344:10371  _ownerships[tokenId].burned */\n      0x00\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"utils/ERC721A.sol\":10343:10371  !_ownerships[tokenId].burned */\n      iszero\n        /* \"utils/ERC721A.sol\":10286:10371  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n    tag_156:\n        /* \"utils/ERC721A.sol\":10279:10371  return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":10205:10379  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"utils/ERC721A.sol\":19367:19563  function _approve(... */\n    tag_106:\n        /* \"utils/ERC721A.sol\":19509:19511  to */\n      dup3\n        /* \"utils/ERC721A.sol\":19482:19497  _tokenApprovals */\n      0x06\n        /* \"utils/ERC721A.sol\":19482:19506  _tokenApprovals[tokenId] */\n      0x00\n        /* \"utils/ERC721A.sol\":19498:19505  tokenId */\n      dup5\n        /* \"utils/ERC721A.sol\":19482:19506  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"utils/ERC721A.sol\":19482:19511  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"utils/ERC721A.sol\":19547:19554  tokenId */\n      dup2\n        /* \"utils/ERC721A.sol\":19543:19545  to */\n      dup4\n        /* \"utils/ERC721A.sol\":19527:19555  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":19536:19541  owner */\n      dup3\n        /* \"utils/ERC721A.sol\":19527:19555  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"utils/ERC721A.sol\":19367:19563  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":2519:2611  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_109:\n        /* \"utils/ERC721A.sol\":2575:2582  uint256 */\n      0x00\n        /* \"utils/ERC721A.sol\":2519:2611  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"utils/ERC721A.sol\":14375:16479  function _transfer(... */\n    tag_112:\n        /* \"utils/ERC721A.sol\":14490:14525  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"utils/ERC721A.sol\":14528:14549  _ownershipOf(tokenId) */\n      tag_161\n        /* \"utils/ERC721A.sol\":14541:14548  tokenId */\n      dup3\n        /* \"utils/ERC721A.sol\":14528:14540  _ownershipOf */\n      tag_117\n        /* \"utils/ERC721A.sol\":14528:14549  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_161:\n        /* \"utils/ERC721A.sol\":14490:14549  TokenOwnership memory prevOwnership = _ownershipOf(tokenId) */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":14588:14592  from */\n      dup4\n        /* \"utils/ERC721A.sol\":14566:14592  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":14566:14579  prevOwnership */\n      dup2\n        /* \"utils/ERC721A.sol\":14566:14584  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"utils/ERC721A.sol\":14566:14592  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"utils/ERC721A.sol\":14562:14629  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n      tag_162\n      jumpi\n        /* \"utils/ERC721A.sol\":14601:14629  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/ERC721A.sol\":14562:14629  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n    tag_162:\n        /* \"utils/ERC721A.sol\":14642:14664  bool isApprovedOrOwner */\n      0x00\n        /* \"utils/ERC721A.sol\":14684:14688  from */\n      dup5\n        /* \"utils/ERC721A.sol\":14668:14688  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":14668:14680  _msgSender() */\n      tag_163\n        /* \"utils/ERC721A.sol\":14668:14678  _msgSender */\n      tag_100\n        /* \"utils/ERC721A.sol\":14668:14680  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"utils/ERC721A.sol\":14668:14688  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"utils/ERC721A.sol\":14668:14728  _msgSender() == from || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_164\n      jumpi\n      pop\n        /* \"utils/ERC721A.sol\":14692:14728  isApprovedForAll(from, _msgSender()) */\n      tag_165\n        /* \"utils/ERC721A.sol\":14709:14713  from */\n      dup6\n        /* \"utils/ERC721A.sol\":14715:14727  _msgSender() */\n      tag_166\n        /* \"utils/ERC721A.sol\":14715:14725  _msgSender */\n      tag_100\n        /* \"utils/ERC721A.sol\":14715:14727  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"utils/ERC721A.sol\":14692:14708  isApprovedForAll */\n      tag_78\n        /* \"utils/ERC721A.sol\":14692:14728  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_165:\n        /* \"utils/ERC721A.sol\":14668:14728  _msgSender() == from || isApprovedForAll(from, _msgSender()) */\n    tag_164:\n        /* \"utils/ERC721A.sol\":14668:14768  _msgSender() == from || isApprovedForAll(from, _msgSender()) || getApproved(tokenId) == _msgSender() */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"utils/ERC721A.sol\":14756:14768  _msgSender() */\n      tag_168\n        /* \"utils/ERC721A.sol\":14756:14766  _msgSender */\n      tag_100\n        /* \"utils/ERC721A.sol\":14756:14768  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"utils/ERC721A.sol\":14732:14768  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":14732:14752  getApproved(tokenId) */\n      tag_169\n        /* \"utils/ERC721A.sol\":14744:14751  tokenId */\n      dup5\n        /* \"utils/ERC721A.sol\":14732:14743  getApproved */\n      tag_33\n        /* \"utils/ERC721A.sol\":14732:14752  getApproved(tokenId) */\n      jump\t// in\n    tag_169:\n        /* \"utils/ERC721A.sol\":14732:14768  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"utils/ERC721A.sol\":14668:14768  _msgSender() == from || isApprovedForAll(from, _msgSender()) || getApproved(tokenId) == _msgSender() */\n    tag_167:\n        /* \"utils/ERC721A.sol\":14642:14769  bool isApprovedOrOwner = (_msgSender() == from || isApprovedForAll(from, _msgSender()) || getApproved(tokenId) == _msgSender()) */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":14787:14804  isApprovedOrOwner */\n      dup1\n        /* \"utils/ERC721A.sol\":14782:14848  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n      tag_170\n      jumpi\n        /* \"utils/ERC721A.sol\":14813:14848  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/ERC721A.sol\":14782:14848  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n    tag_170:\n        /* \"utils/ERC721A.sol\":14877:14878  0 */\n      0x00\n        /* \"utils/ERC721A.sol\":14863:14879  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":14863:14865  to */\n      dup5\n        /* \"utils/ERC721A.sol\":14863:14879  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"utils/ERC721A.sol\":14859:14911  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_171\n      jumpi\n        /* \"utils/ERC721A.sol\":14888:14911  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/ERC721A.sol\":14859:14911  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_171:\n        /* \"utils/ERC721A.sol\":14924:14967  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_172\n        /* \"utils/ERC721A.sol\":14946:14950  from */\n      dup6\n        /* \"utils/ERC721A.sol\":14952:14954  to */\n      dup6\n        /* \"utils/ERC721A.sol\":14956:14963  tokenId */\n      dup6\n        /* \"utils/ERC721A.sol\":14965:14966  1 */\n      0x01\n        /* \"utils/ERC721A.sol\":14924:14945  _beforeTokenTransfers */\n      tag_173\n        /* \"utils/ERC721A.sol\":14924:14967  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_172:\n        /* \"utils/ERC721A.sol\":15032:15067  _approve(address(0), tokenId, from) */\n      tag_174\n        /* \"utils/ERC721A.sol\":15049:15050  0 */\n      0x00\n        /* \"utils/ERC721A.sol\":15053:15060  tokenId */\n      dup5\n        /* \"utils/ERC721A.sol\":15062:15066  from */\n      dup8\n        /* \"utils/ERC721A.sol\":15032:15040  _approve */\n      tag_106\n        /* \"utils/ERC721A.sol\":15032:15067  _approve(address(0), tokenId, from) */\n      jump\t// in\n    tag_174:\n        /* \"utils/ERC721A.sol\":15393:15394  1 */\n      0x01\n        /* \"utils/ERC721A.sol\":15363:15375  _addressData */\n      0x05\n        /* \"utils/ERC721A.sol\":15363:15381  _addressData[from] */\n      0x00\n        /* \"utils/ERC721A.sol\":15376:15380  from */\n      dup8\n        /* \"utils/ERC721A.sol\":15363:15381  _addressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"utils/ERC721A.sol\":15363:15389  _addressData[from].balance */\n      0x00\n      add\n      0x00\n        /* \"utils/ERC721A.sol\":15363:15394  _addressData[from].balance -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      sub\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"utils/ERC721A.sol\":15437:15438  1 */\n      0x01\n        /* \"utils/ERC721A.sol\":15409:15421  _addressData */\n      0x05\n        /* \"utils/ERC721A.sol\":15409:15425  _addressData[to] */\n      0x00\n        /* \"utils/ERC721A.sol\":15422:15424  to */\n      dup7\n        /* \"utils/ERC721A.sol\":15409:15425  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"utils/ERC721A.sol\":15409:15433  _addressData[to].balance */\n      0x00\n      add\n      0x00\n        /* \"utils/ERC721A.sol\":15409:15438  _addressData[to].balance += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"utils/ERC721A.sol\":15455:15486  TokenOwnership storage currSlot */\n      0x00\n        /* \"utils/ERC721A.sol\":15489:15500  _ownerships */\n      0x04\n        /* \"utils/ERC721A.sol\":15489:15509  _ownerships[tokenId] */\n      0x00\n        /* \"utils/ERC721A.sol\":15501:15508  tokenId */\n      dup6\n        /* \"utils/ERC721A.sol\":15489:15509  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"utils/ERC721A.sol\":15455:15509  TokenOwnership storage currSlot = _ownerships[tokenId] */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":15540:15542  to */\n      dup5\n        /* \"utils/ERC721A.sol\":15524:15532  currSlot */\n      dup2\n        /* \"utils/ERC721A.sol\":15524:15537  currSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"utils/ERC721A.sol\":15524:15542  currSlot.addr = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"utils/ERC721A.sol\":15590:15605  block.timestamp */\n      timestamp\n        /* \"utils/ERC721A.sol\":15557:15565  currSlot */\n      dup2\n        /* \"utils/ERC721A.sol\":15557:15580  currSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"utils/ERC721A.sol\":15557:15606  currSlot.startTimestamp = uint64(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"utils/ERC721A.sol\":15858:15877  uint256 nextTokenId */\n      0x00\n        /* \"utils/ERC721A.sol\":15890:15891  1 */\n      0x01\n        /* \"utils/ERC721A.sol\":15880:15887  tokenId */\n      dup6\n        /* \"utils/ERC721A.sol\":15880:15891  tokenId + 1 */\n      add\n        /* \"utils/ERC721A.sol\":15858:15891  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":15906:15937  TokenOwnership storage nextSlot */\n      0x00\n        /* \"utils/ERC721A.sol\":15940:15951  _ownerships */\n      0x04\n        /* \"utils/ERC721A.sol\":15940:15964  _ownerships[nextTokenId] */\n      0x00\n        /* \"utils/ERC721A.sol\":15952:15963  nextTokenId */\n      dup4\n        /* \"utils/ERC721A.sol\":15940:15964  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"utils/ERC721A.sol\":15906:15964  TokenOwnership storage nextSlot = _ownerships[nextTokenId] */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":16008:16009  0 */\n      0x00\n        /* \"utils/ERC721A.sol\":15983:16010  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":15983:15991  nextSlot */\n      dup2\n        /* \"utils/ERC721A.sol\":15983:15996  nextSlot.addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":15983:16010  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"utils/ERC721A.sol\":15979:16363  if (nextSlot.addr == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"utils/ERC721A.sol\":16193:16206  _currentIndex */\n      sload(0x00)\n        /* \"utils/ERC721A.sol\":16178:16189  nextTokenId */\n      dup3\n        /* \"utils/ERC721A.sol\":16178:16206  nextTokenId != _currentIndex */\n      eq\n        /* \"utils/ERC721A.sol\":16174:16348  if (nextTokenId != _currentIndex) {... */\n      tag_176\n      jumpi\n        /* \"utils/ERC721A.sol\":16247:16251  from */\n      dup8\n        /* \"utils/ERC721A.sol\":16231:16239  nextSlot */\n      dup2\n        /* \"utils/ERC721A.sol\":16231:16244  nextSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"utils/ERC721A.sol\":16231:16251  nextSlot.addr = from */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"utils/ERC721A.sol\":16300:16313  prevOwnership */\n      dup5\n        /* \"utils/ERC721A.sol\":16300:16328  prevOwnership.startTimestamp */\n      0x20\n      add\n      mload\n        /* \"utils/ERC721A.sol\":16274:16282  nextSlot */\n      dup2\n        /* \"utils/ERC721A.sol\":16274:16297  nextSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"utils/ERC721A.sol\":16274:16328  nextSlot.startTimestamp = prevOwnership.startTimestamp */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"utils/ERC721A.sol\":16174:16348  if (nextTokenId != _currentIndex) {... */\n    tag_176:\n        /* \"utils/ERC721A.sol\":15979:16363  if (nextSlot.addr == address(0)) {... */\n    tag_175:\n        /* \"utils/ERC721A.sol\":15338:16374  unchecked {... */\n      pop\n      pop\n      pop\n        /* \"utils/ERC721A.sol\":16410:16417  tokenId */\n      dup3\n        /* \"utils/ERC721A.sol\":16406:16408  to */\n      dup5\n        /* \"utils/ERC721A.sol\":16391:16418  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":16400:16404  from */\n      dup7\n        /* \"utils/ERC721A.sol\":16391:16418  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"utils/ERC721A.sol\":16429:16471  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_177\n        /* \"utils/ERC721A.sol\":16450:16454  from */\n      dup6\n        /* \"utils/ERC721A.sol\":16456:16458  to */\n      dup6\n        /* \"utils/ERC721A.sol\":16460:16467  tokenId */\n      dup6\n        /* \"utils/ERC721A.sol\":16469:16470  1 */\n      0x01\n        /* \"utils/ERC721A.sol\":16429:16449  _afterTokenTransfers */\n      tag_178\n        /* \"utils/ERC721A.sol\":16429:16471  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_177:\n        /* \"utils/ERC721A.sol\":14479:16479  {... */\n      pop\n      pop\n        /* \"utils/ERC721A.sol\":14375:16479  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":5216:6416  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_117:\n        /* \"utils/ERC721A.sol\":5278:5299  TokenOwnership memory */\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"utils/ERC721A.sol\":5312:5324  uint256 curr */\n      0x00\n        /* \"utils/ERC721A.sol\":5327:5334  tokenId */\n      dup3\n        /* \"utils/ERC721A.sol\":5312:5334  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":5395:5399  curr */\n      dup1\n        /* \"utils/ERC721A.sol\":5376:5391  _startTokenId() */\n      tag_182\n        /* \"utils/ERC721A.sol\":5376:5389  _startTokenId */\n      tag_109\n        /* \"utils/ERC721A.sol\":5376:5391  _startTokenId() */\n      jump\t// in\n    tag_182:\n        /* \"utils/ERC721A.sol\":5376:5399  _startTokenId() <= curr */\n      gt\n        /* \"utils/ERC721A.sol\":5372:6349  if (_startTokenId() <= curr)... */\n      tag_183\n      jumpi\n        /* \"utils/ERC721A.sol\":5429:5442  _currentIndex */\n      sload(0x00)\n        /* \"utils/ERC721A.sol\":5422:5426  curr */\n      dup2\n        /* \"utils/ERC721A.sol\":5422:5442  curr < _currentIndex */\n      lt\n        /* \"utils/ERC721A.sol\":5418:6349  if (curr < _currentIndex) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"utils/ERC721A.sol\":5467:5498  TokenOwnership memory ownership */\n      0x00\n        /* \"utils/ERC721A.sol\":5501:5512  _ownerships */\n      0x04\n        /* \"utils/ERC721A.sol\":5501:5518  _ownerships[curr] */\n      0x00\n        /* \"utils/ERC721A.sol\":5513:5517  curr */\n      dup4\n        /* \"utils/ERC721A.sol\":5501:5518  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"utils/ERC721A.sol\":5467:5518  TokenOwnership memory ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":5546:5555  ownership */\n      dup1\n        /* \"utils/ERC721A.sol\":5546:5562  ownership.burned */\n      0x40\n      add\n      mload\n        /* \"utils/ERC721A.sol\":5541:6330  if (!ownership.burned) {... */\n      tag_185\n      jumpi\n        /* \"utils/ERC721A.sol\":5621:5622  0 */\n      0x00\n        /* \"utils/ERC721A.sol\":5595:5623  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":5595:5604  ownership */\n      dup2\n        /* \"utils/ERC721A.sol\":5595:5609  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"utils/ERC721A.sol\":5595:5623  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"utils/ERC721A.sol\":5591:5700  if (ownership.addr != address(0)) {... */\n      tag_186\n      jumpi\n        /* \"utils/ERC721A.sol\":5663:5672  ownership */\n      dup1\n        /* \"utils/ERC721A.sol\":5656:5672  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_181)\n        /* \"utils/ERC721A.sol\":5591:5700  if (ownership.addr != address(0)) {... */\n    tag_186:\n        /* \"utils/ERC721A.sol\":6022:6307  while (true) {... */\n    tag_187:\n        /* \"utils/ERC721A.sol\":6029:6033  true */\n      0x01\n        /* \"utils/ERC721A.sol\":6022:6307  while (true) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"utils/ERC721A.sol\":6066:6072  curr-- */\n      dup2\n      dup1\n      0x01\n      swap1\n      sub\n      swap3\n      pop\n      pop\n        /* \"utils/ERC721A.sol\":6115:6126  _ownerships */\n      0x04\n        /* \"utils/ERC721A.sol\":6115:6132  _ownerships[curr] */\n      0x00\n        /* \"utils/ERC721A.sol\":6127:6131  curr */\n      dup4\n        /* \"utils/ERC721A.sol\":6115:6132  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"utils/ERC721A.sol\":6103:6132  ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":6193:6194  0 */\n      0x00\n        /* \"utils/ERC721A.sol\":6167:6195  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"utils/ERC721A.sol\":6167:6176  ownership */\n      dup2\n        /* \"utils/ERC721A.sol\":6167:6181  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"utils/ERC721A.sol\":6167:6195  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"utils/ERC721A.sol\":6163:6280  if (ownership.addr != address(0)) {... */\n      tag_189\n      jumpi\n        /* \"utils/ERC721A.sol\":6239:6248  ownership */\n      dup1\n        /* \"utils/ERC721A.sol\":6232:6248  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_181)\n        /* \"utils/ERC721A.sol\":6163:6280  if (ownership.addr != address(0)) {... */\n    tag_189:\n        /* \"utils/ERC721A.sol\":6022:6307  while (true) {... */\n      jump(tag_187)\n    tag_188:\n        /* \"utils/ERC721A.sol\":5541:6330  if (!ownership.burned) {... */\n    tag_185:\n        /* \"utils/ERC721A.sol\":5444:6349  {... */\n      pop\n        /* \"utils/ERC721A.sol\":5418:6349  if (curr < _currentIndex) {... */\n    tag_184:\n        /* \"utils/ERC721A.sol\":5372:6349  if (_startTokenId() <= curr)... */\n    tag_183:\n        /* \"utils/ERC721A.sol\":6377:6408  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/ERC721A.sol\":5216:6416  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_181:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":20055:20722  function _checkContractOnERC721Received(... */\n    tag_138:\n        /* \"utils/ERC721A.sol\":20218:20222  bool */\n      0x00\n        /* \"utils/ERC721A.sol\":20255:20257  to */\n      dup4\n        /* \"utils/ERC721A.sol\":20239:20275  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"utils/ERC721A.sol\":20276:20288  _msgSender() */\n      tag_192\n        /* \"utils/ERC721A.sol\":20276:20286  _msgSender */\n      tag_100\n        /* \"utils/ERC721A.sol\":20276:20288  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"utils/ERC721A.sol\":20290:20294  from */\n      dup8\n        /* \"utils/ERC721A.sol\":20296:20303  tokenId */\n      dup7\n        /* \"utils/ERC721A.sol\":20305:20310  _data */\n      dup7\n        /* \"utils/ERC721A.sol\":20239:20311  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_195\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      0x01\n    tag_195:\n        /* \"utils/ERC721A.sol\":20235:20715  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_198\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_203\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_202)\n    tag_203:\n      0x60\n      swap2\n      pop\n    tag_202:\n      pop\n        /* \"utils/ERC721A.sol\":20490:20491  0 */\n      0x00\n        /* \"utils/ERC721A.sol\":20473:20479  reason */\n      dup2\n        /* \"utils/ERC721A.sol\":20473:20486  reason.length */\n      mload\n        /* \"utils/ERC721A.sol\":20473:20491  reason.length == 0 */\n      sub\n        /* \"utils/ERC721A.sol\":20469:20704  if (reason.length == 0) {... */\n      tag_204\n      jumpi\n        /* \"utils/ERC721A.sol\":20519:20559  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/ERC721A.sol\":20469:20704  if (reason.length == 0) {... */\n    tag_204:\n        /* \"utils/ERC721A.sol\":20662:20668  reason */\n      dup1\n        /* \"utils/ERC721A.sol\":20656:20669  mload(reason) */\n      mload\n        /* \"utils/ERC721A.sol\":20647:20653  reason */\n      dup2\n        /* \"utils/ERC721A.sol\":20643:20645  32 */\n      0x20\n        /* \"utils/ERC721A.sol\":20639:20654  add(32, reason) */\n      add\n        /* \"utils/ERC721A.sol\":20632:20670  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"utils/ERC721A.sol\":20235:20715  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_198:\n        /* \"utils/ERC721A.sol\":20368:20413  IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"utils/ERC721A.sol\":20358:20413  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"utils/ERC721A.sol\":20358:20364  retval */\n      dup2\n        /* \"utils/ERC721A.sol\":20358:20413  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"utils/ERC721A.sol\":20351:20413  return retval == IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"utils/ERC721A.sol\":20055:20722  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":7580:7674  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_144:\n        /* \"utils/ERC721A.sol\":7631:7644  string memory */\n      0x60\n        /* \"utils/ERC721A.sol\":7657:7666  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"utils/ERC721A.sol\":7580:7674  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":448:461  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":674:675  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:670  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:675  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":691:701  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_208)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:733  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":736:741  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:741  uint256 temp = value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":751:765  uint256 digits */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":790:791  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:786  temp */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:791  temp != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":807:815  digits++ */\n      dup1\n      dup1\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":837:839  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      dup3\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      jump(tag_210)\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:878  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":891:897  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":881:898  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_216\n      jumpi\n      tag_217\n      tag_218\n      jump\t// in\n    tag_217:\n    tag_216:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_219\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_219:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:898  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:920  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:925  value != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":951:952  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      dup3\n      tag_222\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1019  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1014  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:998  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_226\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":983:1022  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:972  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":973:979  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:980  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_228\n      jumpi\n      tag_229\n      tag_230\n      jump\t// in\n    tag_229:\n    tag_228:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:1022  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1047  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      dup6\n      tag_231\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_231:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      jump(tag_220)\n    tag_221:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1081:1087  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1067:1088  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_208:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":21370:21529  function _beforeTokenTransfers(... */\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"utils/ERC721A.sol\":22188:22346  function _afterTokenTransfers(... */\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_180:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_234:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_235:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_236:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_237:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_238:\n        /* \"#utility.yul\":561:584   */\n      tag_281\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_237\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_282:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_239:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_284\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_238\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_287\n      tag_235\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":833:952   */\n    tag_286:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_288\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_239\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_240:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_241:\n        /* \"#utility.yul\":1268:1289   */\n      tag_291\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_240\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_293\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_241\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_242:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_243:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_244:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_297:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_297)\n    tag_299:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_245:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_246:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_302\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_242\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2329:2400   */\n      tag_303\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_243\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_304\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_244\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2499:2528   */\n      tag_305\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_245\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_29:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_307\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_246\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_247:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_248:\n        /* \"#utility.yul\":3016:3040   */\n      tag_310\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_247\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_311:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_249:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_313\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_248\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_32:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_316\n      tag_235\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3292:3411   */\n    tag_315:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_317\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_249\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_250:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_251:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_320\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_250\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_252:\n        /* \"#utility.yul\":3872:3896   */\n      tag_322\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_251\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_35:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_324\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_252\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_253:\n        /* \"#utility.yul\":4210:4234   */\n      tag_326\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_251\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_327:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_254:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_329\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_253\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_38:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_332\n      tag_235\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4503:4622   */\n    tag_331:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_333\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_254\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_334\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_249\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_255:\n        /* \"#utility.yul\":4977:5001   */\n      tag_336\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_247\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_43:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_338\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_255\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_46:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_341\n      tag_235\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5352:5471   */\n    tag_340:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_342\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_254\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_343\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_254\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_344\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_249\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_57:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_347\n      tag_235\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5943:6062   */\n    tag_346:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_348\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_254\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_256:\n        /* \"#utility.yul\":6272:6293   */\n      tag_350\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_240\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_351:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_257:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_353\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_256\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_65:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_356\n      tag_235\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6553:6672   */\n    tag_355:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_357\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_254\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_358\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_257\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_258:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_259:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_218:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_260:\n        /* \"#utility.yul\":7452:7479   */\n      tag_363\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_245\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_365\n      tag_218\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":7525:7613   */\n    tag_364:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_261:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_367\n      tag_234\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_368\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_260\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_262:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_371\n      tag_218\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7928:7984   */\n    tag_370:\n        /* \"#utility.yul\":8002:8031   */\n      tag_372\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_245\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_263:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_264:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_375\n        /* \"#utility.yul\":8374:8422   */\n      tag_376\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_262\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8358:8423   */\n      tag_261\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_378\n      tag_259\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":8498:8610   */\n    tag_377:\n        /* \"#utility.yul\":8619:8673   */\n      tag_379\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_263\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_265:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_382\n      tag_258\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":8769:8891   */\n    tag_381:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_383\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_264\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_69:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_386\n      tag_235\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":9178:9298   */\n    tag_385:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_387\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_254\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_388\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_254\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_389\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_249\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_391\n      tag_236\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9765:9882   */\n    tag_390:\n        /* \"#utility.yul\":9906:9968   */\n      tag_392\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_265\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_77:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_395\n      tag_235\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":10084:10203   */\n    tag_394:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_396\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_254\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_397\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_254\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_266:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_87:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_400:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_402\n      tag_266\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10887:10971   */\n    tag_401:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11131   */\n    tag_267:\n        /* \"#utility.yul\":11085:11096   */\n      0x00\n        /* \"#utility.yul\":11122:11125   */\n      dup2\n        /* \"#utility.yul\":11107:11125   */\n      swap1\n      pop\n        /* \"#utility.yul\":10983:11131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11137:11527   */\n    tag_268:\n        /* \"#utility.yul\":11243:11246   */\n      0x00\n        /* \"#utility.yul\":11271:11310   */\n      tag_405\n        /* \"#utility.yul\":11304:11309   */\n      dup3\n        /* \"#utility.yul\":11271:11310   */\n      tag_242\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":11326:11415   */\n      tag_406\n        /* \"#utility.yul\":11408:11414   */\n      dup2\n        /* \"#utility.yul\":11403:11406   */\n      dup6\n        /* \"#utility.yul\":11326:11415   */\n      tag_267\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":11319:11415   */\n      swap4\n      pop\n        /* \"#utility.yul\":11424:11489   */\n      tag_407\n        /* \"#utility.yul\":11482:11488   */\n      dup2\n        /* \"#utility.yul\":11477:11480   */\n      dup6\n        /* \"#utility.yul\":11470:11474   */\n      0x20\n        /* \"#utility.yul\":11463:11468   */\n      dup7\n        /* \"#utility.yul\":11459:11475   */\n      add\n        /* \"#utility.yul\":11424:11489   */\n      tag_244\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":11514:11520   */\n      dup1\n        /* \"#utility.yul\":11509:11512   */\n      dup5\n        /* \"#utility.yul\":11505:11521   */\n      add\n        /* \"#utility.yul\":11498:11521   */\n      swap2\n      pop\n        /* \"#utility.yul\":11247:11527   */\n      pop\n        /* \"#utility.yul\":11137:11527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11968   */\n    tag_150:\n        /* \"#utility.yul\":11713:11716   */\n      0x00\n        /* \"#utility.yul\":11735:11830   */\n      tag_409\n        /* \"#utility.yul\":11826:11829   */\n      dup3\n        /* \"#utility.yul\":11817:11823   */\n      dup6\n        /* \"#utility.yul\":11735:11830   */\n      tag_268\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":11728:11830   */\n      swap2\n      pop\n        /* \"#utility.yul\":11847:11942   */\n      tag_410\n        /* \"#utility.yul\":11938:11941   */\n      dup3\n        /* \"#utility.yul\":11929:11935   */\n      dup5\n        /* \"#utility.yul\":11847:11942   */\n      tag_268\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":11840:11942   */\n      swap2\n      pop\n        /* \"#utility.yul\":11959:11962   */\n      dup2\n        /* \"#utility.yul\":11952:11962   */\n      swap1\n      pop\n        /* \"#utility.yul\":11533:11968   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11974:12072   */\n    tag_269:\n        /* \"#utility.yul\":12025:12031   */\n      0x00\n        /* \"#utility.yul\":12059:12064   */\n      dup2\n        /* \"#utility.yul\":12053:12065   */\n      mload\n        /* \"#utility.yul\":12043:12065   */\n      swap1\n      pop\n        /* \"#utility.yul\":11974:12072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12078:12246   */\n    tag_270:\n        /* \"#utility.yul\":12161:12172   */\n      0x00\n        /* \"#utility.yul\":12195:12201   */\n      dup3\n        /* \"#utility.yul\":12190:12193   */\n      dup3\n        /* \"#utility.yul\":12183:12202   */\n      mstore\n        /* \"#utility.yul\":12235:12239   */\n      0x20\n        /* \"#utility.yul\":12230:12233   */\n      dup3\n        /* \"#utility.yul\":12226:12240   */\n      add\n        /* \"#utility.yul\":12211:12240   */\n      swap1\n      pop\n        /* \"#utility.yul\":12078:12246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12252:12625   */\n    tag_271:\n        /* \"#utility.yul\":12338:12341   */\n      0x00\n        /* \"#utility.yul\":12366:12404   */\n      tag_414\n        /* \"#utility.yul\":12398:12403   */\n      dup3\n        /* \"#utility.yul\":12366:12404   */\n      tag_269\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":12420:12490   */\n      tag_415\n        /* \"#utility.yul\":12483:12489   */\n      dup2\n        /* \"#utility.yul\":12478:12481   */\n      dup6\n        /* \"#utility.yul\":12420:12490   */\n      tag_270\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":12413:12490   */\n      swap4\n      pop\n        /* \"#utility.yul\":12499:12564   */\n      tag_416\n        /* \"#utility.yul\":12557:12563   */\n      dup2\n        /* \"#utility.yul\":12552:12555   */\n      dup6\n        /* \"#utility.yul\":12545:12549   */\n      0x20\n        /* \"#utility.yul\":12538:12543   */\n      dup7\n        /* \"#utility.yul\":12534:12550   */\n      add\n        /* \"#utility.yul\":12499:12564   */\n      tag_244\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":12589:12618   */\n      tag_417\n        /* \"#utility.yul\":12611:12617   */\n      dup2\n        /* \"#utility.yul\":12589:12618   */\n      tag_245\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":12584:12587   */\n      dup5\n        /* \"#utility.yul\":12580:12619   */\n      add\n        /* \"#utility.yul\":12573:12619   */\n      swap2\n      pop\n        /* \"#utility.yul\":12342:12625   */\n      pop\n        /* \"#utility.yul\":12252:12625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12631:13271   */\n    tag_194:\n        /* \"#utility.yul\":12826:12830   */\n      0x00\n        /* \"#utility.yul\":12864:12867   */\n      0x80\n        /* \"#utility.yul\":12853:12862   */\n      dup3\n        /* \"#utility.yul\":12849:12868   */\n      add\n        /* \"#utility.yul\":12841:12868   */\n      swap1\n      pop\n        /* \"#utility.yul\":12878:12949   */\n      tag_419\n        /* \"#utility.yul\":12946:12947   */\n      0x00\n        /* \"#utility.yul\":12935:12944   */\n      dup4\n        /* \"#utility.yul\":12931:12948   */\n      add\n        /* \"#utility.yul\":12922:12928   */\n      dup8\n        /* \"#utility.yul\":12878:12949   */\n      tag_252\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12959:13031   */\n      tag_420\n        /* \"#utility.yul\":13027:13029   */\n      0x20\n        /* \"#utility.yul\":13016:13025   */\n      dup4\n        /* \"#utility.yul\":13012:13030   */\n      add\n        /* \"#utility.yul\":13003:13009   */\n      dup7\n        /* \"#utility.yul\":12959:13031   */\n      tag_252\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":13041:13113   */\n      tag_421\n        /* \"#utility.yul\":13109:13111   */\n      0x40\n        /* \"#utility.yul\":13098:13107   */\n      dup4\n        /* \"#utility.yul\":13094:13112   */\n      add\n        /* \"#utility.yul\":13085:13091   */\n      dup6\n        /* \"#utility.yul\":13041:13113   */\n      tag_255\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":13160:13169   */\n      dup2\n        /* \"#utility.yul\":13154:13158   */\n      dup2\n        /* \"#utility.yul\":13150:13170   */\n      sub\n        /* \"#utility.yul\":13145:13147   */\n      0x60\n        /* \"#utility.yul\":13134:13143   */\n      dup4\n        /* \"#utility.yul\":13130:13148   */\n      add\n        /* \"#utility.yul\":13123:13171   */\n      mstore\n        /* \"#utility.yul\":13188:13264   */\n      tag_422\n        /* \"#utility.yul\":13259:13263   */\n      dup2\n        /* \"#utility.yul\":13250:13256   */\n      dup5\n        /* \"#utility.yul\":13188:13264   */\n      tag_271\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":13180:13264   */\n      swap1\n      pop\n        /* \"#utility.yul\":12631:13271   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13277:13418   */\n    tag_272:\n        /* \"#utility.yul\":13333:13338   */\n      0x00\n        /* \"#utility.yul\":13364:13370   */\n      dup2\n        /* \"#utility.yul\":13358:13371   */\n      mload\n        /* \"#utility.yul\":13349:13371   */\n      swap1\n      pop\n        /* \"#utility.yul\":13380:13412   */\n      tag_424\n        /* \"#utility.yul\":13406:13411   */\n      dup2\n        /* \"#utility.yul\":13380:13412   */\n      tag_238\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":13277:13418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13424:13773   */\n    tag_197:\n        /* \"#utility.yul\":13493:13499   */\n      0x00\n        /* \"#utility.yul\":13542:13544   */\n      0x20\n        /* \"#utility.yul\":13530:13539   */\n      dup3\n        /* \"#utility.yul\":13521:13528   */\n      dup5\n        /* \"#utility.yul\":13517:13540   */\n      sub\n        /* \"#utility.yul\":13513:13545   */\n      slt\n        /* \"#utility.yul\":13510:13629   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":13548:13627   */\n      tag_427\n      tag_235\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":13510:13629   */\n    tag_426:\n        /* \"#utility.yul\":13668:13669   */\n      0x00\n        /* \"#utility.yul\":13693:13756   */\n      tag_428\n        /* \"#utility.yul\":13748:13755   */\n      dup5\n        /* \"#utility.yul\":13739:13745   */\n      dup3\n        /* \"#utility.yul\":13728:13737   */\n      dup6\n        /* \"#utility.yul\":13724:13746   */\n      add\n        /* \"#utility.yul\":13693:13756   */\n      tag_272\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13683:13756   */\n      swap2\n      pop\n        /* \"#utility.yul\":13639:13766   */\n      pop\n        /* \"#utility.yul\":13424:13773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13779:13959   */\n    tag_273:\n        /* \"#utility.yul\":13827:13904   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13824:13825   */\n      0x00\n        /* \"#utility.yul\":13817:13905   */\n      mstore\n        /* \"#utility.yul\":13924:13928   */\n      0x11\n        /* \"#utility.yul\":13921:13922   */\n      0x04\n        /* \"#utility.yul\":13914:13929   */\n      mstore\n        /* \"#utility.yul\":13948:13952   */\n      0x24\n        /* \"#utility.yul\":13945:13946   */\n      0x00\n        /* \"#utility.yul\":13938:13953   */\n      revert\n        /* \"#utility.yul\":13965:14198   */\n    tag_213:\n        /* \"#utility.yul\":14004:14007   */\n      0x00\n        /* \"#utility.yul\":14027:14051   */\n      tag_431\n        /* \"#utility.yul\":14045:14050   */\n      dup3\n        /* \"#utility.yul\":14027:14051   */\n      tag_247\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":14018:14051   */\n      swap2\n      pop\n        /* \"#utility.yul\":14073:14139   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14066:14071   */\n      dup3\n        /* \"#utility.yul\":14063:14140   */\n      sub\n        /* \"#utility.yul\":14060:14163   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":14143:14161   */\n      tag_433\n      tag_273\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":14060:14163   */\n    tag_432:\n        /* \"#utility.yul\":14190:14191   */\n      0x01\n        /* \"#utility.yul\":14183:14188   */\n      dup3\n        /* \"#utility.yul\":14179:14192   */\n      add\n        /* \"#utility.yul\":14172:14192   */\n      swap1\n      pop\n        /* \"#utility.yul\":13965:14198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14204:14384   */\n    tag_274:\n        /* \"#utility.yul\":14252:14329   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14249:14250   */\n      0x00\n        /* \"#utility.yul\":14242:14330   */\n      mstore\n        /* \"#utility.yul\":14349:14353   */\n      0x12\n        /* \"#utility.yul\":14346:14347   */\n      0x04\n        /* \"#utility.yul\":14339:14354   */\n      mstore\n        /* \"#utility.yul\":14373:14377   */\n      0x24\n        /* \"#utility.yul\":14370:14371   */\n      0x00\n        /* \"#utility.yul\":14363:14378   */\n      revert\n        /* \"#utility.yul\":14390:14575   */\n    tag_215:\n        /* \"#utility.yul\":14430:14431   */\n      0x00\n        /* \"#utility.yul\":14447:14467   */\n      tag_436\n        /* \"#utility.yul\":14465:14466   */\n      dup3\n        /* \"#utility.yul\":14447:14467   */\n      tag_247\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":14442:14467   */\n      swap2\n      pop\n        /* \"#utility.yul\":14481:14501   */\n      tag_437\n        /* \"#utility.yul\":14499:14500   */\n      dup4\n        /* \"#utility.yul\":14481:14501   */\n      tag_247\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":14476:14501   */\n      swap3\n      pop\n        /* \"#utility.yul\":14520:14521   */\n      dup3\n        /* \"#utility.yul\":14510:14545   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":14525:14543   */\n      tag_439\n      tag_274\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":14510:14545   */\n    tag_438:\n        /* \"#utility.yul\":14567:14568   */\n      dup3\n        /* \"#utility.yul\":14564:14565   */\n      dup3\n        /* \"#utility.yul\":14560:14569   */\n      div\n        /* \"#utility.yul\":14555:14569   */\n      swap1\n      pop\n        /* \"#utility.yul\":14390:14575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14581:14775   */\n    tag_223:\n        /* \"#utility.yul\":14621:14625   */\n      0x00\n        /* \"#utility.yul\":14641:14661   */\n      tag_441\n        /* \"#utility.yul\":14659:14660   */\n      dup3\n        /* \"#utility.yul\":14641:14661   */\n      tag_247\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":14636:14661   */\n      swap2\n      pop\n        /* \"#utility.yul\":14675:14695   */\n      tag_442\n        /* \"#utility.yul\":14693:14694   */\n      dup4\n        /* \"#utility.yul\":14675:14695   */\n      tag_247\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":14670:14695   */\n      swap3\n      pop\n        /* \"#utility.yul\":14719:14720   */\n      dup3\n        /* \"#utility.yul\":14716:14717   */\n      dup3\n        /* \"#utility.yul\":14712:14721   */\n      sub\n        /* \"#utility.yul\":14704:14721   */\n      swap1\n      pop\n        /* \"#utility.yul\":14743:14744   */\n      dup2\n        /* \"#utility.yul\":14737:14741   */\n      dup2\n        /* \"#utility.yul\":14734:14745   */\n      gt\n        /* \"#utility.yul\":14731:14768   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":14748:14766   */\n      tag_444\n      tag_273\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":14731:14768   */\n    tag_443:\n        /* \"#utility.yul\":14581:14775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14781:14957   */\n    tag_225:\n        /* \"#utility.yul\":14813:14814   */\n      0x00\n        /* \"#utility.yul\":14830:14850   */\n      tag_446\n        /* \"#utility.yul\":14848:14849   */\n      dup3\n        /* \"#utility.yul\":14830:14850   */\n      tag_247\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":14825:14850   */\n      swap2\n      pop\n        /* \"#utility.yul\":14864:14884   */\n      tag_447\n        /* \"#utility.yul\":14882:14883   */\n      dup4\n        /* \"#utility.yul\":14864:14884   */\n      tag_247\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14859:14884   */\n      swap3\n      pop\n        /* \"#utility.yul\":14903:14904   */\n      dup3\n        /* \"#utility.yul\":14893:14928   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":14908:14926   */\n      tag_449\n      tag_274\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":14893:14928   */\n    tag_448:\n        /* \"#utility.yul\":14949:14950   */\n      dup3\n        /* \"#utility.yul\":14946:14947   */\n      dup3\n        /* \"#utility.yul\":14942:14951   */\n      mod\n        /* \"#utility.yul\":14937:14951   */\n      swap1\n      pop\n        /* \"#utility.yul\":14781:14957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14963:15154   */\n    tag_227:\n        /* \"#utility.yul\":15003:15006   */\n      0x00\n        /* \"#utility.yul\":15022:15042   */\n      tag_451\n        /* \"#utility.yul\":15040:15041   */\n      dup3\n        /* \"#utility.yul\":15022:15042   */\n      tag_247\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":15017:15042   */\n      swap2\n      pop\n        /* \"#utility.yul\":15056:15076   */\n      tag_452\n        /* \"#utility.yul\":15074:15075   */\n      dup4\n        /* \"#utility.yul\":15056:15076   */\n      tag_247\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":15051:15076   */\n      swap3\n      pop\n        /* \"#utility.yul\":15099:15100   */\n      dup3\n        /* \"#utility.yul\":15096:15097   */\n      dup3\n        /* \"#utility.yul\":15092:15101   */\n      add\n        /* \"#utility.yul\":15085:15101   */\n      swap1\n      pop\n        /* \"#utility.yul\":15120:15123   */\n      dup1\n        /* \"#utility.yul\":15117:15118   */\n      dup3\n        /* \"#utility.yul\":15114:15124   */\n      gt\n        /* \"#utility.yul\":15111:15147   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":15127:15145   */\n      tag_454\n      tag_273\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":15111:15147   */\n    tag_453:\n        /* \"#utility.yul\":14963:15154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15160:15340   */\n    tag_230:\n        /* \"#utility.yul\":15208:15285   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15205:15206   */\n      0x00\n        /* \"#utility.yul\":15198:15286   */\n      mstore\n        /* \"#utility.yul\":15305:15309   */\n      0x32\n        /* \"#utility.yul\":15302:15303   */\n      0x04\n        /* \"#utility.yul\":15295:15310   */\n      mstore\n        /* \"#utility.yul\":15329:15333   */\n      0x24\n        /* \"#utility.yul\":15326:15327   */\n      0x00\n        /* \"#utility.yul\":15319:15334   */\n      revert\n\n    auxdata: 0xa264697066735822122008e42220f615a0a70e2ea55c32238cc18c5c0151e9a9d3e274abfd4ffbc8ae2464736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_758": {
									"entryPoint": null,
									"id": 758,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_829": {
									"entryPoint": null,
									"id": 829,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_838": {
									"entryPoint": 125,
									"id": 838,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 140,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:11",
														"type": ""
													}
												],
												"src": "580:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:11"
															},
															"nodeType": "YulIf",
															"src": "1030:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:11",
														"type": ""
													}
												],
												"src": "874:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:11",
														"type": ""
													}
												],
												"src": "1161:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:11"
															},
															"nodeType": "YulIf",
															"src": "1434:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:11",
														"type": ""
													}
												],
												"src": "1296:308:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:11",
																"statements": []
															},
															"src": "1701:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:11",
														"type": ""
													}
												],
												"src": "1610:246:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:11"
															},
															"nodeType": "YulIf",
															"src": "2117:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:11"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:11",
														"type": ""
													}
												],
												"src": "1862:434:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:11"
															},
															"nodeType": "YulIf",
															"src": "2399:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:11",
														"type": ""
													}
												],
												"src": "2316:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:11"
															},
															"nodeType": "YulIf",
															"src": "2801:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:11",
														"type": ""
													}
												],
												"src": "2677:853:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:11",
														"type": ""
													}
												],
												"src": "3536:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:11"
															},
															"nodeType": "YulIf",
															"src": "3966:81:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:11"
															},
															"nodeType": "YulIf",
															"src": "4057:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:11",
														"type": ""
													}
												],
												"src": "3827:320:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:11",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:11",
														"type": ""
													}
												],
												"src": "4153:141:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:11",
														"type": ""
													}
												],
												"src": "4300:93:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:11"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:11",
														"type": ""
													}
												],
												"src": "4399:107:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:11"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:11",
														"type": ""
													}
												],
												"src": "4512:393:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:11",
														"type": ""
													}
												],
												"src": "4911:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:11",
														"type": ""
													}
												],
												"src": "4994:60:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:11",
														"type": ""
													}
												],
												"src": "5060:142:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:11",
														"type": ""
													}
												],
												"src": "5208:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:11",
														"type": ""
													}
												],
												"src": "5289:269:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:11",
														"type": ""
													}
												],
												"src": "5564:73:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:11",
														"type": ""
													}
												],
												"src": "5643:189:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:11",
																"statements": []
															},
															"src": "5898:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:11",
														"type": ""
													}
												],
												"src": "5838:186:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:11",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:11",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:11"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:11"
															},
															"nodeType": "YulIf",
															"src": "6120:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:11",
														"type": ""
													}
												],
												"src": "6030:543:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:11"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:11",
														"type": ""
													}
												],
												"src": "6579:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:11"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:11",
														"type": ""
													}
												],
												"src": "6702:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:11"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:11",
														"type": ""
													}
												],
												"src": "6876:295:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:11"
															},
															"nodeType": "YulIf",
															"src": "7381:56:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:11"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:11",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:11",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:11"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:11"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:11"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:11"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:11"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:11",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:11",
																					"statements": []
																				},
																				"src": "7867:208:11"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:11",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:11"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:11"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:11"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:11"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:11"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:11"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:11"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:11"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:11",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:11",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:11",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:11"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:11"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:11"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:11"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:11",
														"type": ""
													}
												],
												"src": "7176:1395:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620025c5380380620025c5833981810160405281019062000037919062000215565b818181600290816200004a9190620004e5565b5080600390816200005c9190620004e5565b506200006d6200007d60201b60201c565b60008190555050505050620005cc565b600090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000eb82620000a0565b810181811067ffffffffffffffff821117156200010d576200010c620000b1565b5b80604052505050565b60006200012262000082565b9050620001308282620000e0565b919050565b600067ffffffffffffffff821115620001535762000152620000b1565b5b6200015e82620000a0565b9050602081019050919050565b60005b838110156200018b5780820151818401526020810190506200016e565b60008484015250505050565b6000620001ae620001a88462000135565b62000116565b905082815260208101848484011115620001cd57620001cc6200009b565b5b620001da8482856200016b565b509392505050565b600082601f830112620001fa57620001f962000096565b5b81516200020c84826020860162000197565b91505092915050565b600080604083850312156200022f576200022e6200008c565b5b600083015167ffffffffffffffff81111562000250576200024f62000091565b5b6200025e85828601620001e2565b925050602083015167ffffffffffffffff81111562000282576200028162000091565b5b6200029085828601620001e2565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ed57607f821691505b602082108103620003035762000302620002a5565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200036d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200032e565b6200037986836200032e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003c6620003c0620003ba8462000391565b6200039b565b62000391565b9050919050565b6000819050919050565b620003e283620003a5565b620003fa620003f182620003cd565b8484546200033b565b825550505050565b600090565b6200041162000402565b6200041e818484620003d7565b505050565b5b8181101562000446576200043a60008262000407565b60018101905062000424565b5050565b601f82111562000495576200045f8162000309565b6200046a846200031e565b810160208510156200047a578190505b6200049262000489856200031e565b83018262000423565b50505b505050565b600082821c905092915050565b6000620004ba600019846008026200049a565b1980831691505092915050565b6000620004d58383620004a7565b9150826002028217905092915050565b620004f0826200029a565b67ffffffffffffffff8111156200050c576200050b620000b1565b5b620005188254620002d4565b620005258282856200044a565b600060209050601f8311600181146200055d576000841562000548578287015190505b620005548582620004c7565b865550620005c4565b601f1984166200056d8662000309565b60005b82811015620005975784890151825560018201915060208501945060208101905062000570565b86831015620005b75784890151620005b3601f891682620004a7565b8355505b6001600288020188555050505b505050505050565b611fe980620005dc6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b61010960048036038101906101049190611723565b6102f5565b604051610116919061176b565b60405180910390f35b6101276103d7565b6040516101349190611816565b60405180910390f35b6101576004803603810190610152919061186e565b610469565b60405161016491906118dc565b60405180910390f35b61018760048036038101906101829190611923565b6104e5565b005b6101916105e9565b60405161019e9190611972565b60405180910390f35b6101c160048036038101906101bc919061198d565b610600565b005b6101dd60048036038101906101d8919061198d565b610610565b005b6101f960048036038101906101f4919061186e565b610630565b60405161020691906118dc565b60405180910390f35b610229600480360381019061022491906119e0565b610646565b6040516102369190611972565b60405180910390f35b610247610715565b6040516102549190611816565b60405180910390f35b61027760048036038101906102729190611a39565b6107a7565b005b610293600480360381019061028e9190611bae565b61091e565b005b6102af60048036038101906102aa919061186e565b610996565b6040516102bc9190611816565b60405180910390f35b6102df60048036038101906102da9190611c31565b610a34565b6040516102ec919061176b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103d057506103cf82610ac8565b5b9050919050565b6060600280546103e690611ca0565b80601f016020809104026020016040519081016040528092919081815260200182805461041290611ca0565b801561045f5780601f106104345761010080835404028352916020019161045f565b820191906000526020600020905b81548152906001019060200180831161044257829003601f168201915b5050505050905090565b600061047482610b32565b6104aa576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104f082610630565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610557576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610576610b80565b73ffffffffffffffffffffffffffffffffffffffff16146105d9576105a28161059d610b80565b610a34565b6105d8576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b6105e4838383610b88565b505050565b60006105f3610c3a565b6001546000540303905090565b61060b838383610c3f565b505050565b61062b8383836040518060200160405280600081525061091e565b505050565b600061063b826110f3565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106ad576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b60606003805461072490611ca0565b80601f016020809104026020016040519081016040528092919081815260200182805461075090611ca0565b801561079d5780601f106107725761010080835404028352916020019161079d565b820191906000526020600020905b81548152906001019060200180831161078057829003601f168201915b5050505050905090565b6107af610b80565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610813576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610820610b80565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166108cd610b80565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610912919061176b565b60405180910390a35050565b610929848484610c3f565b6109488373ffffffffffffffffffffffffffffffffffffffff1661137e565b1561099057610959848484846113a1565b61098f576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b60606109a182610b32565b6109d7576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109e16114f1565b90506000815103610a015760405180602001604052806000815250610a2c565b80610a0b84611508565b604051602001610a1c929190611d0d565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600081610b3d610c3a565b11158015610b4c575060005482105b8015610b79575060046000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b6000610c4a826110f3565b90508373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614610cb5576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16610cd6610b80565b73ffffffffffffffffffffffffffffffffffffffff161480610d055750610d0485610cff610b80565b610a34565b5b80610d4a5750610d13610b80565b73ffffffffffffffffffffffffffffffffffffffff16610d3284610469565b73ffffffffffffffffffffffffffffffffffffffff16145b905080610d83576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610de9576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610df68585856001611668565b610e0260008487610b88565b6001600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600460008581526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001850190506000600460008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361108157600054821461108057878160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110ec858585600161166e565b5050505050565b6110fb611674565b600082905080611109610c3a565b1161134757600054811015611346576000600460008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050806040015161134457600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611228578092505050611379565b5b60011561134357818060019003925050600460008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461133e578092505050611379565b611229565b5b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026113c7610b80565b8786866040518563ffffffff1660e01b81526004016113e99493929190611d86565b6020604051808303816000875af192505050801561142557506040513d601f19601f820116820180604052508101906114229190611de7565b60015b61149e573d8060008114611455576040519150601f19603f3d011682016040523d82523d6000602084013e61145a565b606091505b506000815103611496576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606000820361154f576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611663565b600082905060005b6000821461158157808061156a90611e43565b915050600a8261157a9190611eba565b9150611557565b60008167ffffffffffffffff81111561159d5761159c611a83565b5b6040519080825280601f01601f1916602001820160405280156115cf5781602001600182028036833780820191505090505b5090505b6000851461165c576001826115e89190611eeb565b9150600a856115f79190611f1f565b60306116039190611f50565b60f81b81838151811061161957611618611f84565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856116559190611eba565b94506115d3565b8093505050505b919050565b50505050565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611700816116cb565b811461170b57600080fd5b50565b60008135905061171d816116f7565b92915050565b600060208284031215611739576117386116c1565b5b60006117478482850161170e565b91505092915050565b60008115159050919050565b61176581611750565b82525050565b6000602082019050611780600083018461175c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117c05780820151818401526020810190506117a5565b60008484015250505050565b6000601f19601f8301169050919050565b60006117e882611786565b6117f28185611791565b93506118028185602086016117a2565b61180b816117cc565b840191505092915050565b6000602082019050818103600083015261183081846117dd565b905092915050565b6000819050919050565b61184b81611838565b811461185657600080fd5b50565b60008135905061186881611842565b92915050565b600060208284031215611884576118836116c1565b5b600061189284828501611859565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118c68261189b565b9050919050565b6118d6816118bb565b82525050565b60006020820190506118f160008301846118cd565b92915050565b611900816118bb565b811461190b57600080fd5b50565b60008135905061191d816118f7565b92915050565b6000806040838503121561193a576119396116c1565b5b60006119488582860161190e565b925050602061195985828601611859565b9150509250929050565b61196c81611838565b82525050565b60006020820190506119876000830184611963565b92915050565b6000806000606084860312156119a6576119a56116c1565b5b60006119b48682870161190e565b93505060206119c58682870161190e565b92505060406119d686828701611859565b9150509250925092565b6000602082840312156119f6576119f56116c1565b5b6000611a048482850161190e565b91505092915050565b611a1681611750565b8114611a2157600080fd5b50565b600081359050611a3381611a0d565b92915050565b60008060408385031215611a5057611a4f6116c1565b5b6000611a5e8582860161190e565b9250506020611a6f85828601611a24565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611abb826117cc565b810181811067ffffffffffffffff82111715611ada57611ad9611a83565b5b80604052505050565b6000611aed6116b7565b9050611af98282611ab2565b919050565b600067ffffffffffffffff821115611b1957611b18611a83565b5b611b22826117cc565b9050602081019050919050565b82818337600083830152505050565b6000611b51611b4c84611afe565b611ae3565b905082815260208101848484011115611b6d57611b6c611a7e565b5b611b78848285611b2f565b509392505050565b600082601f830112611b9557611b94611a79565b5b8135611ba5848260208601611b3e565b91505092915050565b60008060008060808587031215611bc857611bc76116c1565b5b6000611bd68782880161190e565b9450506020611be78782880161190e565b9350506040611bf887828801611859565b925050606085013567ffffffffffffffff811115611c1957611c186116c6565b5b611c2587828801611b80565b91505092959194509250565b60008060408385031215611c4857611c476116c1565b5b6000611c568582860161190e565b9250506020611c678582860161190e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cb857607f821691505b602082108103611ccb57611cca611c71565b5b50919050565b600081905092915050565b6000611ce782611786565b611cf18185611cd1565b9350611d018185602086016117a2565b80840191505092915050565b6000611d198285611cdc565b9150611d258284611cdc565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611d5882611d31565b611d628185611d3c565b9350611d728185602086016117a2565b611d7b816117cc565b840191505092915050565b6000608082019050611d9b60008301876118cd565b611da860208301866118cd565b611db56040830185611963565b8181036060830152611dc78184611d4d565b905095945050505050565b600081519050611de1816116f7565b92915050565b600060208284031215611dfd57611dfc6116c1565b5b6000611e0b84828501611dd2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e4e82611838565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e8057611e7f611e14565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ec582611838565b9150611ed083611838565b925082611ee057611edf611e8b565b5b828204905092915050565b6000611ef682611838565b9150611f0183611838565b9250828203905081811115611f1957611f18611e14565b5b92915050565b6000611f2a82611838565b9150611f3583611838565b925082611f4557611f44611e8b565b5b828206905092915050565b6000611f5b82611838565b9150611f6683611838565b9250828201905080821115611f7e57611f7d611e14565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122008e42220f615a0a70e2ea55c32238cc18c5c0151e9a9d3e274abfd4ffbc8ae2464736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25C5 CODESIZE SUB DUP1 PUSH3 0x25C5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x215 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x4E5 JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x4E5 JUMP JUMPDEST POP PUSH3 0x6D PUSH3 0x7D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x5CC JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xEB DUP3 PUSH3 0xA0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x10D JUMPI PUSH3 0x10C PUSH3 0xB1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x122 PUSH3 0x82 JUMP JUMPDEST SWAP1 POP PUSH3 0x130 DUP3 DUP3 PUSH3 0xE0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x152 PUSH3 0xB1 JUMP JUMPDEST JUMPDEST PUSH3 0x15E DUP3 PUSH3 0xA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x18B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x16E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AE PUSH3 0x1A8 DUP5 PUSH3 0x135 JUMP JUMPDEST PUSH3 0x116 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1CD JUMPI PUSH3 0x1CC PUSH3 0x9B JUMP JUMPDEST JUMPDEST PUSH3 0x1DA DUP5 DUP3 DUP6 PUSH3 0x16B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1FA JUMPI PUSH3 0x1F9 PUSH3 0x96 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x20C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x197 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x22F JUMPI PUSH3 0x22E PUSH3 0x8C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x250 JUMPI PUSH3 0x24F PUSH3 0x91 JUMP JUMPDEST JUMPDEST PUSH3 0x25E DUP6 DUP3 DUP7 ADD PUSH3 0x1E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x282 JUMPI PUSH3 0x281 PUSH3 0x91 JUMP JUMPDEST JUMPDEST PUSH3 0x290 DUP6 DUP3 DUP7 ADD PUSH3 0x1E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2ED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x303 JUMPI PUSH3 0x302 PUSH3 0x2A5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x36D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x32E JUMP JUMPDEST PUSH3 0x379 DUP7 DUP4 PUSH3 0x32E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3C6 PUSH3 0x3C0 PUSH3 0x3BA DUP5 PUSH3 0x391 JUMP JUMPDEST PUSH3 0x39B JUMP JUMPDEST PUSH3 0x391 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3E2 DUP4 PUSH3 0x3A5 JUMP JUMPDEST PUSH3 0x3FA PUSH3 0x3F1 DUP3 PUSH3 0x3CD JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x33B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x411 PUSH3 0x402 JUMP JUMPDEST PUSH3 0x41E DUP2 DUP5 DUP5 PUSH3 0x3D7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x446 JUMPI PUSH3 0x43A PUSH1 0x0 DUP3 PUSH3 0x407 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x424 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x495 JUMPI PUSH3 0x45F DUP2 PUSH3 0x309 JUMP JUMPDEST PUSH3 0x46A DUP5 PUSH3 0x31E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x47A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x492 PUSH3 0x489 DUP6 PUSH3 0x31E JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x423 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4BA PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x49A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D5 DUP4 DUP4 PUSH3 0x4A7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4F0 DUP3 PUSH3 0x29A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x50C JUMPI PUSH3 0x50B PUSH3 0xB1 JUMP JUMPDEST JUMPDEST PUSH3 0x518 DUP3 SLOAD PUSH3 0x2D4 JUMP JUMPDEST PUSH3 0x525 DUP3 DUP3 DUP6 PUSH3 0x44A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x55D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x548 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x554 DUP6 DUP3 PUSH3 0x4C7 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5C4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x56D DUP7 PUSH3 0x309 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x597 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x570 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5B7 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5B3 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4A7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1FE9 DUP1 PUSH3 0x5DC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x715 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1C31 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C0 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3D0 JUMPI POP PUSH2 0x3CF DUP3 PUSH2 0xAC8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3E6 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x434 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x442 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP3 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F0 DUP3 PUSH2 0x630 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x576 PUSH2 0xB80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D9 JUMPI PUSH2 0x5A2 DUP2 PUSH2 0x59D PUSH2 0xB80 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x5E4 DUP4 DUP4 DUP4 PUSH2 0xB88 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x60B DUP4 DUP4 DUP4 PUSH2 0xC3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x62B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x91E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63B DUP3 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x724 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x750 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x772 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x780 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7AF PUSH2 0xB80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x820 PUSH2 0xB80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8CD PUSH2 0xB80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x912 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x929 DUP5 DUP5 DUP5 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x948 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x137E JUMP JUMPDEST ISZERO PUSH2 0x990 JUMPI PUSH2 0x959 DUP5 DUP5 DUP5 DUP5 PUSH2 0x13A1 JUMP JUMPDEST PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9A1 DUP3 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x9D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9E1 PUSH2 0x14F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA2C JUMP JUMPDEST DUP1 PUSH2 0xA0B DUP5 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA1C SWAP3 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xB3D PUSH2 0xC3A JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xB4C JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xB79 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4A DUP3 PUSH2 0x10F3 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCD6 PUSH2 0xB80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD05 JUMPI POP PUSH2 0xD04 DUP6 PUSH2 0xCFF PUSH2 0xB80 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xD4A JUMPI POP PUSH2 0xD13 PUSH2 0xB80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD32 DUP5 PUSH2 0x469 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xD83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDF6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0xE02 PUSH1 0x0 DUP5 DUP8 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1081 JUMPI PUSH1 0x0 SLOAD DUP3 EQ PUSH2 0x1080 JUMPI DUP8 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10EC DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x166E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10FB PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1109 PUSH2 0xC3A JUMP JUMPDEST GT PUSH2 0x1347 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x1346 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x1344 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1228 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1379 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1343 JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x133E JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x1229 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x13C7 PUSH2 0xB80 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1425 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x149E JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1455 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x145A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1496 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x154F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1581 JUMPI DUP1 DUP1 PUSH2 0x156A SWAP1 PUSH2 0x1E43 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x157A SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST SWAP2 POP PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x159D JUMPI PUSH2 0x159C PUSH2 0x1A83 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15CF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x165C JUMPI PUSH1 0x1 DUP3 PUSH2 0x15E8 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x15F7 SWAP2 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0x1F84 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1655 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST SWAP5 POP PUSH2 0x15D3 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1700 DUP2 PUSH2 0x16CB JUMP JUMPDEST DUP2 EQ PUSH2 0x170B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x171D DUP2 PUSH2 0x16F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1747 DUP5 DUP3 DUP6 ADD PUSH2 0x170E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1765 DUP2 PUSH2 0x1750 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1780 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x175C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E8 DUP3 PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x17F2 DUP2 DUP6 PUSH2 0x1791 JUMP JUMPDEST SWAP4 POP PUSH2 0x1802 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x180B DUP2 PUSH2 0x17CC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1830 DUP2 DUP5 PUSH2 0x17DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184B DUP2 PUSH2 0x1838 JUMP JUMPDEST DUP2 EQ PUSH2 0x1856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1868 DUP2 PUSH2 0x1842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1892 DUP5 DUP3 DUP6 ADD PUSH2 0x1859 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C6 DUP3 PUSH2 0x189B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D6 DUP2 PUSH2 0x18BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1900 DUP2 PUSH2 0x18BB JUMP JUMPDEST DUP2 EQ PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x191D DUP2 PUSH2 0x18F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x193A JUMPI PUSH2 0x1939 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1948 DUP6 DUP3 DUP7 ADD PUSH2 0x190E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1959 DUP6 DUP3 DUP7 ADD PUSH2 0x1859 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x196C DUP2 PUSH2 0x1838 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1987 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1963 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19A6 JUMPI PUSH2 0x19A5 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B4 DUP7 DUP3 DUP8 ADD PUSH2 0x190E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19C5 DUP7 DUP3 DUP8 ADD PUSH2 0x190E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19D6 DUP7 DUP3 DUP8 ADD PUSH2 0x1859 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F6 JUMPI PUSH2 0x19F5 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A04 DUP5 DUP3 DUP6 ADD PUSH2 0x190E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A16 DUP2 PUSH2 0x1750 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A33 DUP2 PUSH2 0x1A0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A50 JUMPI PUSH2 0x1A4F PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A5E DUP6 DUP3 DUP7 ADD PUSH2 0x190E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A6F DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1ABB DUP3 PUSH2 0x17CC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1ADA JUMPI PUSH2 0x1AD9 PUSH2 0x1A83 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AED PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AF9 DUP3 DUP3 PUSH2 0x1AB2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B19 JUMPI PUSH2 0x1B18 PUSH2 0x1A83 JUMP JUMPDEST JUMPDEST PUSH2 0x1B22 DUP3 PUSH2 0x17CC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B51 PUSH2 0x1B4C DUP5 PUSH2 0x1AFE JUMP JUMPDEST PUSH2 0x1AE3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B6D JUMPI PUSH2 0x1B6C PUSH2 0x1A7E JUMP JUMPDEST JUMPDEST PUSH2 0x1B78 DUP5 DUP3 DUP6 PUSH2 0x1B2F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B95 JUMPI PUSH2 0x1B94 PUSH2 0x1A79 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BA5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BD6 DUP8 DUP3 DUP9 ADD PUSH2 0x190E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BE7 DUP8 DUP3 DUP9 ADD PUSH2 0x190E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BF8 DUP8 DUP3 DUP9 ADD PUSH2 0x1859 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C19 JUMPI PUSH2 0x1C18 PUSH2 0x16C6 JUMP JUMPDEST JUMPDEST PUSH2 0x1C25 DUP8 DUP3 DUP9 ADD PUSH2 0x1B80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C56 DUP6 DUP3 DUP7 ADD PUSH2 0x190E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C67 DUP6 DUP3 DUP7 ADD PUSH2 0x190E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CB8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CCB JUMPI PUSH2 0x1CCA PUSH2 0x1C71 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE7 DUP3 PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x1CF1 DUP2 DUP6 PUSH2 0x1CD1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D19 DUP3 DUP6 PUSH2 0x1CDC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D25 DUP3 DUP5 PUSH2 0x1CDC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D58 DUP3 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x1D62 DUP2 DUP6 PUSH2 0x1D3C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D72 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x1D7B DUP2 PUSH2 0x17CC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D9B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18CD JUMP JUMPDEST PUSH2 0x1DA8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18CD JUMP JUMPDEST PUSH2 0x1DB5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1963 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1DC7 DUP2 DUP5 PUSH2 0x1D4D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DE1 DUP2 PUSH2 0x16F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DFD JUMPI PUSH2 0x1DFC PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E0B DUP5 DUP3 DUP6 ADD PUSH2 0x1DD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E4E DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E80 JUMPI PUSH2 0x1E7F PUSH2 0x1E14 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EC5 DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED0 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EE0 JUMPI PUSH2 0x1EDF PUSH2 0x1E8B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF6 DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F01 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1F19 JUMPI PUSH2 0x1F18 PUSH2 0x1E14 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2A DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F35 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F45 JUMPI PUSH2 0x1F44 PUSH2 0x1E8B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5B DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F66 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F7E JUMPI PUSH2 0x1F7D PUSH2 0x1E14 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xE4 0x22 KECCAK256 0xF6 ISZERO LOG0 0xA7 0xE 0x2E 0xA5 0x5C ORIGIN 0x23 DUP13 0xC1 DUP13 0x5C ADD MLOAD 0xE9 0xA9 0xD3 0xE2 PUSH21 0xABFD4FFBC8AE2464736F6C63430008100033000000 ",
							"sourceMap": "259:137:8:-:0;;;301:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;370:5;377:7;2339:5:9;2331;:13;;;;;;:::i;:::-;;2365:7;2355;:17;;;;;;:::i;:::-;;2399:15;:13;;;:15;;:::i;:::-;2383:13;:31;;;;2264:158;;301:92:8;;259:137;;2519:92:9;2575:7;2519:92;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;259:137:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_2132": {
									"entryPoint": 5742,
									"id": 2132,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2051": {
									"entryPoint": 2952,
									"id": 2051,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_1151": {
									"entryPoint": 5361,
									"id": 1151,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2119": {
									"entryPoint": 5736,
									"id": 2119,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2106": {
									"entryPoint": 5025,
									"id": 2106,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1368": {
									"entryPoint": 2866,
									"id": 1368,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_467": {
									"entryPoint": 2944,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownershipOf_1064": {
									"entryPoint": 4339,
									"id": 1064,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_838": {
									"entryPoint": 3130,
									"id": 838,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_1834": {
									"entryPoint": 3135,
									"id": 1834,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1197": {
									"entryPoint": 1253,
									"id": 1197,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_926": {
									"entryPoint": 1606,
									"id": 926,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1219": {
									"entryPoint": 1129,
									"id": 1219,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1271": {
									"entryPoint": 2612,
									"id": 1271,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_178": {
									"entryPoint": 4990,
									"id": 178,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1089": {
									"entryPoint": 983,
									"id": 1089,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1079": {
									"entryPoint": 1584,
									"id": 1079,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1308": {
									"entryPoint": 1552,
									"id": 1308,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1344": {
									"entryPoint": 2334,
									"id": 1344,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1253": {
									"entryPoint": 1959,
									"id": 1253,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_726": {
									"entryPoint": 2760,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_898": {
									"entryPoint": 757,
									"id": 898,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1099": {
									"entryPoint": 1813,
									"id": 1099,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_565": {
									"entryPoint": 5384,
									"id": 565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1142": {
									"entryPoint": 2454,
									"id": 1142,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_854": {
									"entryPoint": 1513,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1289": {
									"entryPoint": 1536,
									"id": 1289,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6974,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 7634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7437,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7558,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5815,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 7967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6787,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6782,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5830,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 6391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15343:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:11",
														"type": ""
													}
												],
												"src": "1518:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:11",
														"type": ""
													}
												],
												"src": "1623:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:11",
																"statements": []
															},
															"src": "1889:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:11",
														"type": ""
													}
												],
												"src": "1798:246:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:11",
														"type": ""
													}
												],
												"src": "2050:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:11",
														"type": ""
													}
												],
												"src": "2158:377:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:11",
														"type": ""
													}
												],
												"src": "2541:313:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:11",
														"type": ""
													}
												],
												"src": "2860:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:11"
															},
															"nodeType": "YulIf",
															"src": "2996:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:11",
														"type": ""
													}
												],
												"src": "2943:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:11",
														"type": ""
													}
												],
												"src": "3071:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:11"
															},
															"nodeType": "YulIf",
															"src": "3292:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:11",
														"type": ""
													}
												],
												"src": "3216:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:11",
														"type": ""
													}
												],
												"src": "3551:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:11",
														"type": ""
													}
												],
												"src": "3683:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:11",
														"type": ""
													}
												],
												"src": "3785:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:11",
														"type": ""
													}
												],
												"src": "3909:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:11"
															},
															"nodeType": "YulIf",
															"src": "4190:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:11",
														"type": ""
													}
												],
												"src": "4137:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:11",
														"type": ""
													}
												],
												"src": "4265:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:11"
															},
															"nodeType": "YulIf",
															"src": "4503:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:11",
														"type": ""
													}
												],
												"src": "4410:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:11",
														"type": ""
													}
												],
												"src": "4890:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:11",
														"type": ""
													}
												],
												"src": "5014:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:11"
															},
															"nodeType": "YulIf",
															"src": "5352:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:11",
														"type": ""
													}
												],
												"src": "5242:619:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:11"
															},
															"nodeType": "YulIf",
															"src": "5943:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:11",
														"type": ""
													}
												],
												"src": "5867:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:11"
															},
															"nodeType": "YulIf",
															"src": "6252:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:11",
														"type": ""
													}
												],
												"src": "6202:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:11",
														"type": ""
													}
												],
												"src": "6324:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:11"
															},
															"nodeType": "YulIf",
															"src": "6553:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:11",
														"type": ""
													}
												],
												"src": "6463:468:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:11"
															},
															"nodeType": "YulIf",
															"src": "7525:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:11",
														"type": ""
													}
												],
												"src": "7369:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:11",
														"type": ""
													}
												],
												"src": "7656:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:11"
															},
															"nodeType": "YulIf",
															"src": "7928:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:11",
														"type": ""
													}
												],
												"src": "7791:307:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:11"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:11"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:11",
														"type": ""
													}
												],
												"src": "8104:146:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:11"
															},
															"nodeType": "YulIf",
															"src": "8498:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:11"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:11",
														"type": ""
													}
												],
												"src": "8256:423:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:11"
															},
															"nodeType": "YulIf",
															"src": "8769:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:11",
														"type": ""
													}
												],
												"src": "8698:338:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:11"
															},
															"nodeType": "YulIf",
															"src": "9178:120:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:11",
														"type": ""
													}
												],
												"src": "9042:943:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:11"
															},
															"nodeType": "YulIf",
															"src": "10084:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:11",
														"type": ""
													}
												],
												"src": "9991:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:11"
															},
															"nodeType": "YulIf",
															"src": "10796:81:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:11"
															},
															"nodeType": "YulIf",
															"src": "10887:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:11",
														"type": ""
													}
												],
												"src": "10657:320:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11097:34:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11107:18:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11122:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11107:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11069:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11074:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11085:11:11",
														"type": ""
													}
												],
												"src": "10983:148:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11247:280:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11257:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11304:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11271:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11261:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11319:96:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11403:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11408:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11326:76:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:89:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11319:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11463:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11470:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11459:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11459:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11477:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11482:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11424:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11424:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11424:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11498:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11509:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11514:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11498:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11228:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11235:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11243:3:11",
														"type": ""
													}
												],
												"src": "11137:390:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11717:251:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11728:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11817:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11826:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11735:81:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11840:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11929:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11938:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11847:81:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11847:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11840:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11952:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11959:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11688:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11694:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11702:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11713:3:11",
														"type": ""
													}
												],
												"src": "11533:435:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12043:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12059:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12053:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12053:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12043:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12015:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12025:6:11",
														"type": ""
													}
												],
												"src": "11974:98:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12173:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12190:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12195:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12183:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12183:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12183:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12211:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12230:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12235:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12226:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12226:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12211:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12145:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12150:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12161:11:11",
														"type": ""
													}
												],
												"src": "12078:168:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12342:283:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12352:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12398:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12366:31:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12366:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12356:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12413:77:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12478:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12483:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12420:57:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12420:70:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12413:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12538:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12545:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12534:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12534:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12552:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12557:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12499:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12499:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12499:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12573:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12584:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12611:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12589:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12589:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12580:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12580:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12573:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12323:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12330:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12338:3:11",
														"type": ""
													}
												],
												"src": "12252:373:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12831:440:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12841:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12853:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12864:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12849:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12841:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12922:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12935:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12946:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12931:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12931:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12878:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12878:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12878:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13003:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13016:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13027:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13012:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13012:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12959:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12959:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12959:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13085:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13098:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13109:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13094:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13094:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13041:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13041:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13041:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13134:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13145:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13130:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13130:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13154:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13160:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13150:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13150:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13123:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13123:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13123:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13180:84:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13250:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13259:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13188:61:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13188:76:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13180:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12779:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12791:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12799:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12807:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12815:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12826:4:11",
														"type": ""
													}
												],
												"src": "12631:640:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13339:79:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13349:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13364:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13358:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13358:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13349:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13406:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13380:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13380:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13380:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13317:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13325:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13333:5:11",
														"type": ""
													}
												],
												"src": "13277:141:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13500:273:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13546:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13548:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13548:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13548:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13521:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13530:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13517:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13517:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13542:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13513:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13513:32:11"
															},
															"nodeType": "YulIf",
															"src": "13510:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "13639:127:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13654:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13668:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13658:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13683:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13728:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13739:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13724:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13724:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13748:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13693:30:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13693:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13683:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13470:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13481:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13493:6:11",
														"type": ""
													}
												],
												"src": "13424:349:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13807:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13824:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13827:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13817:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13817:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13817:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13921:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13924:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13914:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13914:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13914:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13945:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13948:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13938:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13938:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13938:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13779:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14008:190:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14018:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14045:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14027:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14027:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14018:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14141:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14143:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14143:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14143:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14066:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14073:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14063:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14063:77:11"
															},
															"nodeType": "YulIf",
															"src": "14060:103:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14172:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14183:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14190:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14179:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14179:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14172:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13994:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14004:3:11",
														"type": ""
													}
												],
												"src": "13965:233:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14232:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14249:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14252:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14242:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14242:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14242:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14346:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14349:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14339:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14339:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14339:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14370:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14373:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14363:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14363:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14363:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14204:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14432:143:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14442:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14465:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14447:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14447:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14442:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14476:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14499:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14481:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14481:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14476:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14523:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "14525:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14525:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14525:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14520:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14513:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14513:9:11"
															},
															"nodeType": "YulIf",
															"src": "14510:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14555:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14564:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14567:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14560:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14560:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14555:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14421:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14424:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "14430:1:11",
														"type": ""
													}
												],
												"src": "14390:185:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14626:149:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14636:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14659:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14641:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14641:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14636:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14670:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14693:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14675:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14675:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14670:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14704:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14716:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14719:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14712:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14712:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14704:4:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14746:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14748:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14748:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14748:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "14737:4:11"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14743:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14734:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14734:11:11"
															},
															"nodeType": "YulIf",
															"src": "14731:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14612:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14615:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14621:4:11",
														"type": ""
													}
												],
												"src": "14581:194:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14815:142:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14825:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14848:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14830:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14830:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14825:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14859:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14882:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14864:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14864:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14859:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14906:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "14908:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14908:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14908:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14903:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14896:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14896:9:11"
															},
															"nodeType": "YulIf",
															"src": "14893:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14937:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14946:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14949:1:11"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "14942:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14942:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14937:1:11"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14804:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14807:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "14813:1:11",
														"type": ""
													}
												],
												"src": "14781:176:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15007:147:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15017:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15040:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15022:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15022:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15017:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15051:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15074:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15056:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15056:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15051:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15085:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15096:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15099:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15092:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15092:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15085:3:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15125:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15127:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15127:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15127:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15117:1:11"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "15120:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15114:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15114:10:11"
															},
															"nodeType": "YulIf",
															"src": "15111:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14994:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14997:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15003:3:11",
														"type": ""
													}
												],
												"src": "14963:191:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15188:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15205:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15208:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15198:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15198:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15198:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15302:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15305:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15295:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15295:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15295:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15326:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15329:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15319:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15319:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15319:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15160:180:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b61010960048036038101906101049190611723565b6102f5565b604051610116919061176b565b60405180910390f35b6101276103d7565b6040516101349190611816565b60405180910390f35b6101576004803603810190610152919061186e565b610469565b60405161016491906118dc565b60405180910390f35b61018760048036038101906101829190611923565b6104e5565b005b6101916105e9565b60405161019e9190611972565b60405180910390f35b6101c160048036038101906101bc919061198d565b610600565b005b6101dd60048036038101906101d8919061198d565b610610565b005b6101f960048036038101906101f4919061186e565b610630565b60405161020691906118dc565b60405180910390f35b610229600480360381019061022491906119e0565b610646565b6040516102369190611972565b60405180910390f35b610247610715565b6040516102549190611816565b60405180910390f35b61027760048036038101906102729190611a39565b6107a7565b005b610293600480360381019061028e9190611bae565b61091e565b005b6102af60048036038101906102aa919061186e565b610996565b6040516102bc9190611816565b60405180910390f35b6102df60048036038101906102da9190611c31565b610a34565b6040516102ec919061176b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103d057506103cf82610ac8565b5b9050919050565b6060600280546103e690611ca0565b80601f016020809104026020016040519081016040528092919081815260200182805461041290611ca0565b801561045f5780601f106104345761010080835404028352916020019161045f565b820191906000526020600020905b81548152906001019060200180831161044257829003601f168201915b5050505050905090565b600061047482610b32565b6104aa576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104f082610630565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610557576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610576610b80565b73ffffffffffffffffffffffffffffffffffffffff16146105d9576105a28161059d610b80565b610a34565b6105d8576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b6105e4838383610b88565b505050565b60006105f3610c3a565b6001546000540303905090565b61060b838383610c3f565b505050565b61062b8383836040518060200160405280600081525061091e565b505050565b600061063b826110f3565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106ad576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b60606003805461072490611ca0565b80601f016020809104026020016040519081016040528092919081815260200182805461075090611ca0565b801561079d5780601f106107725761010080835404028352916020019161079d565b820191906000526020600020905b81548152906001019060200180831161078057829003601f168201915b5050505050905090565b6107af610b80565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610813576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610820610b80565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166108cd610b80565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610912919061176b565b60405180910390a35050565b610929848484610c3f565b6109488373ffffffffffffffffffffffffffffffffffffffff1661137e565b1561099057610959848484846113a1565b61098f576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b60606109a182610b32565b6109d7576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109e16114f1565b90506000815103610a015760405180602001604052806000815250610a2c565b80610a0b84611508565b604051602001610a1c929190611d0d565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600081610b3d610c3a565b11158015610b4c575060005482105b8015610b79575060046000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b6000610c4a826110f3565b90508373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614610cb5576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16610cd6610b80565b73ffffffffffffffffffffffffffffffffffffffff161480610d055750610d0485610cff610b80565b610a34565b5b80610d4a5750610d13610b80565b73ffffffffffffffffffffffffffffffffffffffff16610d3284610469565b73ffffffffffffffffffffffffffffffffffffffff16145b905080610d83576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610de9576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610df68585856001611668565b610e0260008487610b88565b6001600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600460008581526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001850190506000600460008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361108157600054821461108057878160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110ec858585600161166e565b5050505050565b6110fb611674565b600082905080611109610c3a565b1161134757600054811015611346576000600460008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050806040015161134457600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611228578092505050611379565b5b60011561134357818060019003925050600460008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461133e578092505050611379565b611229565b5b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026113c7610b80565b8786866040518563ffffffff1660e01b81526004016113e99493929190611d86565b6020604051808303816000875af192505050801561142557506040513d601f19601f820116820180604052508101906114229190611de7565b60015b61149e573d8060008114611455576040519150601f19603f3d011682016040523d82523d6000602084013e61145a565b606091505b506000815103611496576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606000820361154f576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611663565b600082905060005b6000821461158157808061156a90611e43565b915050600a8261157a9190611eba565b9150611557565b60008167ffffffffffffffff81111561159d5761159c611a83565b5b6040519080825280601f01601f1916602001820160405280156115cf5781602001600182028036833780820191505090505b5090505b6000851461165c576001826115e89190611eeb565b9150600a856115f79190611f1f565b60306116039190611f50565b60f81b81838151811061161957611618611f84565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856116559190611eba565b94506115d3565b8093505050505b919050565b50505050565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611700816116cb565b811461170b57600080fd5b50565b60008135905061171d816116f7565b92915050565b600060208284031215611739576117386116c1565b5b60006117478482850161170e565b91505092915050565b60008115159050919050565b61176581611750565b82525050565b6000602082019050611780600083018461175c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117c05780820151818401526020810190506117a5565b60008484015250505050565b6000601f19601f8301169050919050565b60006117e882611786565b6117f28185611791565b93506118028185602086016117a2565b61180b816117cc565b840191505092915050565b6000602082019050818103600083015261183081846117dd565b905092915050565b6000819050919050565b61184b81611838565b811461185657600080fd5b50565b60008135905061186881611842565b92915050565b600060208284031215611884576118836116c1565b5b600061189284828501611859565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118c68261189b565b9050919050565b6118d6816118bb565b82525050565b60006020820190506118f160008301846118cd565b92915050565b611900816118bb565b811461190b57600080fd5b50565b60008135905061191d816118f7565b92915050565b6000806040838503121561193a576119396116c1565b5b60006119488582860161190e565b925050602061195985828601611859565b9150509250929050565b61196c81611838565b82525050565b60006020820190506119876000830184611963565b92915050565b6000806000606084860312156119a6576119a56116c1565b5b60006119b48682870161190e565b93505060206119c58682870161190e565b92505060406119d686828701611859565b9150509250925092565b6000602082840312156119f6576119f56116c1565b5b6000611a048482850161190e565b91505092915050565b611a1681611750565b8114611a2157600080fd5b50565b600081359050611a3381611a0d565b92915050565b60008060408385031215611a5057611a4f6116c1565b5b6000611a5e8582860161190e565b9250506020611a6f85828601611a24565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611abb826117cc565b810181811067ffffffffffffffff82111715611ada57611ad9611a83565b5b80604052505050565b6000611aed6116b7565b9050611af98282611ab2565b919050565b600067ffffffffffffffff821115611b1957611b18611a83565b5b611b22826117cc565b9050602081019050919050565b82818337600083830152505050565b6000611b51611b4c84611afe565b611ae3565b905082815260208101848484011115611b6d57611b6c611a7e565b5b611b78848285611b2f565b509392505050565b600082601f830112611b9557611b94611a79565b5b8135611ba5848260208601611b3e565b91505092915050565b60008060008060808587031215611bc857611bc76116c1565b5b6000611bd68782880161190e565b9450506020611be78782880161190e565b9350506040611bf887828801611859565b925050606085013567ffffffffffffffff811115611c1957611c186116c6565b5b611c2587828801611b80565b91505092959194509250565b60008060408385031215611c4857611c476116c1565b5b6000611c568582860161190e565b9250506020611c678582860161190e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cb857607f821691505b602082108103611ccb57611cca611c71565b5b50919050565b600081905092915050565b6000611ce782611786565b611cf18185611cd1565b9350611d018185602086016117a2565b80840191505092915050565b6000611d198285611cdc565b9150611d258284611cdc565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611d5882611d31565b611d628185611d3c565b9350611d728185602086016117a2565b611d7b816117cc565b840191505092915050565b6000608082019050611d9b60008301876118cd565b611da860208301866118cd565b611db56040830185611963565b8181036060830152611dc78184611d4d565b905095945050505050565b600081519050611de1816116f7565b92915050565b600060208284031215611dfd57611dfc6116c1565b5b6000611e0b84828501611dd2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e4e82611838565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e8057611e7f611e14565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ec582611838565b9150611ed083611838565b925082611ee057611edf611e8b565b5b828204905092915050565b6000611ef682611838565b9150611f0183611838565b9250828203905081811115611f1957611f18611e14565b5b92915050565b6000611f2a82611838565b9150611f3583611838565b925082611f4557611f44611e8b565b5b828206905092915050565b6000611f5b82611838565b9150611f6683611838565b9250828201905080821115611f7e57611f7d611e14565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122008e42220f615a0a70e2ea55c32238cc18c5c0151e9a9d3e274abfd4ffbc8ae2464736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x715 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1C31 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C0 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3D0 JUMPI POP PUSH2 0x3CF DUP3 PUSH2 0xAC8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3E6 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x434 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x442 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP3 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F0 DUP3 PUSH2 0x630 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x576 PUSH2 0xB80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D9 JUMPI PUSH2 0x5A2 DUP2 PUSH2 0x59D PUSH2 0xB80 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x5E4 DUP4 DUP4 DUP4 PUSH2 0xB88 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x60B DUP4 DUP4 DUP4 PUSH2 0xC3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x62B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x91E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63B DUP3 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x724 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x750 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x772 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x780 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7AF PUSH2 0xB80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x820 PUSH2 0xB80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8CD PUSH2 0xB80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x912 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x929 DUP5 DUP5 DUP5 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x948 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x137E JUMP JUMPDEST ISZERO PUSH2 0x990 JUMPI PUSH2 0x959 DUP5 DUP5 DUP5 DUP5 PUSH2 0x13A1 JUMP JUMPDEST PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9A1 DUP3 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x9D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9E1 PUSH2 0x14F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA2C JUMP JUMPDEST DUP1 PUSH2 0xA0B DUP5 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA1C SWAP3 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xB3D PUSH2 0xC3A JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xB4C JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xB79 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4A DUP3 PUSH2 0x10F3 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCD6 PUSH2 0xB80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD05 JUMPI POP PUSH2 0xD04 DUP6 PUSH2 0xCFF PUSH2 0xB80 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xD4A JUMPI POP PUSH2 0xD13 PUSH2 0xB80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD32 DUP5 PUSH2 0x469 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xD83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDF6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0xE02 PUSH1 0x0 DUP5 DUP8 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1081 JUMPI PUSH1 0x0 SLOAD DUP3 EQ PUSH2 0x1080 JUMPI DUP8 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10EC DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x166E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10FB PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1109 PUSH2 0xC3A JUMP JUMPDEST GT PUSH2 0x1347 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x1346 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x1344 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1228 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1379 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1343 JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x133E JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x1229 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x13C7 PUSH2 0xB80 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1425 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x149E JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1455 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x145A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1496 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x154F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1581 JUMPI DUP1 DUP1 PUSH2 0x156A SWAP1 PUSH2 0x1E43 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x157A SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST SWAP2 POP PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x159D JUMPI PUSH2 0x159C PUSH2 0x1A83 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15CF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x165C JUMPI PUSH1 0x1 DUP3 PUSH2 0x15E8 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x15F7 SWAP2 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0x1F84 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1655 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST SWAP5 POP PUSH2 0x15D3 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1700 DUP2 PUSH2 0x16CB JUMP JUMPDEST DUP2 EQ PUSH2 0x170B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x171D DUP2 PUSH2 0x16F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1747 DUP5 DUP3 DUP6 ADD PUSH2 0x170E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1765 DUP2 PUSH2 0x1750 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1780 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x175C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E8 DUP3 PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x17F2 DUP2 DUP6 PUSH2 0x1791 JUMP JUMPDEST SWAP4 POP PUSH2 0x1802 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x180B DUP2 PUSH2 0x17CC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1830 DUP2 DUP5 PUSH2 0x17DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184B DUP2 PUSH2 0x1838 JUMP JUMPDEST DUP2 EQ PUSH2 0x1856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1868 DUP2 PUSH2 0x1842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1892 DUP5 DUP3 DUP6 ADD PUSH2 0x1859 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C6 DUP3 PUSH2 0x189B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D6 DUP2 PUSH2 0x18BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1900 DUP2 PUSH2 0x18BB JUMP JUMPDEST DUP2 EQ PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x191D DUP2 PUSH2 0x18F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x193A JUMPI PUSH2 0x1939 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1948 DUP6 DUP3 DUP7 ADD PUSH2 0x190E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1959 DUP6 DUP3 DUP7 ADD PUSH2 0x1859 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x196C DUP2 PUSH2 0x1838 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1987 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1963 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19A6 JUMPI PUSH2 0x19A5 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B4 DUP7 DUP3 DUP8 ADD PUSH2 0x190E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19C5 DUP7 DUP3 DUP8 ADD PUSH2 0x190E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19D6 DUP7 DUP3 DUP8 ADD PUSH2 0x1859 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F6 JUMPI PUSH2 0x19F5 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A04 DUP5 DUP3 DUP6 ADD PUSH2 0x190E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A16 DUP2 PUSH2 0x1750 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A33 DUP2 PUSH2 0x1A0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A50 JUMPI PUSH2 0x1A4F PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A5E DUP6 DUP3 DUP7 ADD PUSH2 0x190E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A6F DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1ABB DUP3 PUSH2 0x17CC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1ADA JUMPI PUSH2 0x1AD9 PUSH2 0x1A83 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AED PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AF9 DUP3 DUP3 PUSH2 0x1AB2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B19 JUMPI PUSH2 0x1B18 PUSH2 0x1A83 JUMP JUMPDEST JUMPDEST PUSH2 0x1B22 DUP3 PUSH2 0x17CC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B51 PUSH2 0x1B4C DUP5 PUSH2 0x1AFE JUMP JUMPDEST PUSH2 0x1AE3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B6D JUMPI PUSH2 0x1B6C PUSH2 0x1A7E JUMP JUMPDEST JUMPDEST PUSH2 0x1B78 DUP5 DUP3 DUP6 PUSH2 0x1B2F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B95 JUMPI PUSH2 0x1B94 PUSH2 0x1A79 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BA5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BD6 DUP8 DUP3 DUP9 ADD PUSH2 0x190E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BE7 DUP8 DUP3 DUP9 ADD PUSH2 0x190E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BF8 DUP8 DUP3 DUP9 ADD PUSH2 0x1859 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C19 JUMPI PUSH2 0x1C18 PUSH2 0x16C6 JUMP JUMPDEST JUMPDEST PUSH2 0x1C25 DUP8 DUP3 DUP9 ADD PUSH2 0x1B80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C56 DUP6 DUP3 DUP7 ADD PUSH2 0x190E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C67 DUP6 DUP3 DUP7 ADD PUSH2 0x190E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CB8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CCB JUMPI PUSH2 0x1CCA PUSH2 0x1C71 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE7 DUP3 PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x1CF1 DUP2 DUP6 PUSH2 0x1CD1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D19 DUP3 DUP6 PUSH2 0x1CDC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D25 DUP3 DUP5 PUSH2 0x1CDC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D58 DUP3 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x1D62 DUP2 DUP6 PUSH2 0x1D3C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D72 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x1D7B DUP2 PUSH2 0x17CC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D9B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18CD JUMP JUMPDEST PUSH2 0x1DA8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18CD JUMP JUMPDEST PUSH2 0x1DB5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1963 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1DC7 DUP2 DUP5 PUSH2 0x1D4D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DE1 DUP2 PUSH2 0x16F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DFD JUMPI PUSH2 0x1DFC PUSH2 0x16C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E0B DUP5 DUP3 DUP6 ADD PUSH2 0x1DD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E4E DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E80 JUMPI PUSH2 0x1E7F PUSH2 0x1E14 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EC5 DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED0 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EE0 JUMPI PUSH2 0x1EDF PUSH2 0x1E8B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF6 DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F01 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1F19 JUMPI PUSH2 0x1F18 PUSH2 0x1E14 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2A DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F35 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F45 JUMPI PUSH2 0x1F44 PUSH2 0x1E8B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5B DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F66 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F7E JUMPI PUSH2 0x1F7D PUSH2 0x1E14 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xE4 0x22 KECCAK256 0xF6 ISZERO LOG0 0xA7 0xE 0x2E 0xA5 0x5C ORIGIN 0x23 DUP13 0xC1 DUP13 0x5C ADD MLOAD 0xE9 0xA9 0xD3 0xE2 PUSH21 0xABFD4FFBC8AE2464736F6C63430008100033000000 ",
							"sourceMap": "259:137:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3505:266:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6670:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8196:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7736:394;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2745:312;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9061:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9302:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6478:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3835:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6839:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8472:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9558:392;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7014:318;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8830:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3505:266;3607:4;3646:25;3631:40;;;:11;:40;;;;:92;;;;3690:33;3675:48;;;:11;:48;;;;3631:92;:132;;;;3727:36;3751:11;3727:23;:36::i;:::-;3631:132;3624:139;;3505:266;;;:::o;6670:100::-;6724:13;6757:5;6750:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6670:100;:::o;8196:204::-;8264:7;8289:16;8297:7;8289;:16::i;:::-;8284:64;;8314:34;;;;;;;;;;;;;;8284:64;8368:15;:24;8384:7;8368:24;;;;;;;;;;;;;;;;;;;;;8361:31;;8196:204;;;:::o;7736:394::-;7809:13;7825:24;7841:7;7825:15;:24::i;:::-;7809:40;;7870:5;7864:11;;:2;:11;;;7860:48;;7884:24;;;;;;;;;;;;;;7860:48;7941:5;7925:21;;:12;:10;:12::i;:::-;:21;;;7921:161;;7966:37;7983:5;7990:12;:10;:12::i;:::-;7966:16;:37::i;:::-;7961:121;;8031:35;;;;;;;;;;;;;;7961:121;7921:161;8094:28;8103:2;8107:7;8116:5;8094:8;:28::i;:::-;7798:332;7736:394;;:::o;2745:312::-;2798:7;3023:15;:13;:15::i;:::-;3008:12;;2992:13;;:28;:46;2985:53;;2745:312;:::o;9061:170::-;9195:28;9205:4;9211:2;9215:7;9195:9;:28::i;:::-;9061:170;;;:::o;9302:185::-;9440:39;9457:4;9463:2;9467:7;9440:39;;;;;;;;;;;;:16;:39::i;:::-;9302:185;;;:::o;6478:125::-;6542:7;6569:21;6582:7;6569:12;:21::i;:::-;:26;;;6562:33;;6478:125;;;:::o;3835:206::-;3899:7;3940:1;3923:19;;:5;:19;;;3919:60;;3951:28;;;;;;;;;;;;;;3919:60;4005:12;:19;4018:5;4005:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;3997:36;;3990:43;;3835:206;;;:::o;6839:104::-;6895:13;6928:7;6921:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6839:104;:::o;8472:287::-;8583:12;:10;:12::i;:::-;8571:24;;:8;:24;;;8567:54;;8604:17;;;;;;;;;;;;;;8567:54;8679:8;8634:18;:32;8653:12;:10;:12::i;:::-;8634:32;;;;;;;;;;;;;;;:42;8667:8;8634:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;8732:8;8703:48;;8718:12;:10;:12::i;:::-;8703:48;;;8742:8;8703:48;;;;;;:::i;:::-;;;;;;;;8472:287;;:::o;9558:392::-;9725:28;9735:4;9741:2;9745:7;9725:9;:28::i;:::-;9768:15;:2;:13;;;:15::i;:::-;9764:179;;;9803:56;9834:4;9840:2;9844:7;9853:5;9803:30;:56::i;:::-;9798:145;;9887:40;;;;;;;;;;;;;;9798:145;9764:179;9558:392;;;;:::o;7014:318::-;7087:13;7118:16;7126:7;7118;:16::i;:::-;7113:59;;7143:29;;;;;;;;;;;;;;7113:59;7185:21;7209:10;:8;:10::i;:::-;7185:34;;7262:1;7243:7;7237:21;:26;:87;;;;;;;;;;;;;;;;;7290:7;7299:18;:7;:16;:18::i;:::-;7273:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7237:87;7230:94;;;7014:318;;;:::o;8830:164::-;8927:4;8951:18;:25;8970:5;8951:25;;;;;;;;;;;;;;;:35;8977:8;8951:35;;;;;;;;;;;;;;;;;;;;;;;;;8944:42;;8830:164;;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;10205:174:9:-;10262:4;10305:7;10286:15;:13;:15::i;:::-;:26;;:53;;;;;10326:13;;10316:7;:23;10286:53;:85;;;;;10344:11;:20;10356:7;10344:20;;;;;;;;;;;:27;;;;;;;;;;;;10343:28;10286:85;10279:92;;10205:174;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;19367:196:9:-;19509:2;19482:15;:24;19498:7;19482:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;19547:7;19543:2;19527:28;;19536:5;19527:28;;;;;;;;;;;;19367:196;;;:::o;2519:92::-;2575:7;2519:92;:::o;14375:2104::-;14490:35;14528:21;14541:7;14528:12;:21::i;:::-;14490:59;;14588:4;14566:26;;:13;:18;;;:26;;;14562:67;;14601:28;;;;;;;;;;;;;;14562:67;14642:22;14684:4;14668:20;;:12;:10;:12::i;:::-;:20;;;:60;;;;14692:36;14709:4;14715:12;:10;:12::i;:::-;14692:16;:36::i;:::-;14668:60;:100;;;;14756:12;:10;:12::i;:::-;14732:36;;:20;14744:7;14732:11;:20::i;:::-;:36;;;14668:100;14642:127;;14787:17;14782:66;;14813:35;;;;;;;;;;;;;;14782:66;14877:1;14863:16;;:2;:16;;;14859:52;;14888:23;;;;;;;;;;;;;;14859:52;14924:43;14946:4;14952:2;14956:7;14965:1;14924:21;:43::i;:::-;15032:35;15049:1;15053:7;15062:4;15032:8;:35::i;:::-;15393:1;15363:12;:18;15376:4;15363:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15437:1;15409:12;:16;15422:2;15409:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15455:31;15489:11;:20;15501:7;15489:20;;;;;;;;;;;15455:54;;15540:2;15524:8;:13;;;:18;;;;;;;;;;;;;;;;;;15590:15;15557:8;:23;;;:49;;;;;;;;;;;;;;;;;;15858:19;15890:1;15880:7;:11;15858:33;;15906:31;15940:11;:24;15952:11;15940:24;;;;;;;;;;;15906:58;;16008:1;15983:27;;:8;:13;;;;;;;;;;;;:27;;;15979:384;;16193:13;;16178:11;:28;16174:174;;16247:4;16231:8;:13;;;:20;;;;;;;;;;;;;;;;;;16300:13;:28;;;16274:8;:23;;;:54;;;;;;;;;;;;;;;;;;16174:174;15979:384;15338:1036;;;16410:7;16406:2;16391:27;;16400:4;16391:27;;;;;;;;;;;;16429:42;16450:4;16456:2;16460:7;16469:1;16429:20;:42::i;:::-;14479:2000;;14375:2104;;;:::o;5216:1200::-;5278:21;;:::i;:::-;5312:12;5327:7;5312:22;;5395:4;5376:15;:13;:15::i;:::-;:23;5372:977;;5429:13;;5422:4;:20;5418:931;;;5467:31;5501:11;:17;5513:4;5501:17;;;;;;;;;;;5467:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5546:9;:16;;;5541:789;;5621:1;5595:28;;:9;:14;;;:28;;;5591:109;;5663:9;5656:16;;;;;;5591:109;6022:285;6029:4;6022:285;;;6066:6;;;;;;;;6115:11;:17;6127:4;6115:17;;;;;;;;;;;6103:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6193:1;6167:28;;:9;:14;;;:28;;;6163:117;;6239:9;6232:16;;;;;;6163:117;6022:285;;;5541:789;5444:905;5418:931;5372:977;6377:31;;;;;;;;;;;;;;5216:1200;;;;:::o;1175:320:3:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;20055:667:9:-;20218:4;20255:2;20239:36;;;20276:12;:10;:12::i;:::-;20290:4;20296:7;20305:5;20239:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;20235:480;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20490:1;20473:6;:13;:18;20469:235;;20519:40;;;;;;;;;;;;;;20469:235;20662:6;20656:13;20647:6;20643:2;20639:15;20632:38;20235:480;20368:45;;;20358:55;;;:6;:55;;;;20351:62;;;20055:667;;;;;;:::o;7580:94::-;7631:13;7657:9;;;;;;;;;;;;;;7580:94;:::o;392:703:5:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;21370:159:9:-;;;;;:::o;22188:158::-;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:148::-;11085:11;11122:3;11107:18;;10983:148;;;;:::o;11137:390::-;11243:3;11271:39;11304:5;11271:39;:::i;:::-;11326:89;11408:6;11403:3;11326:89;:::i;:::-;11319:96;;11424:65;11482:6;11477:3;11470:4;11463:5;11459:16;11424:65;:::i;:::-;11514:6;11509:3;11505:16;11498:23;;11247:280;11137:390;;;;:::o;11533:435::-;11713:3;11735:95;11826:3;11817:6;11735:95;:::i;:::-;11728:102;;11847:95;11938:3;11929:6;11847:95;:::i;:::-;11840:102;;11959:3;11952:10;;11533:435;;;;;:::o;11974:98::-;12025:6;12059:5;12053:12;12043:22;;11974:98;;;:::o;12078:168::-;12161:11;12195:6;12190:3;12183:19;12235:4;12230:3;12226:14;12211:29;;12078:168;;;;:::o;12252:373::-;12338:3;12366:38;12398:5;12366:38;:::i;:::-;12420:70;12483:6;12478:3;12420:70;:::i;:::-;12413:77;;12499:65;12557:6;12552:3;12545:4;12538:5;12534:16;12499:65;:::i;:::-;12589:29;12611:6;12589:29;:::i;:::-;12584:3;12580:39;12573:46;;12342:283;12252:373;;;;:::o;12631:640::-;12826:4;12864:3;12853:9;12849:19;12841:27;;12878:71;12946:1;12935:9;12931:17;12922:6;12878:71;:::i;:::-;12959:72;13027:2;13016:9;13012:18;13003:6;12959:72;:::i;:::-;13041;13109:2;13098:9;13094:18;13085:6;13041:72;:::i;:::-;13160:9;13154:4;13150:20;13145:2;13134:9;13130:18;13123:48;13188:76;13259:4;13250:6;13188:76;:::i;:::-;13180:84;;12631:640;;;;;;;:::o;13277:141::-;13333:5;13364:6;13358:13;13349:22;;13380:32;13406:5;13380:32;:::i;:::-;13277:141;;;;:::o;13424:349::-;13493:6;13542:2;13530:9;13521:7;13517:23;13513:32;13510:119;;;13548:79;;:::i;:::-;13510:119;13668:1;13693:63;13748:7;13739:6;13728:9;13724:22;13693:63;:::i;:::-;13683:73;;13639:127;13424:349;;;;:::o;13779:180::-;13827:77;13824:1;13817:88;13924:4;13921:1;13914:15;13948:4;13945:1;13938:15;13965:233;14004:3;14027:24;14045:5;14027:24;:::i;:::-;14018:33;;14073:66;14066:5;14063:77;14060:103;;14143:18;;:::i;:::-;14060:103;14190:1;14183:5;14179:13;14172:20;;13965:233;;;:::o;14204:180::-;14252:77;14249:1;14242:88;14349:4;14346:1;14339:15;14373:4;14370:1;14363:15;14390:185;14430:1;14447:20;14465:1;14447:20;:::i;:::-;14442:25;;14481:20;14499:1;14481:20;:::i;:::-;14476:25;;14520:1;14510:35;;14525:18;;:::i;:::-;14510:35;14567:1;14564;14560:9;14555:14;;14390:185;;;;:::o;14581:194::-;14621:4;14641:20;14659:1;14641:20;:::i;:::-;14636:25;;14675:20;14693:1;14675:20;:::i;:::-;14670:25;;14719:1;14716;14712:9;14704:17;;14743:1;14737:4;14734:11;14731:37;;;14748:18;;:::i;:::-;14731:37;14581:194;;;;:::o;14781:176::-;14813:1;14830:20;14848:1;14830:20;:::i;:::-;14825:25;;14864:20;14882:1;14864:20;:::i;:::-;14859:25;;14903:1;14893:35;;14908:18;;:::i;:::-;14893:35;14949:1;14946;14942:9;14937:14;;14781:176;;;;:::o;14963:191::-;15003:3;15022:20;15040:1;15022:20;:::i;:::-;15017:25;;15056:20;15074:1;15056:20;:::i;:::-;15051:25;;15099:1;15096;15092:9;15085:16;;15120:3;15117:1;15114:10;15111:36;;;15127:18;;:::i;:::-;15111:36;14963:191;;;;:::o;15160:180::-;15208:77;15205:1;15198:88;15305:4;15302:1;15295:15;15329:4;15326:1;15319:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1633800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2969",
								"getApproved(uint256)": "7458",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"tokenURI(uint256)": "5617",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 259,
									"end": 396,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 259,
									"end": 396,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 259,
									"end": 396,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 301,
									"end": 393,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 393,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 301,
									"end": 393,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 301,
									"end": 393,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 301,
									"end": 393,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 301,
									"end": 393,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 301,
									"end": 393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 301,
									"end": 393,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 370,
									"end": 375,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 377,
									"end": 384,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2339,
									"end": 2344,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2336,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2331,
									"end": 2344,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2344,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2344,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2331,
									"end": 2344,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2344,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2344,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2331,
									"end": 2344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2344,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2331,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2372,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2355,
									"end": 2362,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2355,
									"end": 2372,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2355,
									"end": 2372,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2355,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2355,
									"end": 2372,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2355,
									"end": 2372,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2355,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2355,
									"end": 2372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2355,
									"end": 2372,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2355,
									"end": 2372,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2355,
									"end": 2372,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2399,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2399,
									"end": 2412,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2399,
									"end": 2412,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2414,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2399,
									"end": 2414,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2414,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2399,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2383,
									"end": 2396,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2383,
									"end": 2414,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2383,
									"end": 2414,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2383,
									"end": 2414,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2383,
									"end": 2414,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2264,
									"end": 2422,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2264,
									"end": 2422,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 301,
									"end": 393,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 393,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 259,
									"end": 396,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 259,
									"end": 396,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2519,
									"end": 2611,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2519,
									"end": 2611,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2575,
									"end": 2582,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2519,
									"end": 2611,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2519,
									"end": 2611,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 11,
									"value": "144"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "144"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 259,
									"end": 396,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 259,
									"end": 396,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 259,
									"end": 396,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 259,
									"end": 396,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 259,
									"end": 396,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 259,
									"end": 396,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 396,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 259,
									"end": 396,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 396,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008e42220f615a0a70e2ea55c32238cc18c5c0151e9a9d3e274abfd4ffbc8ae2464736f6c63430008100033",
									".code": [
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "A22CB465"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "A22CB465"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "B88D4FDE"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "C87B56DD"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "E985E9C5"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A7"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "81812FC"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 259,
											"end": 396,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3505,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3505,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3505,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 6670,
											"end": 6770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6670,
											"end": 6770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 8196,
											"end": 8400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 8196,
											"end": 8400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 8196,
											"end": 8400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 7736,
											"end": 8130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 7736,
											"end": 8130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2745,
											"end": 3057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2745,
											"end": 3057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9061,
											"end": 9231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 9061,
											"end": 9231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9302,
											"end": 9487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 9302,
											"end": 9487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6478,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 6478,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 6478,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 3835,
											"end": 4041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3835,
											"end": 4041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3835,
											"end": 4041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 6839,
											"end": 6943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6839,
											"end": 6943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 8472,
											"end": 8759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 8472,
											"end": 8759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 9558,
											"end": 9950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 9558,
											"end": 9950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 7014,
											"end": 7332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 7014,
											"end": 7332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 7014,
											"end": 7332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 8830,
											"end": 8994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 8830,
											"end": 8994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 8830,
											"end": 8994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3671,
											"name": "PUSH",
											"source": 9,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3631,
											"end": 3671,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3631,
											"end": 3671,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3671,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3671,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3631,
											"end": 3671,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3671,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3671,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3631,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3675,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3675,
											"end": 3723,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3723,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3675,
											"end": 3723,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3723,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3723,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3631,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3763,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3631,
											"end": 3763,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3751,
											"end": 3762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3727,
											"end": 3763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3763,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3727,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3763,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3631,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6724,
											"end": 6737,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6757,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6750,
											"end": 6762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6750,
											"end": 6762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8264,
											"end": 8271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 8297,
											"end": 8304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 8289,
											"end": 8305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8305,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 8289,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8284,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 8284,
											"end": 8348,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "PUSH",
											"source": 9,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8284,
											"end": 8348,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 8284,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8383,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8384,
											"end": 8391,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 8392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 8392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 7841,
											"end": 7848,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7825,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 7825,
											"end": 7849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7825,
											"end": 7849,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 7825,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7870,
											"end": 7875,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7864,
											"end": 7875,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7864,
											"end": 7875,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7864,
											"end": 7866,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7864,
											"end": 7875,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7864,
											"end": 7875,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7864,
											"end": 7875,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7860,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 7860,
											"end": 7908,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "PUSH",
											"source": 9,
											"value": "943F7B8C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7860,
											"end": 7908,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 7860,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7925,
											"end": 7946,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7925,
											"end": 7946,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7925,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 7925,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7925,
											"end": 7937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7925,
											"end": 7937,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 7925,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7925,
											"end": 7946,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7925,
											"end": 7946,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7925,
											"end": 7946,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7921,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 7921,
											"end": 8082,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7966,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 7983,
											"end": 7988,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7990,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 7990,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7990,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7990,
											"end": 8002,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 7990,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7966,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 7966,
											"end": 8003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7966,
											"end": 8003,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 7966,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 7961,
											"end": 8082,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "PUSH",
											"source": 9,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8066,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 8082,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 7961,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7921,
											"end": 8082,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 7921,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8094,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 8103,
											"end": 8105,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8107,
											"end": 8114,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8116,
											"end": 8121,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8094,
											"end": 8102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 8094,
											"end": 8122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8094,
											"end": 8122,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 8094,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7798,
											"end": 8130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7736,
											"end": 8130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 3023,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3023,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3038,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 3023,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2992,
											"end": 3005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3005,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2992,
											"end": 3020,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2992,
											"end": 3038,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2985,
											"end": 3038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2985,
											"end": 3038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9195,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 9205,
											"end": 9209,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9211,
											"end": 9213,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9195,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 9195,
											"end": 9223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9195,
											"end": 9223,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 9195,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 9457,
											"end": 9461,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9463,
											"end": 9465,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9467,
											"end": 9474,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 9440,
											"end": 9479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 9440,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6549,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6569,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6582,
											"end": 6589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6569,
											"end": 6581,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 6569,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6569,
											"end": 6590,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6569,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6569,
											"end": 6595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6569,
											"end": 6595,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6569,
											"end": 6595,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3899,
											"end": 3906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3941,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3942,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3942,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3942,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3919,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 3919,
											"end": 3979,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "PUSH",
											"source": 9,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 3979,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3919,
											"end": 3979,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 3919,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4017,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4023,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4032,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4032,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4005,
											"end": 4032,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4032,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4032,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4005,
											"end": 4032,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4033,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3997,
											"end": 4033,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3990,
											"end": 4033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3990,
											"end": 4033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 4041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6908,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6928,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6921,
											"end": 6935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6921,
											"end": 6935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8583,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 8583,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8583,
											"end": 8595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8583,
											"end": 8595,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 8583,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 8579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 8567,
											"end": 8621,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "PUSH",
											"source": 9,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8621,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 8567,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8679,
											"end": 8687,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8652,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8653,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 8653,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8653,
											"end": 8665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8653,
											"end": 8665,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 8653,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8666,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8667,
											"end": 8675,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8740,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8718,
											"end": 8730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "PUSH",
											"source": 9,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 8742,
											"end": 8750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 8703,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8751,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9725,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 9735,
											"end": 9739,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9741,
											"end": 9743,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9745,
											"end": 9752,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9725,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 9725,
											"end": 9753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9725,
											"end": 9753,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 9725,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9768,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 9768,
											"end": 9770,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9768,
											"end": 9781,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9768,
											"end": 9781,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9768,
											"end": 9781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 9768,
											"end": 9783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9768,
											"end": 9783,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 9768,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9764,
											"end": 9943,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9764,
											"end": 9943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 9764,
											"end": 9943,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9803,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 9834,
											"end": 9838,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9840,
											"end": 9842,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9851,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9853,
											"end": 9858,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9803,
											"end": 9833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 9803,
											"end": 9859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9803,
											"end": 9859,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 9803,
											"end": 9859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9798,
											"end": 9943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 9798,
											"end": 9943,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "PUSH",
											"source": 9,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9798,
											"end": 9943,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 9798,
											"end": 9943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9764,
											"end": 9943,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 9764,
											"end": 9943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7118,
											"end": 7134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 7126,
											"end": 7133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7118,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 7118,
											"end": 7134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7118,
											"end": 7134,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 7118,
											"end": 7134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 7113,
											"end": 7172,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "PUSH",
											"source": 9,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7172,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 7113,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7185,
											"end": 7206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 7209,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 7209,
											"end": 7219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7209,
											"end": 7219,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 7209,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7185,
											"end": 7219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7185,
											"end": 7219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7262,
											"end": 7263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7258,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7263,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7290,
											"end": 7297,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7299,
											"end": 7306,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 7299,
											"end": 7317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 7273,
											"end": 7318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7273,
											"end": 7318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 7237,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 8931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8951,
											"end": 8969,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8970,
											"end": 8975,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8951,
											"end": 8976,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 8985,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8951,
											"end": 8986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8944,
											"end": 8986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8944,
											"end": 8986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10205,
											"end": 10379,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 10205,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10262,
											"end": 10266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10305,
											"end": 10312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 10286,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 10286,
											"end": 10301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10301,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 10286,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10312,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10312,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10339,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10339,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 10286,
											"end": 10339,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10326,
											"end": 10339,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10326,
											"end": 10339,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10316,
											"end": 10323,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10316,
											"end": 10339,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10339,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 10286,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10371,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10371,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 10286,
											"end": 10371,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10355,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10356,
											"end": 10363,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10371,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10344,
											"end": 10371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10371,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 10344,
											"end": 10371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10371,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10371,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10344,
											"end": 10371,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10371,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10371,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 10344,
											"end": 10371,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10343,
											"end": 10371,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10371,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 10286,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10279,
											"end": 10371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10279,
											"end": 10371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 19367,
											"end": 19563,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 19367,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19509,
											"end": 19511,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19497,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19498,
											"end": 19505,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19547,
											"end": 19554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19543,
											"end": 19545,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19536,
											"end": 19541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "PUSH",
											"source": 9,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19527,
											"end": 19555,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 19367,
											"end": 19563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19367,
											"end": 19563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19367,
											"end": 19563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19367,
											"end": 19563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2611,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2519,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14375,
											"end": 16479,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 14375,
											"end": 16479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14490,
											"end": 14525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14528,
											"end": 14549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 14541,
											"end": 14548,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14528,
											"end": 14540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 14528,
											"end": 14549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14528,
											"end": 14549,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 14528,
											"end": 14549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14490,
											"end": 14549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14490,
											"end": 14549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14588,
											"end": 14592,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14566,
											"end": 14592,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14566,
											"end": 14592,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14566,
											"end": 14579,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14566,
											"end": 14584,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14566,
											"end": 14584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14566,
											"end": 14584,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14566,
											"end": 14592,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14566,
											"end": 14592,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14566,
											"end": 14592,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14562,
											"end": 14629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 14562,
											"end": 14629,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "PUSH",
											"source": 9,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14601,
											"end": 14629,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14562,
											"end": 14629,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 14562,
											"end": 14629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14642,
											"end": 14664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14684,
											"end": 14688,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 14668,
											"end": 14678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 14668,
											"end": 14680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14680,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 14668,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14728,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 14668,
											"end": 14728,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14692,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 14709,
											"end": 14713,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 14715,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 14715,
											"end": 14727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14692,
											"end": 14708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 14692,
											"end": 14728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14692,
											"end": 14728,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 14692,
											"end": 14728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14728,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 14668,
											"end": 14728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 14668,
											"end": 14768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14756,
											"end": 14768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 14756,
											"end": 14766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 14756,
											"end": 14768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14756,
											"end": 14768,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 14756,
											"end": 14768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14732,
											"end": 14768,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14732,
											"end": 14768,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14732,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 14744,
											"end": 14751,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14732,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 14732,
											"end": 14752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14732,
											"end": 14752,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 14732,
											"end": 14752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14732,
											"end": 14768,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14732,
											"end": 14768,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14732,
											"end": 14768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14768,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 14668,
											"end": 14768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14642,
											"end": 14769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14642,
											"end": 14769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14787,
											"end": 14804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14782,
											"end": 14848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 14782,
											"end": 14848,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "PUSH",
											"source": 9,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14848,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14782,
											"end": 14848,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 14782,
											"end": 14848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14877,
											"end": 14878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14863,
											"end": 14879,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14863,
											"end": 14879,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14863,
											"end": 14865,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14863,
											"end": 14879,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14863,
											"end": 14879,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14863,
											"end": 14879,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14859,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 14859,
											"end": 14911,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "PUSH",
											"source": 9,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14888,
											"end": 14911,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14859,
											"end": 14911,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 14859,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14924,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 14946,
											"end": 14950,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14952,
											"end": 14954,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14956,
											"end": 14963,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14965,
											"end": 14966,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14924,
											"end": 14945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 14924,
											"end": 14967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14924,
											"end": 14967,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 14924,
											"end": 14967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15032,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 15049,
											"end": 15050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15053,
											"end": 15060,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15062,
											"end": 15066,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 15032,
											"end": 15040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 15032,
											"end": 15067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15032,
											"end": 15067,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 15032,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15393,
											"end": 15394,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15363,
											"end": 15375,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15376,
											"end": 15380,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15363,
											"end": 15389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15437,
											"end": 15438,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15409,
											"end": 15421,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15422,
											"end": 15424,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15409,
											"end": 15433,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15455,
											"end": 15486,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15489,
											"end": 15500,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15501,
											"end": 15508,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 15455,
											"end": 15509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15455,
											"end": 15509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15540,
											"end": 15542,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15532,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15524,
											"end": 15537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15590,
											"end": 15605,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15580,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15557,
											"end": 15580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15580,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 15557,
											"end": 15606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15858,
											"end": 15877,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15890,
											"end": 15891,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15880,
											"end": 15887,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15880,
											"end": 15891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15858,
											"end": 15891,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15858,
											"end": 15891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15906,
											"end": 15937,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15940,
											"end": 15951,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15940,
											"end": 15964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15952,
											"end": 15963,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15940,
											"end": 15964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15940,
											"end": 15964,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15940,
											"end": 15964,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15940,
											"end": 15964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15940,
											"end": 15964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15940,
											"end": 15964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15940,
											"end": 15964,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15940,
											"end": 15964,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15940,
											"end": 15964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15940,
											"end": 15964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15940,
											"end": 15964,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 15906,
											"end": 15964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15906,
											"end": 15964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16008,
											"end": 16009,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15983,
											"end": 16010,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15983,
											"end": 16010,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15983,
											"end": 15991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15983,
											"end": 15996,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15983,
											"end": 15996,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15983,
											"end": 15996,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15983,
											"end": 15996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15983,
											"end": 15996,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15983,
											"end": 15996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15983,
											"end": 15996,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 15983,
											"end": 15996,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 15983,
											"end": 15996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15983,
											"end": 15996,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 15983,
											"end": 15996,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15983,
											"end": 15996,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15983,
											"end": 16010,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15983,
											"end": 16010,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15983,
											"end": 16010,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15979,
											"end": 16363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 15979,
											"end": 16363,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16193,
											"end": 16206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16193,
											"end": 16206,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 16178,
											"end": 16189,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16178,
											"end": 16206,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16174,
											"end": 16348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 16174,
											"end": 16348,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16247,
											"end": 16251,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16244,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16244,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16244,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16300,
											"end": 16313,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16300,
											"end": 16328,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16300,
											"end": 16328,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16300,
											"end": 16328,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16282,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16274,
											"end": 16297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16297,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16174,
											"end": 16348,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 16174,
											"end": 16348,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15979,
											"end": 16363,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 15979,
											"end": 16363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15338,
											"end": 16374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15338,
											"end": 16374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15338,
											"end": 16374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16410,
											"end": 16417,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16406,
											"end": 16408,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16400,
											"end": 16404,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "PUSH",
											"source": 9,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16418,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 16429,
											"end": 16471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 16450,
											"end": 16454,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16456,
											"end": 16458,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16460,
											"end": 16467,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16469,
											"end": 16470,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 16429,
											"end": 16471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16429,
											"end": 16471,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 16429,
											"end": 16471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14479,
											"end": 16479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14479,
											"end": 16479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14375,
											"end": 16479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14375,
											"end": 16479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14375,
											"end": 16479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14375,
											"end": 16479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 6416,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 5216,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5278,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 5278,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5299,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5278,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5399,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5376,
											"end": 5391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5391,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 5376,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5399,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5372,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 5372,
											"end": 6349,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5442,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5442,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5442,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5418,
											"end": 6349,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5418,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 5418,
											"end": 6349,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5498,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5512,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5562,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5562,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5562,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 5541,
											"end": 6330,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5621,
											"end": 5622,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5623,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5595,
											"end": 5623,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5595,
											"end": 5604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5595,
											"end": 5609,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5595,
											"end": 5609,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5595,
											"end": 5623,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5595,
											"end": 5623,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5595,
											"end": 5623,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5591,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 5591,
											"end": 5700,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5663,
											"end": 5672,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5672,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 5656,
											"end": 5672,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5591,
											"end": 5700,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 5591,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6022,
											"end": 6307,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 6022,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6033,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6022,
											"end": 6307,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6022,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 6022,
											"end": 6307,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6126,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6131,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6167,
											"end": 6176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6167,
											"end": 6181,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6167,
											"end": 6181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6167,
											"end": 6181,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 6163,
											"end": 6280,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6248,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6232,
											"end": 6248,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6232,
											"end": 6248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6232,
											"end": 6248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6232,
											"end": 6248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6232,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 6232,
											"end": 6248,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6280,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 6163,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6022,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 6022,
											"end": 6307,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6022,
											"end": 6307,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 6022,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 6330,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 5541,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 6349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5418,
											"end": 6349,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 5418,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5372,
											"end": 6349,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 5372,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "PUSH",
											"source": 9,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6408,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 6416,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 5216,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 6416,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 6416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 6416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 6416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 20055,
											"end": 20722,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 20055,
											"end": 20722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20218,
											"end": 20222,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20255,
											"end": 20257,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20275,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20239,
											"end": 20275,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20275,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 20276,
											"end": 20288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 20276,
											"end": 20286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 20276,
											"end": 20288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20276,
											"end": 20288,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 20276,
											"end": 20288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20290,
											"end": 20294,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 20296,
											"end": 20303,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 20305,
											"end": 20310,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 20239,
											"end": 20311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 20239,
											"end": 20311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 20239,
											"end": 20311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20490,
											"end": 20491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20473,
											"end": 20479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20473,
											"end": 20486,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 20473,
											"end": 20491,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20469,
											"end": 20704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 20469,
											"end": 20704,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "PUSH",
											"source": 9,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20519,
											"end": 20559,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20469,
											"end": 20704,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 20469,
											"end": 20704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20662,
											"end": 20668,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20656,
											"end": 20669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 20647,
											"end": 20653,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20643,
											"end": 20645,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20639,
											"end": 20654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20632,
											"end": 20670,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 20235,
											"end": 20715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20368,
											"end": 20413,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 20368,
											"end": 20413,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 20368,
											"end": 20413,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 20358,
											"end": 20413,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20358,
											"end": 20413,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 20358,
											"end": 20413,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20358,
											"end": 20364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20358,
											"end": 20413,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20358,
											"end": 20413,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 20358,
											"end": 20413,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20358,
											"end": 20413,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 20351,
											"end": 20413,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20351,
											"end": 20413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20351,
											"end": 20413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20055,
											"end": 20722,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 20055,
											"end": 20722,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 20055,
											"end": 20722,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20055,
											"end": 20722,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20055,
											"end": 20722,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20055,
											"end": 20722,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20055,
											"end": 20722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7580,
											"end": 7674,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 7580,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7580,
											"end": 7674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7580,
											"end": 7674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 448,
											"end": 461,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 661,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 712,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 721,
											"end": 741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 751,
											"end": 765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 790,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 786,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 782,
											"end": 791,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 807,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 829,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 859,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 881,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 920,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 915,
											"end": 925,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 941,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1009,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 996,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 966,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1036,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 21370,
											"end": 21529,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 21370,
											"end": 21529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21370,
											"end": 21529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21370,
											"end": 21529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21370,
											"end": 21529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21370,
											"end": 21529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21370,
											"end": 21529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22188,
											"end": 22346,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 22188,
											"end": 22346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22188,
											"end": 22346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22188,
											"end": 22346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22188,
											"end": 22346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22188,
											"end": 22346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22188,
											"end": 22346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "180"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11125,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11243,
											"end": 11246,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 11304,
											"end": 11309,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 11271,
											"end": 11310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11403,
											"end": 11406,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 11326,
											"end": 11415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 11482,
											"end": 11488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11477,
											"end": 11480,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11463,
											"end": 11468,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 11424,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11509,
											"end": 11512,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11505,
											"end": 11521,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11247,
											"end": 11527,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11137,
											"end": 11527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11713,
											"end": 11716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 11826,
											"end": 11829,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11817,
											"end": 11823,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 11735,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11929,
											"end": 11935,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 11847,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11533,
											"end": 11968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12025,
											"end": 12031,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12059,
											"end": 12064,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12053,
											"end": 12065,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12043,
											"end": 12065,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12043,
											"end": 12065,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11974,
											"end": 12072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12161,
											"end": 12172,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12195,
											"end": 12201,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12190,
											"end": 12193,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12183,
											"end": 12202,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12235,
											"end": 12239,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12230,
											"end": 12233,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12226,
											"end": 12240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12211,
											"end": 12240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12211,
											"end": 12240,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12078,
											"end": 12246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 12398,
											"end": 12403,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 12366,
											"end": 12404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 12483,
											"end": 12489,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12478,
											"end": 12481,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 12420,
											"end": 12490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12413,
											"end": 12490,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12413,
											"end": 12490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 12557,
											"end": 12563,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12552,
											"end": 12555,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12545,
											"end": 12549,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12538,
											"end": 12543,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12534,
											"end": 12550,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 12499,
											"end": 12564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 12611,
											"end": 12617,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 12589,
											"end": 12618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12584,
											"end": 12587,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12580,
											"end": 12619,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12573,
											"end": 12619,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12573,
											"end": 12619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12342,
											"end": 12625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12252,
											"end": 12625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12826,
											"end": 12830,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12864,
											"end": 12867,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 12853,
											"end": 12862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12868,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12841,
											"end": 12868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12841,
											"end": 12868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 12946,
											"end": 12947,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 12944,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12931,
											"end": 12948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12922,
											"end": 12928,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 12878,
											"end": 12949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 13027,
											"end": 13029,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13016,
											"end": 13025,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13012,
											"end": 13030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13003,
											"end": 13009,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 12959,
											"end": 13031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 13109,
											"end": 13111,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13098,
											"end": 13107,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13094,
											"end": 13112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13085,
											"end": 13091,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 13041,
											"end": 13113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13160,
											"end": 13169,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13154,
											"end": 13158,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13150,
											"end": 13170,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13145,
											"end": 13147,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13134,
											"end": 13143,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13123,
											"end": 13171,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 13259,
											"end": 13263,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13250,
											"end": 13256,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 13188,
											"end": 13264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13180,
											"end": 13264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13180,
											"end": 13264,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13333,
											"end": 13338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13364,
											"end": 13370,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13358,
											"end": 13371,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 13406,
											"end": 13411,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 13380,
											"end": 13412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13277,
											"end": 13418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13493,
											"end": 13499,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13542,
											"end": 13544,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13530,
											"end": 13539,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13521,
											"end": 13528,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13517,
											"end": 13540,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13513,
											"end": 13545,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 13548,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13668,
											"end": 13669,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 13748,
											"end": 13755,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13739,
											"end": 13745,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13728,
											"end": 13737,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13724,
											"end": 13746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 13693,
											"end": 13756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13683,
											"end": 13756,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13683,
											"end": 13756,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13639,
											"end": 13766,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13424,
											"end": 13773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13779,
											"end": 13959,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 13779,
											"end": 13959,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13827,
											"end": 13904,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13824,
											"end": 13825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13817,
											"end": 13905,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13924,
											"end": 13928,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 13921,
											"end": 13922,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13914,
											"end": 13929,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13948,
											"end": 13952,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13945,
											"end": 13946,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13938,
											"end": 13953,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13965,
											"end": 14198,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 13965,
											"end": 14198,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14004,
											"end": 14007,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14027,
											"end": 14051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 14045,
											"end": 14050,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14027,
											"end": 14051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 14027,
											"end": 14051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14027,
											"end": 14051,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 14027,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14018,
											"end": 14051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14018,
											"end": 14051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14073,
											"end": 14139,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14066,
											"end": 14071,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14063,
											"end": 14140,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14060,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 14060,
											"end": 14163,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 14143,
											"end": 14161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14060,
											"end": 14163,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 14060,
											"end": 14163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14190,
											"end": 14191,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14172,
											"end": 14192,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14172,
											"end": 14192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13965,
											"end": 14198,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13965,
											"end": 14198,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13965,
											"end": 14198,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13965,
											"end": 14198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14204,
											"end": 14384,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 14204,
											"end": 14384,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14252,
											"end": 14329,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14249,
											"end": 14250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14242,
											"end": 14330,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14349,
											"end": 14353,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 14346,
											"end": 14347,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14339,
											"end": 14354,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14373,
											"end": 14377,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14370,
											"end": 14371,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14378,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14390,
											"end": 14575,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 14390,
											"end": 14575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14430,
											"end": 14431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14447,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 14465,
											"end": 14466,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14447,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 14447,
											"end": 14467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14447,
											"end": 14467,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 14447,
											"end": 14467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14442,
											"end": 14467,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14442,
											"end": 14467,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14481,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 14499,
											"end": 14500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14481,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 14481,
											"end": 14501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14481,
											"end": 14501,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 14481,
											"end": 14501,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14476,
											"end": 14501,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14476,
											"end": 14501,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14520,
											"end": 14521,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14525,
											"end": 14543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 14525,
											"end": 14543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 14525,
											"end": 14543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14525,
											"end": 14543,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 14525,
											"end": 14543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14567,
											"end": 14568,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14564,
											"end": 14565,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14560,
											"end": 14569,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 14555,
											"end": 14569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14555,
											"end": 14569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14390,
											"end": 14575,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14390,
											"end": 14575,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14390,
											"end": 14575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14390,
											"end": 14575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14390,
											"end": 14575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14581,
											"end": 14775,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 14581,
											"end": 14775,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14621,
											"end": 14625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14641,
											"end": 14661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 14659,
											"end": 14660,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14641,
											"end": 14661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 14641,
											"end": 14661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14641,
											"end": 14661,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 14641,
											"end": 14661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14636,
											"end": 14661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14636,
											"end": 14661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14675,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 14693,
											"end": 14694,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14675,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 14675,
											"end": 14695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14675,
											"end": 14695,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 14675,
											"end": 14695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14670,
											"end": 14695,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14670,
											"end": 14695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14719,
											"end": 14720,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14716,
											"end": 14717,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14712,
											"end": 14721,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14721,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14721,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14743,
											"end": 14744,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14737,
											"end": 14741,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14734,
											"end": 14745,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14731,
											"end": 14768,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14731,
											"end": 14768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 14731,
											"end": 14768,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14748,
											"end": 14766,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 14748,
											"end": 14766,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 14748,
											"end": 14766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14748,
											"end": 14766,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 14748,
											"end": 14766,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14731,
											"end": 14768,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 14731,
											"end": 14768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14581,
											"end": 14775,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14581,
											"end": 14775,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14581,
											"end": 14775,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14581,
											"end": 14775,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14581,
											"end": 14775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14781,
											"end": 14957,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 14781,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14813,
											"end": 14814,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14830,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 14848,
											"end": 14849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14830,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 14830,
											"end": 14850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14830,
											"end": 14850,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 14830,
											"end": 14850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14825,
											"end": 14850,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14825,
											"end": 14850,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14864,
											"end": 14884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 14882,
											"end": 14883,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14864,
											"end": 14884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 14864,
											"end": 14884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14864,
											"end": 14884,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 14864,
											"end": 14884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14859,
											"end": 14884,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14859,
											"end": 14884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14903,
											"end": 14904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14893,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 14893,
											"end": 14928,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14908,
											"end": 14926,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 14908,
											"end": 14926,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 14908,
											"end": 14926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14908,
											"end": 14926,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 14908,
											"end": 14926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14893,
											"end": 14928,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 14893,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14949,
											"end": 14950,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14946,
											"end": 14947,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14942,
											"end": 14951,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 14937,
											"end": 14951,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14937,
											"end": 14951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14781,
											"end": 14957,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14781,
											"end": 14957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14781,
											"end": 14957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14781,
											"end": 14957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14781,
											"end": 14957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14963,
											"end": 15154,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 14963,
											"end": 15154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15003,
											"end": 15006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15022,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 15040,
											"end": 15041,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15022,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 15022,
											"end": 15042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15022,
											"end": 15042,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 15022,
											"end": 15042,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15017,
											"end": 15042,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15017,
											"end": 15042,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15056,
											"end": 15076,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 15074,
											"end": 15075,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15056,
											"end": 15076,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 15056,
											"end": 15076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15056,
											"end": 15076,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 15056,
											"end": 15076,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15051,
											"end": 15076,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15051,
											"end": 15076,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15099,
											"end": 15100,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15096,
											"end": 15097,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15092,
											"end": 15101,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15085,
											"end": 15101,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15085,
											"end": 15101,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15120,
											"end": 15123,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15117,
											"end": 15118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15114,
											"end": 15124,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15111,
											"end": 15147,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15111,
											"end": 15147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 15111,
											"end": 15147,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 15127,
											"end": 15145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15111,
											"end": 15147,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 15111,
											"end": 15147,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14963,
											"end": 15154,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14963,
											"end": 15154,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14963,
											"end": 15154,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14963,
											"end": 15154,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14963,
											"end": 15154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15160,
											"end": 15340,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 15160,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15208,
											"end": 15285,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15205,
											"end": 15206,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15198,
											"end": 15286,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15305,
											"end": 15309,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 15302,
											"end": 15303,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 15295,
											"end": 15310,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15329,
											"end": 15333,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 15326,
											"end": 15327,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15319,
											"end": 15334,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"BBNEventERC721.sol",
								"utils/ERC721A.sol",
								"utils/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Anthony (fps) https://github.com/0xfps.\",\"details\":\"Minted to every curator who lists an event.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"BBN Event NFT Contract.\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BBNEventERC721.sol\":\"BBNEventERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"BBNEventERC721.sol\":{\"keccak256\":\"0x43d3cab3432ec371136132e35afdf53789ef82ee07c75f3f418b8383ef57f1e5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6063ebf5214f22813d3ee153d8a679341625fb6fe01a7bd0a9d27e8a24999187\",\"dweb:/ipfs/QmTeCkSyDfxr1u1KpjtmaMVFq94gr7HtLTNvgiX67sZMzZ\"]},\"utils/ERC721A.sol\":{\"keccak256\":\"0xac2575f896bfef5863d79f33d5a784c9b5cd9a102b68552abc92ec87adfa7c9b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://24504c10030260f29898d37d3d41c12728ca784f0afdca457873b62048f44fa1\",\"dweb:/ipfs/QmTPByYCbZm2Vyy6MrYpXFsQyCXgnpyQJ7b3TQgjVEFYXJ\"]},\"utils/IERC721A.sol\":{\"keccak256\":\"0xb3c00ec7c2bfe10554511789092fde1b7f87792987eddc356634e0ee911251fe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a1244c266e7c78b068bced7c27cf37edeff9b077d85a9bb322a90500cc2b7dfb\",\"dweb:/ipfs/Qmf34da2NwqsnysLeimymAjR1qZ7cfBanVgu7Wvw4zHPH1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 782,
								"contract": "BBNEventERC721.sol:BBNEventERC721",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 784,
								"contract": "BBNEventERC721.sol:BBNEventERC721",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 786,
								"contract": "BBNEventERC721.sol:BBNEventERC721",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 788,
								"contract": "BBNEventERC721.sol:BBNEventERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 793,
								"contract": "BBNEventERC721.sol:BBNEventERC721",
								"label": "_ownerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)2188_storage)"
							},
							{
								"astId": 798,
								"contract": "BBNEventERC721.sol:BBNEventERC721",
								"label": "_addressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(AddressData)2197_storage)"
							},
							{
								"astId": 802,
								"contract": "BBNEventERC721.sol:BBNEventERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 808,
								"contract": "BBNEventERC721.sol:BBNEventERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(AddressData)2197_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)2197_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)2188_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)2188_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)2197_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.AddressData",
								"members": [
									{
										"astId": 2190,
										"contract": "BBNEventERC721.sol:BBNEventERC721",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2192,
										"contract": "BBNEventERC721.sol:BBNEventERC721",
										"label": "numberMinted",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2194,
										"contract": "BBNEventERC721.sol:BBNEventERC721",
										"label": "numberBurned",
										"offset": 16,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2196,
										"contract": "BBNEventERC721.sol:BBNEventERC721",
										"label": "aux",
										"offset": 24,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)2188_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.TokenOwnership",
								"members": [
									{
										"astId": 2183,
										"contract": "BBNEventERC721.sol:BBNEventERC721",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2185,
										"contract": "BBNEventERC721.sol:BBNEventERC721",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2187,
										"contract": "BBNEventERC721.sol:BBNEventERC721",
										"label": "burned",
										"offset": 28,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"utils/ERC721A.sol\":{\"keccak256\":\"0xac2575f896bfef5863d79f33d5a784c9b5cd9a102b68552abc92ec87adfa7c9b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://24504c10030260f29898d37d3d41c12728ca784f0afdca457873b62048f44fa1\",\"dweb:/ipfs/QmTPByYCbZm2Vyy6MrYpXFsQyCXgnpyQJ7b3TQgjVEFYXJ\"]},\"utils/IERC721A.sol\":{\"keccak256\":\"0xb3c00ec7c2bfe10554511789092fde1b7f87792987eddc356634e0ee911251fe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a1244c266e7c78b068bced7c27cf37edeff9b077d85a9bb322a90500cc2b7dfb\",\"dweb:/ipfs/Qmf34da2NwqsnysLeimymAjR1qZ7cfBanVgu7Wvw4zHPH1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 782,
								"contract": "utils/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 784,
								"contract": "utils/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 786,
								"contract": "utils/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 788,
								"contract": "utils/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 793,
								"contract": "utils/ERC721A.sol:ERC721A",
								"label": "_ownerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)2188_storage)"
							},
							{
								"astId": 798,
								"contract": "utils/ERC721A.sol:ERC721A",
								"label": "_addressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(AddressData)2197_storage)"
							},
							{
								"astId": 802,
								"contract": "utils/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 808,
								"contract": "utils/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(AddressData)2197_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)2197_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)2188_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)2188_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)2197_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.AddressData",
								"members": [
									{
										"astId": 2190,
										"contract": "utils/ERC721A.sol:ERC721A",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2192,
										"contract": "utils/ERC721A.sol:ERC721A",
										"label": "numberMinted",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2194,
										"contract": "utils/ERC721A.sol:ERC721A",
										"label": "numberBurned",
										"offset": 16,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2196,
										"contract": "utils/ERC721A.sol:ERC721A",
										"label": "aux",
										"offset": 24,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)2188_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.TokenOwnership",
								"members": [
									{
										"astId": 2183,
										"contract": "utils/ERC721A.sol:ERC721A",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2185,
										"contract": "utils/ERC721A.sol:ERC721A",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2187,
										"contract": "utils/ERC721A.sol:ERC721A",
										"label": "burned",
										"offset": 28,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"utils/IERC721A.sol\":{\"keccak256\":\"0xb3c00ec7c2bfe10554511789092fde1b7f87792987eddc356634e0ee911251fe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a1244c266e7c78b068bced7c27cf37edeff9b077d85a9bb322a90500cc2b7dfb\",\"dweb:/ipfs/Qmf34da2NwqsnysLeimymAjR1qZ7cfBanVgu7Wvw4zHPH1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 740,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"271:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 739,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								739
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:0"
									},
									"scope": 115,
									"src": "1809:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2701:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2721:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:0"
									},
									"scope": 115,
									"src": "2644:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3298:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3320:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 115,
									"src": "3267:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3851:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3863:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:0"
									},
									"scope": 115,
									"src": "3834:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4236:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4254:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:0"
									},
									"scope": 115,
									"src": "4209:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4490:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:0"
									},
									"scope": 115,
									"src": "4429:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4698:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4739:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:0"
									},
									"scope": 115,
									"src": "4657:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4497:0",
							"usedErrors": []
						}
					],
					"src": "108:4640:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "859:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "885:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "907:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "932:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "976:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 129,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:1"
									},
									"scope": 133,
									"src": "824:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "294:692:1",
							"usedErrors": []
						}
					],
					"src": "116:871:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 116,
							"src": "137:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "IERC721",
										"nameLocations": [
											"326:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "326:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:2"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 160,
							"linearizedBaseContracts": [
								160,
								115,
								739
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "442:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:2"
									},
									"scope": 160,
									"src": "403:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "569:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:2"
									},
									"scope": 160,
									"src": "528:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "743:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:2"
									},
									"scope": 160,
									"src": "685:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 161,
							"src": "297:463:2",
							"usedErrors": []
						}
					],
					"src": "112:649:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							455
						]
					},
					"id": 456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 163,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 171,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 170,
												"id": 176,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 455,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 189,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		],
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 187,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													198,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 197,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 205,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 199,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 201,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 455,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 222,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															249
														],
														"referencedDeclaration": 249,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 455,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 243,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 245,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 241,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															269,
															319
														],
														"referencedDeclaration": 319,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 247,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 455,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 263,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 264,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 261,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															269,
															319
														],
														"referencedDeclaration": 319,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 260,
												"id": 267,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 455,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 286,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		],
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 284,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 289,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 296,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 295,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													302,
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 301,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 303,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"arguments": [
														{
															"id": 309,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 305,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 307,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 313,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 314,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 315,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 312,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 317,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 277,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 455,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 329,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															336,
															371
														],
														"referencedDeclaration": 371,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 328,
												"id": 334,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 455,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 350,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 349,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													356,
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 355,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 357,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"arguments": [
														{
															"id": 361,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 359,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 366,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 367,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 347,
												"id": 369,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 455,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 381,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															388,
															423
														],
														"referencedDeclaration": 423,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 380,
												"id": 386,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 455,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 402,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 401,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													408,
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 409,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"arguments": [
														{
															"id": 413,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 411,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 417,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 418,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 419,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 416,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 399,
												"id": 421,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 455,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "7721:582:3",
										"statements": [
											{
												"condition": {
													"id": 435,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 426,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "7792:505:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 439,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 449,
																"nodeType": "Block",
																"src": "8234:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 446,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 430,
																					"src": "8259:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 445,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 448,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:3"
																	}
																]
															},
															"id": 450,
															"nodeType": "IfStatement",
															"src": "7872:415:3",
															"trueBody": {
																"id": 444,
																"nodeType": "Block",
																"src": "7899:329:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:3"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 428,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 428,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 443,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 452,
												"nodeType": "IfStatement",
												"src": "7731:566:3",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 436,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 434,
															"id": 437,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 455,
									"src": "7561:742:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 456,
							"src": "194:8111:3",
							"usedErrors": []
						}
					],
					"src": "101:8205:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 458,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 463,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 462,
												"id": 465,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 477,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 477,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							703
						]
					},
					"id": 704,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 703,
							"linearizedBaseContracts": [
								703
							],
							"name": "Strings",
							"nameLocation": "169:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 483,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "183:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 481,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 482,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 486,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "247:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 484,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 485,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "463:632:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "665:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "661:51:5",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "677:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 493,
															"id": 498,
															"nodeType": "Return",
															"src": "691:10:5"
														}
													]
												}
											},
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "721:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 501,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"id": 503,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 489,
													"src": "736:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:5"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "751:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:5"
											},
											{
												"body": {
													"id": 518,
													"nodeType": "Block",
													"src": "793:57:5",
													"statements": [
														{
															"expression": {
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:5",
																"subExpression": {
																	"id": 511,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "807:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 513,
															"nodeType": "ExpressionStatement",
															"src": "807:8:5"
														},
														{
															"expression": {
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 514,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "829:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "829:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 508,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "782:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "WhileStatement",
												"src": "775:75:5"
											},
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "859:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 520,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"arguments": [
														{
															"id": 524,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "891:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 522,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:5"
											},
											{
												"body": {
													"id": 557,
													"nodeType": "Block",
													"src": "927:131:5",
													"statements": [
														{
															"expression": {
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 530,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "941:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 533,
															"nodeType": "ExpressionStatement",
															"src": "941:11:5"
														},
														{
															"expression": {
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 534,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "966:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 536,
																	"indexExpression": {
																		"id": 535,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 506,
																		"src": "973:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 541,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 546,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 544,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 489,
																									"src": "1009:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 545,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 543,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 542,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 547,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 539,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 537,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 552,
															"nodeType": "ExpressionStatement",
															"src": "966:56:5"
														},
														{
															"expression": {
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1036:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 556,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 527,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "915:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "WhileStatement",
												"src": "908:150:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "1081:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 559,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 493,
												"id": 563,
												"nodeType": "Return",
												"src": "1067:21:5"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "410:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:5"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:5"
									},
									"scope": 703,
									"src": "392:703:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "1274:255:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 573,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "1288:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "1284:54:5",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "1300:38:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 572,
															"id": 577,
															"nodeType": "Return",
															"src": "1314:13:5"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "1347:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"id": 582,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "1362:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:5"
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "1377:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 584,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"hexValue": "30",
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:5"
											},
											{
												"body": {
													"id": 598,
													"nodeType": "Block",
													"src": "1423:57:5",
													"statements": [
														{
															"expression": {
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:5",
																"subExpression": {
																	"id": 591,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "1437:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:5"
														},
														{
															"expression": {
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 594,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "1459:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 588,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "1412:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "WhileStatement",
												"src": "1405:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "1508:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 602,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1515:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															606,
															682,
															702
														],
														"referencedDeclaration": 682,
														"src": "1496:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 572,
												"id": 604,
												"nodeType": "Return",
												"src": "1489:33:5"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1221:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:5"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1259:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:5"
									},
									"scope": 703,
									"src": "1200:329:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "1742:351:5",
										"statements": [
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "1752:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 616,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 621,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "1788:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 618,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:5"
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 627,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 629,
														"indexExpression": {
															"hexValue": "30",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:5"
											},
											{
												"expression": {
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 633,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1834:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 635,
														"indexExpression": {
															"hexValue": "31",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:5"
											},
											{
												"body": {
													"id": 667,
													"nodeType": "Block",
													"src": "1904:87:5",
													"statements": [
														{
															"expression": {
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 653,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "1918:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"id": 654,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "1925:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 656,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "1930:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 660,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 609,
																			"src": "1943:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:5"
														},
														{
															"expression": {
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 663,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "1969:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 666,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "1892:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 668,
												"initializationExpression": {
													"assignments": [
														640
													],
													"declarations": [
														{
															"constant": false,
															"id": 640,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 668,
															"src": "1864:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 639,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 646,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 642,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "1880:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:5",
														"subExpression": {
															"id": 650,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "1901:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 652,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2008:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "2079:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 676,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 615,
												"id": 680,
												"nodeType": "Return",
												"src": "2065:21:5"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1673:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1688:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:5"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1727:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:5"
									},
									"scope": 703,
									"src": "1652:441:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2318:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 695,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 685,
																			"src": "2363:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 693,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 691,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 698,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2371:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 690,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															606,
															682,
															702
														],
														"referencedDeclaration": 682,
														"src": "2335:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 689,
												"id": 700,
												"nodeType": "Return",
												"src": "2328:59:5"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2266:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:5"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2303:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:5"
									},
									"scope": 703,
									"src": "2245:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 704,
							"src": "161:2235:5",
							"usedErrors": []
						}
					],
					"src": "101:2296:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							727
						],
						"IERC165": [
							739
						]
					},
					"id": 728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 705,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 706,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 728,
							"sourceUnit": 740,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 708,
										"name": "IERC165",
										"nameLocations": [
											"754:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 739,
										"src": "754:7:6"
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 707,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 727,
							"linearizedBaseContracts": [
								727,
								739
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										738
									],
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 718,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 720,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$739_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$739_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 719,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$739",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 717,
												"id": 724,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 711,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 727,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 728,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						]
					},
					"id": 740,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 730,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 739,
							"linearizedBaseContracts": [
								739
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 732,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 739,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 740,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"BBNEventERC721.sol": {
				"ast": {
					"absolutePath": "BBNEventERC721.sol",
					"exportedSymbols": {
						"BBNEventERC721": [
							759
						],
						"ERC721A": [
							2133
						]
					},
					"id": 760,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 741,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:8"
						},
						{
							"absolutePath": "utils/ERC721A.sol",
							"file": "./utils/ERC721A.sol",
							"id": 743,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 760,
							"sourceUnit": 2134,
							"src": "65:44:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 742,
										"name": "ERC721A",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2133,
										"src": "73:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 745,
										"name": "ERC721A",
										"nameLocations": [
											"286:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2133,
										"src": "286:7:8"
									},
									"id": 746,
									"nodeType": "InheritanceSpecifier",
									"src": "286:7:8"
								}
							],
							"canonicalName": "BBNEventERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 744,
								"nodeType": "StructuredDocumentation",
								"src": "113:144:8",
								"text": " @title BBN Event NFT Contract.\n @author Anthony (fps) https://github.com/0xfps.\n @dev Minted to every curator who lists an event."
							},
							"fullyImplemented": true,
							"id": 759,
							"linearizedBaseContracts": [
								759,
								2133,
								2204,
								160,
								115,
								727,
								739,
								477
							],
							"name": "BBNEventERC721",
							"nameLocation": "268:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "391:2:8",
										"statements": []
									},
									"id": 758,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 753,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 748,
													"src": "370:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 754,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 750,
													"src": "377:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 755,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 752,
												"name": "ERC721A",
												"nameLocations": [
													"362:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2133,
												"src": "362:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "362:23:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "327:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "313:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 747,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "313:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "348:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "334:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 749,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:44:8"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:0:8"
									},
									"scope": 759,
									"src": "301:92:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 760,
							"src": "259:137:8",
							"usedErrors": [
								2145,
								2148,
								2151,
								2154,
								2157,
								2160,
								2163,
								2166,
								2169,
								2172,
								2175,
								2178,
								2181
							]
						}
					],
					"src": "37:359:8"
				},
				"id": 8
			},
			"utils/ERC721A.sol": {
				"ast": {
					"absolutePath": "utils/ERC721A.sol",
					"exportedSymbols": {
						"Address": [
							455
						],
						"Context": [
							477
						],
						"ERC165": [
							727
						],
						"ERC721A": [
							2133
						],
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721A": [
							2204
						],
						"IERC721Metadata": [
							160
						],
						"IERC721Receiver": [
							133
						],
						"Strings": [
							703
						]
					},
					"id": 2134,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 761,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "437:23:9"
						},
						{
							"absolutePath": "utils/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2134,
							"sourceUnit": 2205,
							"src": "464:24:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 763,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2134,
							"sourceUnit": 134,
							"src": "490:66:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2134,
							"sourceUnit": 456,
							"src": "558:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 765,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2134,
							"sourceUnit": 478,
							"src": "611:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2134,
							"sourceUnit": 704,
							"src": "664:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 767,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2134,
							"sourceUnit": 728,
							"src": "717:64:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 769,
										"name": "Context",
										"nameLocations": [
											"1315:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "1315:7:9"
									},
									"id": 770,
									"nodeType": "InheritanceSpecifier",
									"src": "1315:7:9"
								},
								{
									"baseName": {
										"id": 771,
										"name": "ERC165",
										"nameLocations": [
											"1324:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "1324:6:9"
									},
									"id": 772,
									"nodeType": "InheritanceSpecifier",
									"src": "1324:6:9"
								},
								{
									"baseName": {
										"id": 773,
										"name": "IERC721A",
										"nameLocations": [
											"1332:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2204,
										"src": "1332:8:9"
									},
									"id": 774,
									"nodeType": "InheritanceSpecifier",
									"src": "1332:8:9"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 768,
								"nodeType": "StructuredDocumentation",
								"src": "785:499:9",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2133,
							"linearizedBaseContracts": [
								2133,
								2204,
								160,
								115,
								727,
								739,
								477
							],
							"name": "ERC721A",
							"nameLocation": "1304:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 777,
									"libraryName": {
										"id": 775,
										"name": "Address",
										"nameLocations": [
											"1354:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 455,
										"src": "1354:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1348:26:9",
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1366:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 780,
									"libraryName": {
										"id": 778,
										"name": "Strings",
										"nameLocations": [
											"1386:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "1386:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1380:26:9",
									"typeName": {
										"id": 779,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1398:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 782,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "1483:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2133,
									"src": "1466:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 781,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1466:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 784,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "1559:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2133,
									"src": "1542:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 783,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1542:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 786,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1614:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2133,
									"src": "1599:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 785,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1599:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 788,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1664:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2133,
									"src": "1649:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 787,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1649:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 793,
									"mutability": "mutable",
									"name": "_ownerships",
									"nameLocation": "1898:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2133,
									"src": "1854:55:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
										"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership)"
									},
									"typeName": {
										"id": 792,
										"keyType": {
											"id": 789,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1862:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1854:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
											"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership)"
										},
										"valueType": {
											"id": 791,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 790,
												"name": "TokenOwnership",
												"nameLocations": [
													"1873:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2188,
												"src": "1873:14:9"
											},
											"referencedDeclaration": 2188,
											"src": "1873:14:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
												"typeString": "struct IERC721A.TokenOwnership"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 798,
									"mutability": "mutable",
									"name": "_addressData",
									"nameLocation": "2004:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2133,
									"src": "1964:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
										"typeString": "mapping(address => struct IERC721A.AddressData)"
									},
									"typeName": {
										"id": 797,
										"keyType": {
											"id": 794,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1972:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1964:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
											"typeString": "mapping(address => struct IERC721A.AddressData)"
										},
										"valueType": {
											"id": 796,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 795,
												"name": "AddressData",
												"nameLocations": [
													"1983:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2197,
												"src": "1983:11:9"
											},
											"referencedDeclaration": 2197,
											"src": "1983:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressData_$2197_storage_ptr",
												"typeString": "struct IERC721A.AddressData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 802,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "2111:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2133,
									"src": "2075:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 801,
										"keyType": {
											"id": 799,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2083:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2075:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 800,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2094:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 808,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "2237:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2133,
									"src": "2184:71:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 807,
										"keyType": {
											"id": 803,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2192:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2184:44:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 806,
											"keyType": {
												"id": 804,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2211:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2203:24:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 805,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2222:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "2320:102:9",
										"statements": [
											{
												"expression": {
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 815,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "2331:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 816,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2339:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2331:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "2331:13:9"
											},
											{
												"expression": {
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 819,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "2355:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 820,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "2365:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2355:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "2355:17:9"
											},
											{
												"expression": {
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 823,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "2383:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 824,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "2399:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2399:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2383:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "2383:31:9"
											}
										]
									},
									"id": 829,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2290:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2276:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 809,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2276:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2311:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2297:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 811,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2297:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2275:44:9"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2320:0:9"
									},
									"scope": 2133,
									"src": "2264:158:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "2584:27:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2602:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 834,
												"id": 836,
												"nodeType": "Return",
												"src": "2595:8:9"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "2430:83:9",
										"text": " To change the starting tokenId, please override this function."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "2528:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2541:2:9"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2575:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2575:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:9:9"
									},
									"scope": 2133,
									"src": "2519:92:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2203
									],
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "2807:250:9",
										"statements": [
											{
												"id": 852,
												"nodeType": "UncheckedBlock",
												"src": "2960:90:9",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 845,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "2992:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 846,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "3008:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2992:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 848,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "3023:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3023:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2992:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 844,
														"id": 851,
														"nodeType": "Return",
														"src": "2985:53:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "2619:120:9",
										"text": " @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2754:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 841,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2780:8:9"
									},
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2765:2:9"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2798:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:9:9"
									},
									"scope": 2133,
									"src": "2745:312:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "3206:227:9",
										"statements": [
											{
												"id": 865,
												"nodeType": "UncheckedBlock",
												"src": "3351:75:9",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 860,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "3383:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 861,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "3399:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3399:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3383:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 859,
														"id": 864,
														"nodeType": "Return",
														"src": "3376:38:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "3065:79:9",
										"text": " Returns the total amount of tokens minted in the contract."
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "3159:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3171:2:9"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "3197:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3197:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3196:9:9"
									},
									"scope": 2133,
									"src": "3150:283:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										726,
										738
									],
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "3613:158:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 878,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "3631:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 880,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 115,
																			"src": "3651:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 879,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3646:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3646:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$115",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3660:11:9",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "3646:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "3631:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 884,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "3675:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 886,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "3695:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 885,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3690:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3690:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$160",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3712:11:9",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "3690:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "3675:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3631:92:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 893,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "3751:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 891,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3727:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721A_$2133_$",
																	"typeString": "type(contract super ERC721A)"
																}
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3733:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 726,
															"src": "3727:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3727:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3631:132:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 877,
												"id": 896,
												"nodeType": "Return",
												"src": "3624:139:9"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "3441:58:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3514:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 874,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 872,
												"name": "ERC165",
												"nameLocations": [
													"3581:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 727,
												"src": "3581:6:9"
											},
											{
												"id": 873,
												"name": "IERC165",
												"nameLocations": [
													"3589:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 739,
												"src": "3589:7:9"
											}
										],
										"src": "3572:25:9"
									},
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3539:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "3532:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 869,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3532:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3531:20:9"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "3607:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3607:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:6:9"
									},
									"scope": 2133,
									"src": "3505:266:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										40
									],
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "3908:133:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 907,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "3923:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3940:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3932:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 908,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3932:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3932:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3923:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "3919:60:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 913,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "3951:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3951:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 915,
													"nodeType": "RevertStatement",
													"src": "3944:35:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 919,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "4005:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 921,
																"indexExpression": {
																	"id": 920,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "4018:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4005:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$2197_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4025:7:9",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2190,
															"src": "4005:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3997:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3997:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3997:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 906,
												"id": 924,
												"nodeType": "Return",
												"src": "3990:43:9"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "3779:50:9",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3844:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 903,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3881:8:9"
									},
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3862:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "3854:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:15:9"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "3899:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3899:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3898:9:9"
									},
									"scope": 2133,
									"src": "3835:206:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "4193:67:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 936,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "4219:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 938,
																"indexExpression": {
																	"id": 937,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "4232:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4219:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$2197_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4239:12:9",
															"memberName": "numberMinted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2192,
															"src": "4219:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4211:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 934,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4211:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4211:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 933,
												"id": 941,
												"nodeType": "Return",
												"src": "4204:48:9"
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "4049:68:9",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "4132:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4154:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "4146:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4146:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4145:15:9"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "4184:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:9:9"
									},
									"scope": 2133,
									"src": "4123:137:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "4428:67:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 953,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "4454:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 955,
																"indexExpression": {
																	"id": 954,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "4467:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4454:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$2197_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4474:12:9",
															"memberName": "numberBurned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2194,
															"src": "4454:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4446:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4446:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4446:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 950,
												"id": 958,
												"nodeType": "Return",
												"src": "4439:48:9"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "4268:84:9",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "4367:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4389:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4381:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4381:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4380:15:9"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4419:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4419:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4418:9:9"
									},
									"scope": 2133,
									"src": "4358:137:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "4676:49:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 968,
															"name": "_addressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "4694:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
																"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
															}
														},
														"id": 970,
														"indexExpression": {
															"id": 969,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "4707:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4694:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$2197_storage",
															"typeString": "struct IERC721A.AddressData storage ref"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4714:3:9",
													"memberName": "aux",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2196,
													"src": "4694:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 967,
												"id": 972,
												"nodeType": "Return",
												"src": "4687:30:9"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "4503:104:9",
										"text": " Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "4622:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4638:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "4630:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4630:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4629:15:9"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "4668:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 965,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4668:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:8:9"
									},
									"scope": 2133,
									"src": "4613:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "4966:48:9",
										"statements": [
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 982,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "4977:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
																	"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																}
															},
															"id": 984,
															"indexExpression": {
																"id": 983,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "4990:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4977:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$2197_storage",
																"typeString": "struct IERC721A.AddressData storage ref"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4997:3:9",
														"memberName": "aux",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2196,
														"src": "4977:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "aux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "5003:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "4977:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "4977:29:9"
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "4733:174:9",
										"text": " Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "4922:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4938:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "4930:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "4952:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "4945:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 978,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4945:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4929:27:9"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4966:0:9"
									},
									"scope": 2133,
									"src": "4913:101:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "5301:1115:9",
										"statements": [
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "5320:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "5312:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 999,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5312:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1002,
												"initialValue": {
													"id": 1001,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 993,
													"src": "5327:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5312:22:9"
											},
											{
												"id": 1059,
												"nodeType": "UncheckedBlock",
												"src": "5347:1013:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1003,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "5376:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5376:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1005,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "5395:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5376:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1058,
														"nodeType": "IfStatement",
														"src": "5372:977:9",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1007,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "5422:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1008,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "5429:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5422:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1057,
															"nodeType": "IfStatement",
															"src": "5418:931:9",
															"trueBody": {
																"id": 1056,
																"nodeType": "Block",
																"src": "5444:905:9",
																"statements": [
																	{
																		"assignments": [
																			1012
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1012,
																				"mutability": "mutable",
																				"name": "ownership",
																				"nameLocation": "5489:9:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 1056,
																				"src": "5467:31:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership"
																				},
																				"typeName": {
																					"id": 1011,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1010,
																						"name": "TokenOwnership",
																						"nameLocations": [
																							"5467:14:9"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 2188,
																						"src": "5467:14:9"
																					},
																					"referencedDeclaration": 2188,
																					"src": "5467:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																						"typeString": "struct IERC721A.TokenOwnership"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1016,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1013,
																				"name": "_ownerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "5501:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
																					"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																				}
																			},
																			"id": 1015,
																			"indexExpression": {
																				"id": 1014,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "5513:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5501:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage",
																				"typeString": "struct IERC721A.TokenOwnership storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5467:51:9"
																	},
																	{
																		"condition": {
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "5545:17:9",
																			"subExpression": {
																				"expression": {
																					"id": 1017,
																					"name": "ownership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1012,
																					"src": "5546:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
																						"typeString": "struct IERC721A.TokenOwnership memory"
																					}
																				},
																				"id": 1018,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5556:6:9",
																				"memberName": "burned",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2187,
																				"src": "5546:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1055,
																		"nodeType": "IfStatement",
																		"src": "5541:789:9",
																		"trueBody": {
																			"id": 1054,
																			"nodeType": "Block",
																			"src": "5564:766:9",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 1026,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1020,
																								"name": "ownership",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1012,
																								"src": "5595:9:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
																									"typeString": "struct IERC721A.TokenOwnership memory"
																								}
																							},
																							"id": 1021,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5605:4:9",
																							"memberName": "addr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2183,
																							"src": "5595:14:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "!=",
																						"rightExpression": {
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 1024,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5621:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 1023,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "5613:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1022,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "5613:7:9",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1025,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5613:10:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "5595:28:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1030,
																					"nodeType": "IfStatement",
																					"src": "5591:109:9",
																					"trueBody": {
																						"id": 1029,
																						"nodeType": "Block",
																						"src": "5625:75:9",
																						"statements": [
																							{
																								"expression": {
																									"id": 1027,
																									"name": "ownership",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1012,
																									"src": "5663:9:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
																										"typeString": "struct IERC721A.TokenOwnership memory"
																									}
																								},
																								"functionReturnParameters": 998,
																								"id": 1028,
																								"nodeType": "Return",
																								"src": "5656:16:9"
																							}
																						]
																					}
																				},
																				{
																					"body": {
																						"id": 1052,
																						"nodeType": "Block",
																						"src": "6035:272:9",
																						"statements": [
																							{
																								"expression": {
																									"id": 1033,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "--",
																									"prefix": false,
																									"src": "6066:6:9",
																									"subExpression": {
																										"id": 1032,
																										"name": "curr",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1000,
																										"src": "6066:4:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1034,
																								"nodeType": "ExpressionStatement",
																								"src": "6066:6:9"
																							},
																							{
																								"expression": {
																									"id": 1039,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1035,
																										"name": "ownership",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1012,
																										"src": "6103:9:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
																											"typeString": "struct IERC721A.TokenOwnership memory"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 1036,
																											"name": "_ownerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 793,
																											"src": "6115:11:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
																												"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																											}
																										},
																										"id": 1038,
																										"indexExpression": {
																											"id": 1037,
																											"name": "curr",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1000,
																											"src": "6127:4:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "6115:17:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage",
																											"typeString": "struct IERC721A.TokenOwnership storage ref"
																										}
																									},
																									"src": "6103:29:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
																										"typeString": "struct IERC721A.TokenOwnership memory"
																									}
																								},
																								"id": 1040,
																								"nodeType": "ExpressionStatement",
																								"src": "6103:29:9"
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									"id": 1047,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 1041,
																											"name": "ownership",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1012,
																											"src": "6167:9:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
																												"typeString": "struct IERC721A.TokenOwnership memory"
																											}
																										},
																										"id": 1042,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "6177:4:9",
																										"memberName": "addr",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2183,
																										"src": "6167:14:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "!=",
																									"rightExpression": {
																										"arguments": [
																											{
																												"hexValue": "30",
																												"id": 1045,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "6193:1:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												},
																												"value": "0"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												}
																											],
																											"id": 1044,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "6185:7:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_address_$",
																												"typeString": "type(address)"
																											},
																											"typeName": {
																												"id": 1043,
																												"name": "address",
																												"nodeType": "ElementaryTypeName",
																												"src": "6185:7:9",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 1046,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "6185:10:9",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "6167:28:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1051,
																								"nodeType": "IfStatement",
																								"src": "6163:117:9",
																								"trueBody": {
																									"id": 1050,
																									"nodeType": "Block",
																									"src": "6197:83:9",
																									"statements": [
																										{
																											"expression": {
																												"id": 1048,
																												"name": "ownership",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1012,
																												"src": "6239:9:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
																													"typeString": "struct IERC721A.TokenOwnership memory"
																												}
																											},
																											"functionReturnParameters": 998,
																											"id": 1049,
																											"nodeType": "Return",
																											"src": "6232:16:9"
																										}
																									]
																								}
																							}
																						]
																					},
																					"condition": {
																						"hexValue": "74727565",
																						"id": 1031,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6029:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					},
																					"id": 1053,
																					"nodeType": "WhileStatement",
																					"src": "6022:285:9"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1060,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2166,
														"src": "6377:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6377:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "RevertStatement",
												"src": "6370:38:9"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "5022:188:9",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "5225:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5246:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "5238:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5238:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5237:17:9"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "5278:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 996,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 995,
														"name": "TokenOwnership",
														"nameLocations": [
															"5278:14:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2188,
														"src": "5278:14:9"
													},
													"referencedDeclaration": 2188,
													"src": "5278:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5277:23:9"
									},
									"scope": 2133,
									"src": "5216:1200:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "6551:52:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1074,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "6582:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1073,
															"name": "_ownershipOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "6569:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2188_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6569:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6591:4:9",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2183,
													"src": "6569:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1072,
												"id": 1077,
												"nodeType": "Return",
												"src": "6562:33:9"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "6424:48:9",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "6487:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1069,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6524:8:9"
									},
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6503:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "6495:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6495:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6494:17:9"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "6542:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6542:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6541:9:9"
									},
									"scope": 2133,
									"src": "6478:125:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										145
									],
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "6739:31:9",
										"statements": [
											{
												"expression": {
													"id": 1086,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 786,
													"src": "6757:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1085,
												"id": 1087,
												"nodeType": "Return",
												"src": "6750:12:9"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "6611:53:9",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6679:4:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1082,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6706:8:9"
									},
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6683:2:9"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "6724:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1083,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6724:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6723:15:9"
									},
									"scope": 2133,
									"src": "6670:100:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										151
									],
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "6910:33:9",
										"statements": [
											{
												"expression": {
													"id": 1096,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 788,
													"src": "6928:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1095,
												"id": 1097,
												"nodeType": "Return",
												"src": "6921:14:9"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "6778:55:9",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6848:6:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1092,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6877:8:9"
									},
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6854:2:9"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "6895:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1093,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6895:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6894:15:9"
									},
									"scope": 2133,
									"src": "6839:104:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										159
									],
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "7102:230:9",
										"statements": [
											{
												"condition": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7117:17:9",
													"subExpression": {
														"arguments": [
															{
																"id": 1109,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "7126:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1108,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "7118:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7118:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1115,
												"nodeType": "IfStatement",
												"src": "7113:59:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1112,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "7143:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7143:29:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1114,
													"nodeType": "RevertStatement",
													"src": "7136:36:9"
												}
											},
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "7199:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "7185:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1116,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "7185:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1120,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1118,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "7209:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7209:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7185:34:9"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1123,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "7243:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7237:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1121,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "7237:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7237:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7252:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7237:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7262:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7237:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7322:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7237:87:9",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1132,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "7290:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1133,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1102,
																				"src": "7299:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7307:8:9",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 565,
																			"src": "7299:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7299:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1130,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "7273:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7277:12:9",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "7273:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7273:45:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7266:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1128,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "7266:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7266:53:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1107,
												"id": 1140,
												"nodeType": "Return",
												"src": "7230:94:9"
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "6951:57:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "7023:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7069:8:9"
									},
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7040:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "7032:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7032:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7031:17:9"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "7087:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1105,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7087:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7086:15:9"
									},
									"scope": 2133,
									"src": "7014:318:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "7646:28:9",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7664:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1147,
												"id": 1149,
												"nodeType": "Return",
												"src": "7657:9:9"
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "7340:234:9",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "7589:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7597:2:9"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "7631:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1145,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7631:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7630:15:9"
									},
									"scope": 2133,
									"src": "7580:94:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										88
									],
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "7798:332:9",
										"statements": [
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7817:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1196,
														"src": "7809:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1160,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7809:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1166,
												"initialValue": {
													"arguments": [
														{
															"id": 1164,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "7841:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1162,
															"name": "ERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "7825:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721A_$2133_$",
																"typeString": "type(contract ERC721A)"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7833:7:9",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1079,
														"src": "7825:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7825:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7809:40:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1167,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "7864:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1168,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "7870:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7864:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1173,
												"nodeType": "IfStatement",
												"src": "7860:48:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1170,
															"name": "ApprovalToCurrentOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2154,
															"src": "7884:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7884:24:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1172,
													"nodeType": "RevertStatement",
													"src": "7877:31:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1174,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "7925:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7925:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1176,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "7941:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7925:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1189,
												"nodeType": "IfStatement",
												"src": "7921:161:9",
												"trueBody": {
													"condition": {
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7965:38:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1179,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "7983:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1180,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "7990:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7990:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1178,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "7966:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7966:37:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1188,
													"nodeType": "IfStatement",
													"src": "7961:121:9",
													"trueBody": {
														"id": 1187,
														"nodeType": "Block",
														"src": "8005:77:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1184,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2145,
																		"src": "8031:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8031:35:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1186,
																"nodeType": "RevertStatement",
																"src": "8024:42:9"
															}
														]
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1191,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "8103:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1192,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "8107:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1193,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "8116:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1190,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2051,
														"src": "8094:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8094:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "8094:28:9"
											}
										]
									},
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "7682:48:9",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "7745:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7789:8:9"
									},
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7761:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "7753:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7773:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "7765:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7765:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7752:29:9"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7798:0:9"
									},
									"scope": 2133,
									"src": "7736:394:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										104
									],
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "8273:127:9",
										"statements": [
											{
												"condition": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8288:17:9",
													"subExpression": {
														"arguments": [
															{
																"id": 1207,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "8297:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1206,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "8289:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8289:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "IfStatement",
												"src": "8284:64:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1210,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2148,
															"src": "8314:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8314:34:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1212,
													"nodeType": "RevertStatement",
													"src": "8307:41:9"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1214,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "8368:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1216,
													"indexExpression": {
														"id": 1215,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "8384:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8368:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1205,
												"id": 1217,
												"nodeType": "Return",
												"src": "8361:31:9"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "8138:52:9",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "8205:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1202,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8246:8:9"
									},
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8225:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "8217:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8217:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8216:17:9"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "8264:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8264:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8263:9:9"
									},
									"scope": 2133,
									"src": "8196:204:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										96
									],
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "8556:203:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1228,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "8571:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1229,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "8583:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8583:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8571:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1235,
												"nodeType": "IfStatement",
												"src": "8567:54:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1232,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "8604:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8604:17:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1234,
													"nodeType": "RevertStatement",
													"src": "8597:24:9"
												}
											},
											{
												"expression": {
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1236,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "8634:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1240,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1237,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "8653:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8653:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8634:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1241,
														"indexExpression": {
															"id": 1239,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "8667:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8634:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1242,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "8679:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8634:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "8634:53:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1246,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "8718:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8718:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "8732:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1249,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "8742:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1245,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "8703:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8703:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "EmitStatement",
												"src": "8698:53:9"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "8408:58:9",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "8481:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1226,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8547:8:9"
									},
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8507:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "8499:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8499:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "8522:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "8517:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8517:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8498:33:9"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8556:0:9"
									},
									"scope": 2133,
									"src": "8472:287:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "8933:61:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1264,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "8951:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1266,
														"indexExpression": {
															"id": 1265,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "8970:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8951:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1268,
													"indexExpression": {
														"id": 1267,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "8977:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8951:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1269,
												"nodeType": "Return",
												"src": "8944:42:9"
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "8767:57:9",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "8839:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1260,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8909:8:9"
									},
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8864:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "8856:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8856:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8879:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "8871:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8871:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8855:33:9"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "8927:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8927:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8926:6:9"
									},
									"scope": 2133,
									"src": "8830:164:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "9184:47:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1283,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "9205:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "9211:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1285,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "9215:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1282,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "9195:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9195:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "9195:28:9"
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "9002:53:9",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9070:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1280,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9175:8:9"
									},
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9101:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "9093:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9093:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9124:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "9116:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9116:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9145:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "9137:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9137:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9082:77:9"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9184:0:9"
									},
									"scope": 2133,
									"src": "9061:170:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										70
									],
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "9429:58:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1301,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "9457:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "9463:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "9467:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9476:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1300,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1308,
															1344
														],
														"referencedDeclaration": 1344,
														"src": "9440:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9440:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "9440:39:9"
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "9239:57:9",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "9311:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1298,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9420:8:9"
									},
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9346:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "9338:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9338:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9369:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "9361:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9361:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9390:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "9382:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9382:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9327:77:9"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9429:0:9"
									},
									"scope": 2133,
									"src": "9302:185:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "9714:236:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1322,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "9735:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1323,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "9741:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1324,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "9745:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1321,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "9725:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9725:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "9725:28:9"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "9768:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9771:10:9",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "9768:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9768:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1342,
												"nodeType": "IfStatement",
												"src": "9764:179:9",
												"trueBody": {
													"condition": {
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "9802:57:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1331,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "9834:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1332,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1313,
																	"src": "9840:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1333,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "9844:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1334,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "9853:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1330,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "9803:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9803:56:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1341,
													"nodeType": "IfStatement",
													"src": "9798:145:9",
													"trueBody": {
														"id": 1340,
														"nodeType": "Block",
														"src": "9861:82:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1337,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2175,
																		"src": "9887:38:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9887:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1339,
																"nodeType": "RevertStatement",
																"src": "9880:47:9"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "9495:57:9",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "9567:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1319,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9705:8:9"
									},
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9602:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "9594:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9594:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9625:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "9617:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9617:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9646:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "9638:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9677:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "9664:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9664:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9583:106:9"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9714:0:9"
									},
									"scope": 2133,
									"src": "9558:392:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "10268:111:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1352,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "10286:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10286:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1354,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "10305:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10286:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1356,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "10316:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1357,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "10326:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10316:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "10286:53:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "10343:28:9",
														"subExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1360,
																	"name": "_ownerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "10344:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
																		"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																	}
																},
																"id": 1362,
																"indexExpression": {
																	"id": 1361,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "10356:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10344:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage",
																	"typeString": "struct IERC721A.TokenOwnership storage ref"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10365:6:9",
															"memberName": "burned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2187,
															"src": "10344:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10286:85:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1351,
												"id": 1366,
												"nodeType": "Return",
												"src": "10279:92:9"
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "9958:241:9",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "10214:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10230:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "10222:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10222:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10221:17:9"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "10262:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10262:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10261:6:9"
									},
									"scope": 2133,
									"src": "10205:174:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "10521:46:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1377,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "10542:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1378,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "10546:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10556:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1376,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1383,
															1546
														],
														"referencedDeclaration": 1546,
														"src": "10532:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10532:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "10532:27:9"
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "10387:70:9",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10472:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10490:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "10482:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10482:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "10502:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "10494:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10494:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10481:30:9"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10521:0:9"
									},
									"scope": 2133,
									"src": "10463:104:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "11052:1637:9",
										"statements": [
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "11071:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1545,
														"src": "11063:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11063:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1396,
												"initialValue": {
													"id": 1395,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 782,
													"src": "11086:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11063:36:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1397,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "11114:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11128:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11120:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1398,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11120:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11120:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11114:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1406,
												"nodeType": "IfStatement",
												"src": "11110:48:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1403,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "11139:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11139:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1405,
													"nodeType": "RevertStatement",
													"src": "11132:26:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1407,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "11173:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11185:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11173:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1413,
												"nodeType": "IfStatement",
												"src": "11169:44:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1410,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "11195:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11195:18:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1412,
													"nodeType": "RevertStatement",
													"src": "11188:25:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11256:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11248:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1415,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11248:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11248:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "11260:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "11264:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1421,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "11278:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1414,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "11226:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11226:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "11226:61:9"
											},
											{
												"id": 1534,
												"nodeType": "UncheckedBlock",
												"src": "11539:1072:9",
												"statements": [
													{
														"expression": {
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1424,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "11564:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1426,
																	"indexExpression": {
																		"id": 1425,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "11577:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11564:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2197_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "11581:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2190,
																"src": "11564:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1430,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1388,
																		"src": "11599:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11592:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1428,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "11592:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11592:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "11564:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1433,
														"nodeType": "ExpressionStatement",
														"src": "11564:44:9"
													},
													{
														"expression": {
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1434,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "11623:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1436,
																	"indexExpression": {
																		"id": 1435,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "11636:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11623:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2197_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "11640:12:9",
																"memberName": "numberMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2192,
																"src": "11623:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1440,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1388,
																		"src": "11663:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11656:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1438,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "11656:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11656:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "11623:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1443,
														"nodeType": "ExpressionStatement",
														"src": "11623:49:9"
													},
													{
														"expression": {
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1444,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "11689:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1446,
																	"indexExpression": {
																		"id": 1445,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "11701:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11689:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "11715:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2183,
																"src": "11689:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1448,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "11722:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11689:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1450,
														"nodeType": "ExpressionStatement",
														"src": "11689:35:9"
													},
													{
														"expression": {
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1451,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "11739:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1453,
																	"indexExpression": {
																		"id": 1452,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "11751:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11739:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1454,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "11765:14:9",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2185,
																"src": "11739:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1457,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "11789:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11795:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "11789:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11782:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1455,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "11782:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11782:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "11739:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1461,
														"nodeType": "ExpressionStatement",
														"src": "11739:66:9"
													},
													{
														"assignments": [
															1463
														],
														"declarations": [
															{
																"constant": false,
																"id": 1463,
																"mutability": "mutable",
																"name": "updatedIndex",
																"nameLocation": "11830:12:9",
																"nodeType": "VariableDeclaration",
																"scope": 1534,
																"src": "11822:20:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1462,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11822:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1465,
														"initialValue": {
															"id": 1464,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "11845:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11822:35:9"
													},
													{
														"assignments": [
															1467
														],
														"declarations": [
															{
																"constant": false,
																"id": 1467,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "11880:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1534,
																"src": "11872:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1466,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11872:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1471,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1468,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "11886:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1469,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "11901:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11886:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11872:37:9"
													},
													{
														"condition": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1472,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "11930:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11933:10:9",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 178,
																"src": "11930:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11930:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1528,
															"nodeType": "Block",
															"src": "12404:153:9",
															"statements": [
																{
																	"body": {
																		"id": 1523,
																		"nodeType": "Block",
																		"src": "12426:88:9",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 1516,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12471:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 1515,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "12463:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1514,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "12463:7:9",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1517,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "12463:10:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1518,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1386,
																							"src": "12475:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1520,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "12479:14:9",
																							"subExpression": {
																								"id": 1519,
																								"name": "updatedIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1463,
																								"src": "12479:12:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1513,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "12454:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 1521,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12454:40:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1522,
																				"nodeType": "EmitStatement",
																				"src": "12449:45:9"
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1524,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "12522:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1525,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "12537:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12522:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1527,
																	"nodeType": "DoWhileStatement",
																	"src": "12423:119:9"
																}
															]
														},
														"id": 1529,
														"nodeType": "IfStatement",
														"src": "11926:631:9",
														"trueBody": {
															"id": 1512,
															"nodeType": "Block",
															"src": "11947:451:9",
															"statements": [
																{
																	"body": {
																		"id": 1500,
																		"nodeType": "Block",
																		"src": "11969:282:9",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 1478,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12014:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 1477,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "12006:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1476,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "12006:7:9",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1479,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "12006:10:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1480,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1386,
																							"src": "12018:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1481,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1463,
																							"src": "12022:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1475,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "11997:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 1482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11997:38:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1483,
																				"nodeType": "EmitStatement",
																				"src": "11992:43:9"
																			},
																			{
																				"condition": {
																					"id": 1494,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "12062:70:9",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1487,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12102:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1486,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "12094:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1485,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "12094:7:9",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1488,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12094:10:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1489,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1386,
																								"src": "12106:2:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1491,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "12110:14:9",
																								"subExpression": {
																									"id": 1490,
																									"name": "updatedIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1463,
																									"src": "12110:12:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1492,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1390,
																								"src": "12126:5:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1484,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2106,
																							"src": "12063:30:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1493,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12063:69:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1499,
																				"nodeType": "IfStatement",
																				"src": "12058:174:9",
																				"trueBody": {
																					"id": 1498,
																					"nodeType": "Block",
																					"src": "12134:98:9",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1495,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2175,
																									"src": "12168:38:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1496,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12168:40:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1497,
																							"nodeType": "RevertStatement",
																							"src": "12161:47:9"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1501,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "12259:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1502,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "12274:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12259:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1504,
																	"nodeType": "DoWhileStatement",
																	"src": "11966:313:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1505,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "12343:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1506,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "12360:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12343:29:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1511,
																	"nodeType": "IfStatement",
																	"src": "12339:43:9",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1508,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "12374:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12374:8:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1510,
																		"nodeType": "ExpressionStatement",
																		"src": "12374:8:9"
																	}
																}
															]
														}
													},
													{
														"expression": {
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1530,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "12571:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1531,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "12587:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12571:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1533,
														"nodeType": "ExpressionStatement",
														"src": "12571:28:9"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12650:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12642:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12642:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "12654:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1541,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "12658:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1542,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "12672:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1535,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "12621:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12621:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "12621:60:9"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "10575:359:9",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10949:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10977:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "10969:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10969:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "10998:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "10990:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10990:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "11030:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "11017:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11017:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10958:84:9"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11052:0:9"
									},
									"scope": 2133,
									"src": "10940:1749:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "13002:1119:9",
										"statements": [
											{
												"assignments": [
													1555
												],
												"declarations": [
													{
														"constant": false,
														"id": 1555,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "13021:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1663,
														"src": "13013:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1554,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13013:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"id": 1556,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 782,
													"src": "13036:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13013:36:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1558,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "13064:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13078:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13070:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1559,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13070:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13070:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13064:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1567,
												"nodeType": "IfStatement",
												"src": "13060:48:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1564,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "13089:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13089:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1566,
													"nodeType": "RevertStatement",
													"src": "13082:26:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1568,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "13123:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13135:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13123:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1574,
												"nodeType": "IfStatement",
												"src": "13119:44:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1571,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "13145:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13145:18:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1573,
													"nodeType": "RevertStatement",
													"src": "13138:25:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13206:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13198:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1576,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13198:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13198:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1580,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "13210:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1581,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "13214:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1582,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "13228:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1575,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "13176:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13176:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "13176:61:9"
											},
											{
												"id": 1652,
												"nodeType": "UncheckedBlock",
												"src": "13489:554:9",
												"statements": [
													{
														"expression": {
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1585,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "13514:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1587,
																	"indexExpression": {
																		"id": 1586,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "13527:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13514:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2197_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "13531:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2190,
																"src": "13514:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1591,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "13549:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13542:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1589,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13542:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13542:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "13514:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1594,
														"nodeType": "ExpressionStatement",
														"src": "13514:44:9"
													},
													{
														"expression": {
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1595,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "13573:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1597,
																	"indexExpression": {
																		"id": 1596,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "13586:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13573:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2197_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "13590:12:9",
																"memberName": "numberMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2192,
																"src": "13573:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1601,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "13613:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13606:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1599,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13606:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13606:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "13573:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1604,
														"nodeType": "ExpressionStatement",
														"src": "13573:49:9"
													},
													{
														"expression": {
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1605,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "13639:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1607,
																	"indexExpression": {
																		"id": 1606,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1555,
																		"src": "13651:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13639:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1608,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "13665:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2183,
																"src": "13639:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1609,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1549,
																"src": "13672:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13639:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1611,
														"nodeType": "ExpressionStatement",
														"src": "13639:35:9"
													},
													{
														"expression": {
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1612,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "13689:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1614,
																	"indexExpression": {
																		"id": 1613,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1555,
																		"src": "13701:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13689:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "13715:14:9",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2185,
																"src": "13689:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1618,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "13739:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13745:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "13739:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13732:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1616,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13732:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13732:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "13689:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1622,
														"nodeType": "ExpressionStatement",
														"src": "13689:66:9"
													},
													{
														"assignments": [
															1624
														],
														"declarations": [
															{
																"constant": false,
																"id": 1624,
																"mutability": "mutable",
																"name": "updatedIndex",
																"nameLocation": "13780:12:9",
																"nodeType": "VariableDeclaration",
																"scope": 1652,
																"src": "13772:20:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1623,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13772:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1626,
														"initialValue": {
															"id": 1625,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "13795:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13772:35:9"
													},
													{
														"assignments": [
															1628
														],
														"declarations": [
															{
																"constant": false,
																"id": 1628,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "13830:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1652,
																"src": "13822:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1627,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13822:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1632,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1629,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "13836:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1630,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1551,
																"src": "13851:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13836:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13822:37:9"
													},
													{
														"body": {
															"id": 1643,
															"nodeType": "Block",
															"src": "13879:80:9",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 1636,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13920:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1635,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "13912:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1634,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "13912:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13912:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1638,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1549,
																				"src": "13924:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "13928:14:9",
																				"subExpression": {
																					"id": 1639,
																					"name": "updatedIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1624,
																					"src": "13928:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1633,
																			"name": "Transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "13903:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13903:40:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1642,
																	"nodeType": "EmitStatement",
																	"src": "13898:45:9"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1644,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "13967:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1645,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "13982:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13967:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1647,
														"nodeType": "DoWhileStatement",
														"src": "13876:111:9"
													},
													{
														"expression": {
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1648,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "14003:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1649,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "14019:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14003:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1651,
														"nodeType": "ExpressionStatement",
														"src": "14003:28:9"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14082:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14074:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1654,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14074:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14074:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1658,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "14086:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1659,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "14090:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1660,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "14104:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1653,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "14053:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14053:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "14053:60:9"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "12697:245:9",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12957:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12971:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "12963:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12963:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "12983:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "12975:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12975:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12962:30:9"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13002:0:9"
									},
									"scope": 2133,
									"src": "12948:1173:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "14479:2000:9",
										"statements": [
											{
												"assignments": [
													1676
												],
												"declarations": [
													{
														"constant": false,
														"id": 1676,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "14512:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1833,
														"src": "14490:35:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 1675,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1674,
																"name": "TokenOwnership",
																"nameLocations": [
																	"14490:14:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2188,
																"src": "14490:14:9"
															},
															"referencedDeclaration": 2188,
															"src": "14490:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1680,
												"initialValue": {
													"arguments": [
														{
															"id": 1678,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "14541:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1677,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "14528:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2188_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14528:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14490:59:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1681,
															"name": "prevOwnership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "14566:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14580:4:9",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2183,
														"src": "14566:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1683,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "14588:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14566:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1688,
												"nodeType": "IfStatement",
												"src": "14562:67:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1685,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "14601:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14601:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1687,
													"nodeType": "RevertStatement",
													"src": "14594:35:9"
												}
											},
											{
												"assignments": [
													1690
												],
												"declarations": [
													{
														"constant": false,
														"id": 1690,
														"mutability": "mutable",
														"name": "isApprovedOrOwner",
														"nameLocation": "14647:17:9",
														"nodeType": "VariableDeclaration",
														"scope": 1833,
														"src": "14642:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1689,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14642:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1709,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1691,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "14668:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14668:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "14684:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "14668:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1696,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1667,
																			"src": "14709:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1697,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 467,
																				"src": "14715:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14715:12:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1695,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1271,
																		"src": "14692:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14692:36:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "14668:60:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1702,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "14744:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1701,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "14732:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14732:20:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1704,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "14756:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14756:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14732:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14668:100:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1708,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14667:102:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14642:127:9"
											},
											{
												"condition": {
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "14786:18:9",
													"subExpression": {
														"id": 1710,
														"name": "isApprovedOrOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "14787:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1715,
												"nodeType": "IfStatement",
												"src": "14782:66:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1712,
															"name": "TransferCallerNotOwnerNorApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2169,
															"src": "14813:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14813:35:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1714,
													"nodeType": "RevertStatement",
													"src": "14806:42:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1716,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "14863:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14877:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14869:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1717,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14869:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14869:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14863:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1725,
												"nodeType": "IfStatement",
												"src": "14859:52:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1722,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2178,
															"src": "14888:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14888:23:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1724,
													"nodeType": "RevertStatement",
													"src": "14881:30:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1727,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "14946:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1728,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "14952:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1729,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "14956:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14965:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1726,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "14924:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14924:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "14924:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15049:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15041:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1734,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15041:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15041:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1738,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "15053:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1739,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "15062:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1733,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2051,
														"src": "15032:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15032:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "15032:35:9"
											},
											{
												"id": 1819,
												"nodeType": "UncheckedBlock",
												"src": "15338:1036:9",
												"statements": [
													{
														"expression": {
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1742,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "15363:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1744,
																	"indexExpression": {
																		"id": 1743,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "15376:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15363:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2197_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "15382:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2190,
																"src": "15363:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15393:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "15363:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1748,
														"nodeType": "ExpressionStatement",
														"src": "15363:31:9"
													},
													{
														"expression": {
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1749,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "15409:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1751,
																	"indexExpression": {
																		"id": 1750,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "15422:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15409:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2197_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "15426:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2190,
																"src": "15409:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15437:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "15409:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1755,
														"nodeType": "ExpressionStatement",
														"src": "15409:29:9"
													},
													{
														"assignments": [
															1758
														],
														"declarations": [
															{
																"constant": false,
																"id": 1758,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "15478:8:9",
																"nodeType": "VariableDeclaration",
																"scope": 1819,
																"src": "15455:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 1757,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 1756,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"15455:14:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2188,
																		"src": "15455:14:9"
																	},
																	"referencedDeclaration": 2188,
																	"src": "15455:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1762,
														"initialValue": {
															"baseExpression": {
																"id": 1759,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "15489:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 1761,
															"indexExpression": {
																"id": 1760,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "15501:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15489:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15455:54:9"
													},
													{
														"expression": {
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1763,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1758,
																	"src": "15524:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "15533:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2183,
																"src": "15524:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1766,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "15540:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15524:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1768,
														"nodeType": "ExpressionStatement",
														"src": "15524:18:9"
													},
													{
														"expression": {
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1769,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1758,
																	"src": "15557:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "15566:14:9",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2185,
																"src": "15557:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1774,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "15590:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15596:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "15590:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15583:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1772,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "15583:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15583:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "15557:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1778,
														"nodeType": "ExpressionStatement",
														"src": "15557:49:9"
													},
													{
														"assignments": [
															1780
														],
														"declarations": [
															{
																"constant": false,
																"id": 1780,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "15866:11:9",
																"nodeType": "VariableDeclaration",
																"scope": 1819,
																"src": "15858:19:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1779,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15858:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1784,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1781,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "15880:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15890:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "15880:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15858:33:9"
													},
													{
														"assignments": [
															1787
														],
														"declarations": [
															{
																"constant": false,
																"id": 1787,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "15929:8:9",
																"nodeType": "VariableDeclaration",
																"scope": 1819,
																"src": "15906:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 1786,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 1785,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"15906:14:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2188,
																		"src": "15906:14:9"
																	},
																	"referencedDeclaration": 2188,
																	"src": "15906:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1791,
														"initialValue": {
															"baseExpression": {
																"id": 1788,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "15940:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 1790,
															"indexExpression": {
																"id": 1789,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "15952:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15940:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15906:58:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1792,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "15983:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15992:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2183,
																"src": "15983:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16008:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16000:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1794,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16000:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16000:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15983:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1818,
														"nodeType": "IfStatement",
														"src": "15979:384:9",
														"trueBody": {
															"id": 1817,
															"nodeType": "Block",
															"src": "16012:351:9",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1799,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "16178:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1800,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "16193:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16178:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1816,
																	"nodeType": "IfStatement",
																	"src": "16174:174:9",
																	"trueBody": {
																		"id": 1815,
																		"nodeType": "Block",
																		"src": "16208:140:9",
																		"statements": [
																			{
																				"expression": {
																					"id": 1806,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 1802,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1787,
																							"src": "16231:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 1804,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "16240:4:9",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2183,
																						"src": "16231:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 1805,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1667,
																						"src": "16247:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "16231:20:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 1807,
																				"nodeType": "ExpressionStatement",
																				"src": "16231:20:9"
																			},
																			{
																				"expression": {
																					"id": 1813,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 1808,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1787,
																							"src": "16274:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 1810,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "16283:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2185,
																						"src": "16274:23:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 1811,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1676,
																							"src": "16300:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1812,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "16314:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2185,
																						"src": "16300:28:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "16274:54:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 1814,
																				"nodeType": "ExpressionStatement",
																				"src": "16274:54:9"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1821,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "16400:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1822,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "16406:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1823,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "16410:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1820,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "16391:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16391:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1825,
												"nodeType": "EmitStatement",
												"src": "16386:32:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1827,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "16450:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1828,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "16456:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1829,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "16460:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16469:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1826,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "16429:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16429:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1832,
												"nodeType": "ExpressionStatement",
												"src": "16429:42:9"
											}
										]
									},
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "14129:240:9",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "14384:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14412:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "14404:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14404:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14435:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "14427:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14427:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "14448:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14393:77:9"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14479:0:9"
									},
									"scope": 2133,
									"src": "14375:2104:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1845,
										"nodeType": "Block",
										"src": "16606:40:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1841,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1837,
															"src": "16623:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16632:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1840,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1846,
															2028
														],
														"referencedDeclaration": 2028,
														"src": "16617:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16617:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "16617:21:9"
											}
										]
									},
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "16487:64:9",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "16566:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16580:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "16572:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16572:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16571:17:9"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16606:0:9"
									},
									"scope": 2133,
									"src": "16557:89:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "16944:2305:9",
										"statements": [
											{
												"assignments": [
													1856
												],
												"declarations": [
													{
														"constant": false,
														"id": 1856,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "16977:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 2027,
														"src": "16955:35:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 1855,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1854,
																"name": "TokenOwnership",
																"nameLocations": [
																	"16955:14:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2188,
																"src": "16955:14:9"
															},
															"referencedDeclaration": 2188,
															"src": "16955:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1860,
												"initialValue": {
													"arguments": [
														{
															"id": 1858,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "17006:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1857,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "16993:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2188_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16993:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16955:59:9"
											},
											{
												"assignments": [
													1862
												],
												"declarations": [
													{
														"constant": false,
														"id": 1862,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "17035:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2027,
														"src": "17027:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1861,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17027:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1865,
												"initialValue": {
													"expression": {
														"id": 1863,
														"name": "prevOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "17042:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 1864,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17056:4:9",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2183,
													"src": "17042:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17027:33:9"
											},
											{
												"condition": {
													"id": 1866,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1851,
													"src": "17077:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1895,
												"nodeType": "IfStatement",
												"src": "17073:256:9",
												"trueBody": {
													"id": 1894,
													"nodeType": "Block",
													"src": "17092:237:9",
													"statements": [
														{
															"assignments": [
																1868
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1868,
																	"mutability": "mutable",
																	"name": "isApprovedOrOwner",
																	"nameLocation": "17112:17:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1894,
																	"src": "17107:22:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1867,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "17107:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1887,
															"initialValue": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 1872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1869,
																						"name": "_msgSender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 467,
																						"src": "17133:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 1870,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17133:12:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 1871,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1862,
																					"src": "17149:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "17133:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1874,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1862,
																						"src": "17174:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1875,
																							"name": "_msgSender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 467,
																							"src": "17180:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 1876,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "17180:12:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1873,
																					"name": "isApprovedForAll",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1271,
																					"src": "17157:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address,address) view returns (bool)"
																					}
																				},
																				"id": 1877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17157:36:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "17133:60:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1880,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1849,
																						"src": "17209:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1879,
																					"name": "getApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1219,
																					"src": "17197:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																						"typeString": "function (uint256) view returns (address)"
																					}
																				},
																				"id": 1881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17197:20:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1882,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 467,
																					"src": "17221:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17221:12:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "17197:36:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "17133:100:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1886,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17132:102:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17107:127:9"
														},
														{
															"condition": {
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "17255:18:9",
																"subExpression": {
																	"id": 1888,
																	"name": "isApprovedOrOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "17256:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1893,
															"nodeType": "IfStatement",
															"src": "17251:66:9",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1890,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2169,
																		"src": "17282:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17282:35:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1892,
																"nodeType": "RevertStatement",
																"src": "17275:42:9"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1897,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "17363:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17377:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17369:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1898,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17369:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17369:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1902,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "17381:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17390:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1896,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "17341:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17341:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "17341:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17474:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17466:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1907,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17466:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17466:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1911,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "17478:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1912,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "17487:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1906,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2051,
														"src": "17457:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17457:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "17457:35:9"
											},
											{
												"id": 2003,
												"nodeType": "UncheckedBlock",
												"src": "17763:1213:9",
												"statements": [
													{
														"assignments": [
															1917
														],
														"declarations": [
															{
																"constant": false,
																"id": 1917,
																"mutability": "mutable",
																"name": "addressData",
																"nameLocation": "17808:11:9",
																"nodeType": "VariableDeclaration",
																"scope": 2003,
																"src": "17788:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$2197_storage_ptr",
																	"typeString": "struct IERC721A.AddressData"
																},
																"typeName": {
																	"id": 1916,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 1915,
																		"name": "AddressData",
																		"nameLocations": [
																			"17788:11:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2197,
																		"src": "17788:11:9"
																	},
																	"referencedDeclaration": 2197,
																	"src": "17788:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2197_storage_ptr",
																		"typeString": "struct IERC721A.AddressData"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1921,
														"initialValue": {
															"baseExpression": {
																"id": 1918,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "17822:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2197_storage_$",
																	"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																}
															},
															"id": 1920,
															"indexExpression": {
																"id": 1919,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "17835:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17822:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$2197_storage",
																"typeString": "struct IERC721A.AddressData storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17788:52:9"
													},
													{
														"expression": {
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1922,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1917,
																	"src": "17855:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2197_storage_ptr",
																		"typeString": "struct IERC721A.AddressData storage pointer"
																	}
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17867:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2190,
																"src": "17855:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17878:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17855:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1927,
														"nodeType": "ExpressionStatement",
														"src": "17855:24:9"
													},
													{
														"expression": {
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1928,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1917,
																	"src": "17894:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2197_storage_ptr",
																		"typeString": "struct IERC721A.AddressData storage pointer"
																	}
																},
																"id": 1930,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17906:12:9",
																"memberName": "numberBurned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2194,
																"src": "17894:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17922:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17894:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1933,
														"nodeType": "ExpressionStatement",
														"src": "17894:29:9"
													},
													{
														"assignments": [
															1936
														],
														"declarations": [
															{
																"constant": false,
																"id": 1936,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "18045:8:9",
																"nodeType": "VariableDeclaration",
																"scope": 2003,
																"src": "18022:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 1935,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 1934,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"18022:14:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2188,
																		"src": "18022:14:9"
																	},
																	"referencedDeclaration": 2188,
																	"src": "18022:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1940,
														"initialValue": {
															"baseExpression": {
																"id": 1937,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "18056:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 1939,
															"indexExpression": {
																"id": 1938,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "18068:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18056:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18022:54:9"
													},
													{
														"expression": {
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1941,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "18091:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 1943,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "18100:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2183,
																"src": "18091:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1944,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "18107:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18091:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1946,
														"nodeType": "ExpressionStatement",
														"src": "18091:20:9"
													},
													{
														"expression": {
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1947,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "18126:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 1949,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "18135:14:9",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2185,
																"src": "18126:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1952,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "18159:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18165:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "18159:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18152:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1950,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "18152:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18152:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "18126:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1956,
														"nodeType": "ExpressionStatement",
														"src": "18126:49:9"
													},
													{
														"expression": {
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1957,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "18190:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "18199:6:9",
																"memberName": "burned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2187,
																"src": "18190:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "74727565",
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18208:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "18190:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1962,
														"nodeType": "ExpressionStatement",
														"src": "18190:22:9"
													},
													{
														"assignments": [
															1964
														],
														"declarations": [
															{
																"constant": false,
																"id": 1964,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "18468:11:9",
																"nodeType": "VariableDeclaration",
																"scope": 2003,
																"src": "18460:19:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1963,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18460:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1968,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1965,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "18482:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18492:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18482:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18460:33:9"
													},
													{
														"assignments": [
															1971
														],
														"declarations": [
															{
																"constant": false,
																"id": 1971,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "18531:8:9",
																"nodeType": "VariableDeclaration",
																"scope": 2003,
																"src": "18508:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 1970,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 1969,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"18508:14:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2188,
																		"src": "18508:14:9"
																	},
																	"referencedDeclaration": 2188,
																	"src": "18508:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1975,
														"initialValue": {
															"baseExpression": {
																"id": 1972,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "18542:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2188_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 1974,
															"indexExpression": {
																"id": 1973,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "18554:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18542:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18508:58:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1976,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1971,
																	"src": "18585:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18594:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2183,
																"src": "18585:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18610:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18602:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1978,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18602:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18602:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18585:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2002,
														"nodeType": "IfStatement",
														"src": "18581:384:9",
														"trueBody": {
															"id": 2001,
															"nodeType": "Block",
															"src": "18614:351:9",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1983,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "18780:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1984,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "18795:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18780:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2000,
																	"nodeType": "IfStatement",
																	"src": "18776:174:9",
																	"trueBody": {
																		"id": 1999,
																		"nodeType": "Block",
																		"src": "18810:140:9",
																		"statements": [
																			{
																				"expression": {
																					"id": 1990,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 1986,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1971,
																							"src": "18833:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 1988,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "18842:4:9",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2183,
																						"src": "18833:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 1989,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1862,
																						"src": "18849:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "18833:20:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 1991,
																				"nodeType": "ExpressionStatement",
																				"src": "18833:20:9"
																			},
																			{
																				"expression": {
																					"id": 1997,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 1992,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1971,
																							"src": "18876:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2188_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 1994,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "18885:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2185,
																						"src": "18876:23:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 1995,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1856,
																							"src": "18902:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2188_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1996,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "18916:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2185,
																						"src": "18902:28:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "18876:54:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 1998,
																				"nodeType": "ExpressionStatement",
																				"src": "18876:54:9"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2005,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "19002:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19016:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19008:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2006,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19008:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19008:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2010,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "19020:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2004,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "18993:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18993:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2012,
												"nodeType": "EmitStatement",
												"src": "18988:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2014,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "19060:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19074:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19066:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2015,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19066:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19066:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2019,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "19078:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19087:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2013,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "19039:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19039:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2022,
												"nodeType": "ExpressionStatement",
												"src": "19039:50:9"
											},
											{
												"id": 2026,
												"nodeType": "UncheckedBlock",
												"src": "19191:51:9",
												"statements": [
													{
														"expression": {
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "19216:14:9",
															"subExpression": {
																"id": 2023,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "19216:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2025,
														"nodeType": "ExpressionStatement",
														"src": "19216:14:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "16654:215:9",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "16884:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16898:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "16890:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16890:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "16912:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "16907:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16907:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16889:37:9"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16944:0:9"
									},
									"scope": 2133,
									"src": "16875:2374:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2050,
										"nodeType": "Block",
										"src": "19471:92:9",
										"statements": [
											{
												"expression": {
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2038,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "19482:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2040,
														"indexExpression": {
															"id": 2039,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "19498:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19482:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2041,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "19509:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19482:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2043,
												"nodeType": "ExpressionStatement",
												"src": "19482:29:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2045,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "19536:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2046,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "19543:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2047,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "19547:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2044,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "19527:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19527:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2049,
												"nodeType": "EmitStatement",
												"src": "19522:33:9"
											}
										]
									},
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "19257:104:9",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 2051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19376:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19403:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "19395:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19395:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19424:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "19416:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19416:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19450:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "19442:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19442:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19384:78:9"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19471:0:9"
									},
									"scope": 2133,
									"src": "19367:196:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2105,
										"nodeType": "Block",
										"src": "20224:498:9",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 2086,
															"nodeType": "Block",
															"src": "20336:89:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2078,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "20358:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 2080,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2056,
																							"src": "20384:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2079,
																						"name": "IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 133,
																						"src": "20368:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																							"typeString": "type(contract IERC721Receiver)"
																						}
																					},
																					"id": 2081,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20368:19:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																						"typeString": "contract IERC721Receiver"
																					}
																				},
																				"id": 2082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "20388:16:9",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 132,
																				"src": "20368:36:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 2083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "20405:8:9",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "20368:45:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "20358:55:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 2064,
																	"id": 2085,
																	"nodeType": "Return",
																	"src": "20351:62:9"
																}
															]
														},
														"errorName": "",
														"id": 2087,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2077,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2076,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "20328:6:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2087,
																	"src": "20321:13:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 2075,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "20321:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "20320:15:9"
														},
														"src": "20312:113:9"
													},
													{
														"block": {
															"id": 2102,
															"nodeType": "Block",
															"src": "20454:261:9",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2091,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2089,
																				"src": "20473:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "20480:6:9",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "20473:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20490:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "20473:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2100,
																		"nodeType": "Block",
																		"src": "20581:123:9",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "20609:80:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "20643:2:9",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "20647:6:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "20639:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20639:15:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "20662:6:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "20656:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20656:13:9"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "20632:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20632:38:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "20632:38:9"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 2089,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "20647:6:9",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2089,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "20662:6:9",
																						"valueSize": 1
																					}
																				],
																				"id": 2099,
																				"nodeType": "InlineAssembly",
																				"src": "20600:89:9"
																			}
																		]
																	},
																	"id": 2101,
																	"nodeType": "IfStatement",
																	"src": "20469:235:9",
																	"trueBody": {
																		"id": 2098,
																		"nodeType": "Block",
																		"src": "20493:82:9",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2095,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2175,
																						"src": "20519:38:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 2096,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20519:40:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2097,
																				"nodeType": "RevertStatement",
																				"src": "20512:47:9"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 2103,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2090,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2089,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "20446:6:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2103,
																	"src": "20433:19:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2088,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "20433:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "20432:21:9"
														},
														"src": "20426:289:9"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2069,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "20276:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20276:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2071,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2054,
															"src": "20290:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2072,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "20296:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2073,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "20305:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2066,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2056,
																	"src": "20255:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2065,
																"name": "IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "20239:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																	"typeString": "type(contract IERC721Receiver)"
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20239:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																"typeString": "contract IERC721Receiver"
															}
														},
														"id": 2068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20259:16:9",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 132,
														"src": "20239:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20239:72:9",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 2104,
												"nodeType": "TryStatement",
												"src": "20235:480:9"
											}
										]
									},
									"documentation": {
										"id": 2052,
										"nodeType": "StructuredDocumentation",
										"src": "19571:478:9",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 2106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "20064:30:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20113:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "20105:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20105:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20136:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "20128:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20128:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20157:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "20149:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20149:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "20188:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "20175:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2059,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20175:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20094:106:9"
									},
									"returnParameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "20218:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20218:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20217:6:9"
									},
									"scope": 2133,
									"src": "20055:667:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2118,
										"nodeType": "Block",
										"src": "21527:2:9",
										"statements": []
									},
									"documentation": {
										"id": 2107,
										"nodeType": "StructuredDocumentation",
										"src": "20730:634:9",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "21379:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21419:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "21411:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21411:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21442:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "21434:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21434:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "21463:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "21455:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "21494:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "21486:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21486:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21400:109:9"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21527:0:9"
									},
									"scope": 2133,
									"src": "21370:159:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2131,
										"nodeType": "Block",
										"src": "22344:2:9",
										"statements": []
									},
									"documentation": {
										"id": 2120,
										"nodeType": "StructuredDocumentation",
										"src": "21537:645:9",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "22197:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22236:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "22228:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22228:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22259:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "22251:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22251:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "22280:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "22272:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22272:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "22311:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "22303:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22303:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22217:109:9"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22344:0:9"
									},
									"scope": 2133,
									"src": "22188:158:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2134,
							"src": "1286:21063:9",
							"usedErrors": [
								2145,
								2148,
								2151,
								2154,
								2157,
								2160,
								2163,
								2166,
								2169,
								2172,
								2175,
								2178,
								2181
							]
						}
					],
					"src": "437:21912:9"
				},
				"id": 9
			},
			"utils/IERC721A.sol": {
				"ast": {
					"absolutePath": "utils/IERC721A.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721A": [
							2204
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 2205,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "437:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 2136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2205,
							"sourceUnit": 116,
							"src": "601:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 2137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2205,
							"sourceUnit": 161,
							"src": "661:77:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2139,
										"name": "IERC721",
										"nameLocations": [
											"827:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "827:7:10"
									},
									"id": 2140,
									"nodeType": "InheritanceSpecifier",
									"src": "827:7:10"
								},
								{
									"baseName": {
										"id": 2141,
										"name": "IERC721Metadata",
										"nameLocations": [
											"836:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 160,
										"src": "836:15:10"
									},
									"id": 2142,
									"nodeType": "InheritanceSpecifier",
									"src": "836:15:10"
								}
							],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2138,
								"nodeType": "StructuredDocumentation",
								"src": "742:61:10",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 2204,
							"linearizedBaseContracts": [
								2204,
								160,
								115,
								739
							],
							"name": "IERC721A",
							"nameLocation": "815:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2143,
										"nodeType": "StructuredDocumentation",
										"src": "859:78:10",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 2145,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "949:33:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:2:10"
									},
									"src": "943:42:10"
								},
								{
									"documentation": {
										"id": 2146,
										"nodeType": "StructuredDocumentation",
										"src": "993:46:10",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 2148,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "1051:32:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1083:2:10"
									},
									"src": "1045:41:10"
								},
								{
									"documentation": {
										"id": 2149,
										"nodeType": "StructuredDocumentation",
										"src": "1094:68:10",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 2151,
									"name": "ApproveToCaller",
									"nameLocation": "1174:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1189:2:10"
									},
									"src": "1168:24:10"
								},
								{
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "1200:68:10",
										"text": " The caller cannot approve to the current owner."
									},
									"errorSelector": "943f7b8c",
									"id": 2154,
									"name": "ApprovalToCurrentOwner",
									"nameLocation": "1280:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1302:2:10"
									},
									"src": "1274:31:10"
								},
								{
									"documentation": {
										"id": 2155,
										"nodeType": "StructuredDocumentation",
										"src": "1313:67:10",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 2157,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "1392:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1418:2:10"
									},
									"src": "1386:35:10"
								},
								{
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "1429:53:10",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 2160,
									"name": "MintToZeroAddress",
									"nameLocation": "1494:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1511:2:10"
									},
									"src": "1488:26:10"
								},
								{
									"documentation": {
										"id": 2161,
										"nodeType": "StructuredDocumentation",
										"src": "1522:74:10",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 2163,
									"name": "MintZeroQuantity",
									"nameLocation": "1608:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1624:2:10"
									},
									"src": "1602:25:10"
								},
								{
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "1635:46:10",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 2166,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "1693:29:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:2:10"
									},
									"src": "1687:38:10"
								},
								{
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "1733:78:10",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 2169,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1823:33:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1856:2:10"
									},
									"src": "1817:42:10"
								},
								{
									"documentation": {
										"id": 2170,
										"nodeType": "StructuredDocumentation",
										"src": "1867:55:10",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 2172,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1934:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1960:2:10"
									},
									"src": "1928:35:10"
								},
								{
									"documentation": {
										"id": 2173,
										"nodeType": "StructuredDocumentation",
										"src": "1971:111:10",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 2175,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "2094:38:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2132:2:10"
									},
									"src": "2088:47:10"
								},
								{
									"documentation": {
										"id": 2176,
										"nodeType": "StructuredDocumentation",
										"src": "2143:57:10",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 2178,
									"name": "TransferToZeroAddress",
									"nameLocation": "2212:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:10"
									},
									"src": "2206:30:10"
								},
								{
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "2244:46:10",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 2181,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "2302:27:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2329:2:10"
									},
									"src": "2296:36:10"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 2188,
									"members": [
										{
											"constant": false,
											"id": 2183,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "2478:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "2470:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2182,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2470:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2185,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2593:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "2586:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2184,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2586:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2187,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2670:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "2665:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2665:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "2406:14:10",
									"nodeType": "StructDefinition",
									"scope": 2204,
									"src": "2399:285:10",
									"visibility": "public"
								},
								{
									"canonicalName": "IERC721A.AddressData",
									"id": 2197,
									"members": [
										{
											"constant": false,
											"id": 2190,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "2844:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 2197,
											"src": "2837:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2189,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2837:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2192,
											"mutability": "mutable",
											"name": "numberMinted",
											"nameLocation": "2945:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 2197,
											"src": "2938:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2191,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2938:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2194,
											"mutability": "mutable",
											"name": "numberBurned",
											"nameLocation": "3051:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 2197,
											"src": "3044:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2193,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "3044:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2196,
											"mutability": "mutable",
											"name": "aux",
											"nameLocation": "3282:3:10",
											"nodeType": "VariableDeclaration",
											"scope": 2197,
											"src": "3275:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2195,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "3275:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressData",
									"nameLocation": "2758:11:10",
									"nodeType": "StructDefinition",
									"scope": 2204,
									"src": "2751:542:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2198,
										"nodeType": "StructuredDocumentation",
										"src": "3301:197:10",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 2203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3513:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3524:2:10"
									},
									"returnParameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "3550:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3550:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3549:9:10"
									},
									"scope": 2204,
									"src": "3504:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2205,
							"src": "805:2757:10",
							"usedErrors": [
								2145,
								2148,
								2151,
								2154,
								2157,
								2160,
								2163,
								2166,
								2169,
								2172,
								2175,
								2178,
								2181
							]
						}
					],
					"src": "437:3125:10"
				},
				"id": 10
			}
		}
	}
}